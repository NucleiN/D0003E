
lab41.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  0000232c  000023c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000232c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800150  00800150  00002410  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002410  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002440  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000278  00000000  00000000  00002480  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003208  00000000  00000000  000026f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011b4  00000000  00000000  00005900  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000209f  00000000  00000000  00006ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c5c  00000000  00000000  00008b54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008344  00000000  00000000  000097b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002c00  00000000  00000000  00011af4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  000146f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002e29  00000000  00000000  0001490c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	2d c0       	rjmp	.+90     	; 0x5c <__ctors_end>
       2:	00 00       	nop
       4:	58 c5       	rjmp	.+2736   	; 0xab6 <__vector_1>
       6:	00 00       	nop
       8:	c1 c5       	rjmp	.+2946   	; 0xb8c <__vector_2>
       a:	00 00       	nop
       c:	2a c6       	rjmp	.+3156   	; 0xc62 <__vector_3>
       e:	00 00       	nop
      10:	93 c6       	rjmp	.+3366   	; 0xd38 <__vector_4>
      12:	00 00       	nop
      14:	fc c6       	rjmp	.+3576   	; 0xe0e <__vector_5>
      16:	00 00       	nop
      18:	3d c0       	rjmp	.+122    	; 0x94 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	0c 94 d0 0d 	jmp	0x1ba0	; 0x1ba0 <__vector_7>
      20:	39 c0       	rjmp	.+114    	; 0x94 <__bad_interrupt>
      22:	00 00       	nop
      24:	0c 94 7e 0d 	jmp	0x1afc	; 0x1afc <__vector_9>
      28:	5d c7       	rjmp	.+3770   	; 0xee4 <__vector_10>
      2a:	00 00       	nop
      2c:	c6 c7       	rjmp	.+3980   	; 0xfba <__vector_11>
      2e:	00 00       	nop
      30:	0c 94 48 08 	jmp	0x1090	; 0x1090 <__vector_12>
      34:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__vector_13>
      38:	0c 94 1e 09 	jmp	0x123c	; 0x123c <__vector_14>
      3c:	0c 94 89 09 	jmp	0x1312	; 0x1312 <__vector_15>
      40:	0c 94 f4 09 	jmp	0x13e8	; 0x13e8 <__vector_16>
      44:	0c 94 5f 0a 	jmp	0x14be	; 0x14be <__vector_17>
      48:	0c 94 ca 0a 	jmp	0x1594	; 0x1594 <__vector_18>
      4c:	0c 94 35 0b 	jmp	0x166a	; 0x166a <__vector_19>
      50:	0c 94 a0 0b 	jmp	0x1740	; 0x1740 <__vector_20>
      54:	0c 94 0b 0c 	jmp	0x1816	; 0x1816 <__vector_21>
      58:	0c 94 76 0c 	jmp	0x18ec	; 0x18ec <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ec e2       	ldi	r30, 0x2C	; 44
      70:	f3 e2       	ldi	r31, 0x23	; 35
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a0 35       	cpi	r26, 0x50	; 80
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a0 e5       	ldi	r26, 0x50	; 80
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a3 3a       	cpi	r26, 0xA3	; 163
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	94 d3       	rcall	.+1832   	; 0x7b8 <main>
      90:	0c 94 94 11 	jmp	0x2328	; 0x2328 <_exit>

00000094 <__bad_interrupt>:
      94:	b5 cf       	rjmp	.-150    	; 0x0 <__vectors>

00000096 <LCD_init>:

#include "codeUtils.h"

void LCD_init(void) {
    //		Enable LCD | LPow Waveform
    LCDCRA = (1 << LCDEN) | (1 << LCDAB);
      96:	80 ec       	ldi	r24, 0xC0	; 192
      98:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
    //		Async clksrc | 1/4 Duty | 25 segments
    LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
      9c:	87 eb       	ldi	r24, 0xB7	; 183
      9e:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
    //		divide by 8
    LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
      a2:	87 e0       	ldi	r24, 0x07	; 7
      a4:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
    //		CC Max 3.35V
    LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
      a8:	8f e0       	ldi	r24, 0x0F	; 15
      aa:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
      ae:	08 95       	ret

000000b0 <BTN_init>:
}

void BTN_init(void) {
    EIMSK |= (1 << PCIE1) | (1 << PCIE0);
      b0:	8d b3       	in	r24, 0x1d	; 29
      b2:	80 6c       	ori	r24, 0xC0	; 192
      b4:	8d bb       	out	0x1d, r24	; 29

    PCMSK1 |= (1 << PCINT15) | (1 << PCINT14) | (1 << PCINT12);
      b6:	ec e6       	ldi	r30, 0x6C	; 108
      b8:	f0 e0       	ldi	r31, 0x00	; 0
      ba:	80 81       	ld	r24, Z
      bc:	80 6d       	ori	r24, 0xD0	; 208
      be:	80 83       	st	Z, r24
    PORTB |= (1 << PINB7) | (1 << PINB6) | (1 << PINB4);
      c0:	85 b1       	in	r24, 0x05	; 5
      c2:	80 6d       	ori	r24, 0xD0	; 208
      c4:	85 b9       	out	0x05, r24	; 5

    PCMSK0 |= (1 << PCINT2) | (1 << PCINT3);
      c6:	eb e6       	ldi	r30, 0x6B	; 107
      c8:	f0 e0       	ldi	r31, 0x00	; 0
      ca:	80 81       	ld	r24, Z
      cc:	8c 60       	ori	r24, 0x0C	; 12
      ce:	80 83       	st	Z, r24
    PORTE |= (1 << PINE3) | (1 << PINE2);
      d0:	8e b1       	in	r24, 0x0e	; 14
      d2:	8c 60       	ori	r24, 0x0C	; 12
      d4:	8e b9       	out	0x0e, r24	; 14
      d6:	08 95       	ret

000000d8 <writeChar>:
}

static uint16_t charNrStencils[10] = {0x1551, 0x0110, 0x1E11, 0x1B11, 0x0B50, 0x1B41, 0x1F41, 0x0111, 0x1F51, 0x1B51};

void writeChar(char c, int pos) {
      d8:	ab 01       	movw	r20, r22
    if (pos < 0 && pos > 5) return;
    cli();
      da:	f8 94       	cli
    uint8_t ch = c;
    ch -= 0x30;
      dc:	80 53       	subi	r24, 0x30	; 48

    uint8_t shift = pos % 2 ? 0x04 : 0x00;
      de:	60 ff       	sbrs	r22, 0
      e0:	03 c0       	rjmp	.+6      	; 0xe8 <writeChar+0x10>
      e2:	74 e0       	ldi	r23, 0x04	; 4
    uint8_t mask = pos % 2 ? 0x0F : 0xF0;
      e4:	af e0       	ldi	r26, 0x0F	; 15
      e6:	02 c0       	rjmp	.+4      	; 0xec <writeChar+0x14>
    if (pos < 0 && pos > 5) return;
    cli();
    uint8_t ch = c;
    ch -= 0x30;

    uint8_t shift = pos % 2 ? 0x04 : 0x00;
      e8:	70 e0       	ldi	r23, 0x00	; 0
    uint8_t mask = pos % 2 ? 0x0F : 0xF0;
      ea:	a0 ef       	ldi	r26, 0xF0	; 240
    uint16_t stencil = charNrStencils[ch];
      ec:	e8 2f       	mov	r30, r24
      ee:	f0 e0       	ldi	r31, 0x00	; 0
      f0:	ee 0f       	add	r30, r30
      f2:	ff 1f       	adc	r31, r31
      f4:	e4 5c       	subi	r30, 0xC4	; 196
      f6:	fe 4f       	sbci	r31, 0xFE	; 254
      f8:	20 81       	ld	r18, Z
      fa:	31 81       	ldd	r19, Z+1	; 0x01

    uint8_t *memPtr = &LCDDR0;
    memPtr += pos / 2;
      fc:	fa 01       	movw	r30, r20
      fe:	ff 23       	and	r31, r31
     100:	0c f4       	brge	.+2      	; 0x104 <writeChar+0x2c>
     102:	31 96       	adiw	r30, 0x01	; 1
     104:	f5 95       	asr	r31
     106:	e7 95       	ror	r30
     108:	e4 51       	subi	r30, 0x14	; 20
     10a:	ff 4f       	sbci	r31, 0xFF	; 255
     10c:	af 01       	movw	r20, r30
     10e:	4c 5e       	subi	r20, 0xEC	; 236
     110:	5f 4f       	sbci	r21, 0xFF	; 255
    for (int iq = 0; iq < 4; iq++) {
        *memPtr &= mask;
        *memPtr |= (stencil & 0x0F) << shift;
     112:	c9 01       	movw	r24, r18
     114:	8f 70       	andi	r24, 0x0F	; 15
     116:	99 27       	eor	r25, r25
     118:	07 2e       	mov	r0, r23
     11a:	02 c0       	rjmp	.+4      	; 0x120 <writeChar+0x48>
     11c:	88 0f       	add	r24, r24
     11e:	99 1f       	adc	r25, r25
     120:	0a 94       	dec	r0
     122:	e2 f7       	brpl	.-8      	; 0x11c <writeChar+0x44>
    uint16_t stencil = charNrStencils[ch];

    uint8_t *memPtr = &LCDDR0;
    memPtr += pos / 2;
    for (int iq = 0; iq < 4; iq++) {
        *memPtr &= mask;
     124:	90 81       	ld	r25, Z
     126:	9a 23       	and	r25, r26
        *memPtr |= (stencil & 0x0F) << shift;
     128:	89 2b       	or	r24, r25
     12a:	80 83       	st	Z, r24
        stencil >>= 0x04;
     12c:	32 95       	swap	r19
     12e:	22 95       	swap	r18
     130:	2f 70       	andi	r18, 0x0F	; 15
     132:	23 27       	eor	r18, r19
     134:	3f 70       	andi	r19, 0x0F	; 15
     136:	23 27       	eor	r18, r19
        memPtr += 0x05;
     138:	35 96       	adiw	r30, 0x05	; 5
    uint8_t mask = pos % 2 ? 0x0F : 0xF0;
    uint16_t stencil = charNrStencils[ch];

    uint8_t *memPtr = &LCDDR0;
    memPtr += pos / 2;
    for (int iq = 0; iq < 4; iq++) {
     13a:	e4 17       	cp	r30, r20
     13c:	f5 07       	cpc	r31, r21
     13e:	49 f7       	brne	.-46     	; 0x112 <writeChar+0x3a>
        *memPtr &= mask;
        *memPtr |= (stencil & 0x0F) << shift;
        stencil >>= 0x04;
        memPtr += 0x05;
    }
    sei();
     140:	78 94       	sei
     142:	08 95       	ret

00000144 <clearChar>:
}

void clearChar(int pos) {
     144:	9c 01       	movw	r18, r24
    if (pos < 0 && pos > 5) return;
    cli();
     146:	f8 94       	cli
    uint8_t mask = pos % 2 ? 0x0F : 0xF0;
     148:	80 fd       	sbrc	r24, 0
     14a:	02 c0       	rjmp	.+4      	; 0x150 <clearChar+0xc>
     14c:	90 ef       	ldi	r25, 0xF0	; 240
     14e:	01 c0       	rjmp	.+2      	; 0x152 <clearChar+0xe>
     150:	9f e0       	ldi	r25, 0x0F	; 15

    uint8_t *memPtr = &LCDDR0;
    memPtr += pos / 2;
     152:	f9 01       	movw	r30, r18
     154:	ff 23       	and	r31, r31
     156:	0c f4       	brge	.+2      	; 0x15a <clearChar+0x16>
     158:	31 96       	adiw	r30, 0x01	; 1
     15a:	f5 95       	asr	r31
     15c:	e7 95       	ror	r30
     15e:	e4 51       	subi	r30, 0x14	; 20
     160:	ff 4f       	sbci	r31, 0xFF	; 255
     162:	9f 01       	movw	r18, r30
     164:	2c 5e       	subi	r18, 0xEC	; 236
     166:	3f 4f       	sbci	r19, 0xFF	; 255
    for (int i = 0; i < 4; i++) {
        *memPtr &= mask;
     168:	80 81       	ld	r24, Z
     16a:	89 23       	and	r24, r25
     16c:	80 83       	st	Z, r24
        memPtr += 0x05;
     16e:	35 96       	adiw	r30, 0x05	; 5
    cli();
    uint8_t mask = pos % 2 ? 0x0F : 0xF0;

    uint8_t *memPtr = &LCDDR0;
    memPtr += pos / 2;
    for (int i = 0; i < 4; i++) {
     170:	e2 17       	cp	r30, r18
     172:	f3 07       	cpc	r31, r19
     174:	c9 f7       	brne	.-14     	; 0x168 <clearChar+0x24>
        *memPtr &= mask;
        memPtr += 0x05;
    }
    sei();
     176:	78 94       	sei
     178:	08 95       	ret

0000017a <printAt>:
}

void printAt(int num, int pos) {
     17a:	1f 93       	push	r17
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	eb 01       	movw	r28, r22
    int pp = pos;
    writeChar(((num / 10) % 10) + 0x30, pp);
     182:	2a e0       	ldi	r18, 0x0A	; 10
     184:	30 e0       	ldi	r19, 0x00	; 0
     186:	b9 01       	movw	r22, r18
     188:	0e 94 cf 10 	call	0x219e	; 0x219e <__divmodhi4>
     18c:	18 2f       	mov	r17, r24
     18e:	cb 01       	movw	r24, r22
     190:	b9 01       	movw	r22, r18
     192:	0e 94 cf 10 	call	0x219e	; 0x219e <__divmodhi4>
     196:	be 01       	movw	r22, r28
     198:	80 5d       	subi	r24, 0xD0	; 208
     19a:	9e df       	rcall	.-196    	; 0xd8 <writeChar>
    pp++;
     19c:	be 01       	movw	r22, r28
     19e:	6f 5f       	subi	r22, 0xFF	; 255
     1a0:	7f 4f       	sbci	r23, 0xFF	; 255
    writeChar((num % 10) + 0x30, pp);
     1a2:	80 e3       	ldi	r24, 0x30	; 48
     1a4:	81 0f       	add	r24, r17
     1a6:	98 df       	rcall	.-208    	; 0xd8 <writeChar>
}
     1a8:	df 91       	pop	r29
     1aa:	cf 91       	pop	r28
     1ac:	1f 91       	pop	r17
     1ae:	08 95       	ret

000001b0 <clearAt>:

void clearAt(int pos) {
     1b0:	cf 93       	push	r28
     1b2:	df 93       	push	r29
     1b4:	ec 01       	movw	r28, r24
    clearChar(pos);
     1b6:	c6 df       	rcall	.-116    	; 0x144 <clearChar>
    clearChar(pos + 1);
     1b8:	ce 01       	movw	r24, r28
     1ba:	01 96       	adiw	r24, 0x01	; 1
     1bc:	c3 df       	rcall	.-122    	; 0x144 <clearChar>
     1be:	df 91       	pop	r29
     1c0:	cf 91       	pop	r28
     1c2:	08 95       	ret

000001c4 <_GUI_print>:
 *  Author: Daniel
 */

#include "GUI.h"

int _GUI_print(GUI *g, int arg) {
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
    if (g->writeEn || arg) {
     1c8:	fc 01       	movw	r30, r24
     1ca:	23 85       	ldd	r18, Z+11	; 0x0b
     1cc:	34 85       	ldd	r19, Z+12	; 0x0c
     1ce:	23 2b       	or	r18, r19
     1d0:	11 f4       	brne	.+4      	; 0x1d6 <_GUI_print+0x12>
     1d2:	67 2b       	or	r22, r23
     1d4:	51 f0       	breq	.+20     	; 0x1ea <_GUI_print+0x26>
     1d6:	ec 01       	movw	r28, r24
        printAt(g->super.freq, g->pos);
     1d8:	69 85       	ldd	r22, Y+9	; 0x09
     1da:	7a 85       	ldd	r23, Y+10	; 0x0a
     1dc:	8c 81       	ldd	r24, Y+4	; 0x04
     1de:	9d 81       	ldd	r25, Y+5	; 0x05
     1e0:	cc df       	rcall	.-104    	; 0x17a <printAt>
        g->writeEn = 1;
     1e2:	81 e0       	ldi	r24, 0x01	; 1
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	9c 87       	std	Y+12, r25	; 0x0c
     1e8:	8b 87       	std	Y+11, r24	; 0x0b
    }
    return 0;
}
     1ea:	80 e0       	ldi	r24, 0x00	; 0
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	df 91       	pop	r29
     1f0:	cf 91       	pop	r28
     1f2:	08 95       	ret

000001f4 <_GUI_clear>:

int _GUI_clear(GUI *g, int arg) {
     1f4:	cf 93       	push	r28
     1f6:	df 93       	push	r29
     1f8:	ec 01       	movw	r28, r24
    clearAt(g->pos);
     1fa:	89 85       	ldd	r24, Y+9	; 0x09
     1fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     1fe:	d8 df       	rcall	.-80     	; 0x1b0 <clearAt>
    g->writeEn = 0;
     200:	1c 86       	std	Y+12, r1	; 0x0c
     202:	1b 86       	std	Y+11, r1	; 0x0b
    return 0;
}
     204:	80 e0       	ldi	r24, 0x00	; 0
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	df 91       	pop	r29
     20a:	cf 91       	pop	r28
     20c:	08 95       	ret

0000020e <_GUI_blinkLoop>:

int _GUI_blinkLoop(GUI *g, int arg) {
     20e:	af 92       	push	r10
     210:	bf 92       	push	r11
     212:	cf 92       	push	r12
     214:	df 92       	push	r13
     216:	ef 92       	push	r14
     218:	ff 92       	push	r15
     21a:	0f 93       	push	r16
     21c:	1f 93       	push	r17
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
    if (arg == g->blinkCount) {
     222:	fc 01       	movw	r30, r24
     224:	27 85       	ldd	r18, Z+15	; 0x0f
     226:	30 89       	ldd	r19, Z+16	; 0x10
     228:	26 17       	cp	r18, r22
     22a:	37 07       	cpc	r19, r23
     22c:	09 f0       	breq	.+2      	; 0x230 <_GUI_blinkLoop+0x22>
     22e:	4d c0       	rjmp	.+154    	; 0x2ca <_GUI_blinkLoop+0xbc>
     230:	ec 01       	movw	r28, r24
        g->blinkCount++;
     232:	59 01       	movw	r10, r18
     234:	ff ef       	ldi	r31, 0xFF	; 255
     236:	af 1a       	sub	r10, r31
     238:	bf 0a       	sbc	r11, r31
     23a:	b8 8a       	std	Y+16, r11	; 0x10
     23c:	af 86       	std	Y+15, r10	; 0x0f
        if (arg % 2) {
     23e:	20 ff       	sbrs	r18, 0
     240:	22 c0       	rjmp	.+68     	; 0x286 <_GUI_blinkLoop+0x78>
            GUI_clear(g);
     242:	c1 2c       	mov	r12, r1
     244:	d1 2c       	mov	r13, r1
     246:	0f 2e       	mov	r0, r31
     248:	fa ef       	ldi	r31, 0xFA	; 250
     24a:	ef 2e       	mov	r14, r31
     24c:	f0 e0       	ldi	r31, 0x00	; 0
     24e:	ff 2e       	mov	r15, r31
     250:	f0 2d       	mov	r31, r0
     252:	8c 01       	movw	r16, r24
     254:	20 e0       	ldi	r18, 0x00	; 0
     256:	30 e0       	ldi	r19, 0x00	; 0
     258:	a9 01       	movw	r20, r18
     25a:	60 e0       	ldi	r22, 0x00	; 0
     25c:	70 e0       	ldi	r23, 0x00	; 0
     25e:	cb 01       	movw	r24, r22
     260:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
            AFTER(MSEC(300), g, _GUI_blinkLoop, arg + 1);
     264:	65 01       	movw	r12, r10
     266:	0f 2e       	mov	r0, r31
     268:	f7 e0       	ldi	r31, 0x07	; 7
     26a:	ef 2e       	mov	r14, r31
     26c:	f1 e0       	ldi	r31, 0x01	; 1
     26e:	ff 2e       	mov	r15, r31
     270:	f0 2d       	mov	r31, r0
     272:	20 e0       	ldi	r18, 0x00	; 0
     274:	30 e0       	ldi	r19, 0x00	; 0
     276:	a9 01       	movw	r20, r18
     278:	6f e9       	ldi	r22, 0x9F	; 159
     27a:	74 e2       	ldi	r23, 0x24	; 36
     27c:	80 e0       	ldi	r24, 0x00	; 0
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
     284:	22 c0       	rjmp	.+68     	; 0x2ca <_GUI_blinkLoop+0xbc>
        } else {
            GUI_fprint(g);
     286:	cc 24       	eor	r12, r12
     288:	c3 94       	inc	r12
     28a:	d1 2c       	mov	r13, r1
     28c:	0f 2e       	mov	r0, r31
     28e:	f2 ee       	ldi	r31, 0xE2	; 226
     290:	ef 2e       	mov	r14, r31
     292:	f0 e0       	ldi	r31, 0x00	; 0
     294:	ff 2e       	mov	r15, r31
     296:	f0 2d       	mov	r31, r0
     298:	8c 01       	movw	r16, r24
     29a:	20 e0       	ldi	r18, 0x00	; 0
     29c:	30 e0       	ldi	r19, 0x00	; 0
     29e:	a9 01       	movw	r20, r18
     2a0:	60 e0       	ldi	r22, 0x00	; 0
     2a2:	70 e0       	ldi	r23, 0x00	; 0
     2a4:	cb 01       	movw	r24, r22
     2a6:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
            AFTER(MSEC(700), g, _GUI_blinkLoop, arg + 1);
     2aa:	65 01       	movw	r12, r10
     2ac:	0f 2e       	mov	r0, r31
     2ae:	f7 e0       	ldi	r31, 0x07	; 7
     2b0:	ef 2e       	mov	r14, r31
     2b2:	f1 e0       	ldi	r31, 0x01	; 1
     2b4:	ff 2e       	mov	r15, r31
     2b6:	f0 2d       	mov	r31, r0
     2b8:	20 e0       	ldi	r18, 0x00	; 0
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	a9 01       	movw	r20, r18
     2be:	63 e7       	ldi	r22, 0x73	; 115
     2c0:	75 e5       	ldi	r23, 0x55	; 85
     2c2:	80 e0       	ldi	r24, 0x00	; 0
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
        }
    }
    return 0;
}
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	df 91       	pop	r29
     2d0:	cf 91       	pop	r28
     2d2:	1f 91       	pop	r17
     2d4:	0f 91       	pop	r16
     2d6:	ff 90       	pop	r15
     2d8:	ef 90       	pop	r14
     2da:	df 90       	pop	r13
     2dc:	cf 90       	pop	r12
     2de:	bf 90       	pop	r11
     2e0:	af 90       	pop	r10
     2e2:	08 95       	ret

000002e4 <_GUI_swapFreq>:

int _GUI_swapFreq(GUI *g, int arg) {
     2e4:	fc 01       	movw	r30, r24
    if (g->super.freq == 0) {
     2e6:	84 81       	ldd	r24, Z+4	; 0x04
     2e8:	95 81       	ldd	r25, Z+5	; 0x05
     2ea:	00 97       	sbiw	r24, 0x00	; 0
     2ec:	39 f4       	brne	.+14     	; 0x2fc <_GUI_swapFreq+0x18>
        g->super.freq = g->altFreq;
     2ee:	85 85       	ldd	r24, Z+13	; 0x0d
     2f0:	96 85       	ldd	r25, Z+14	; 0x0e
     2f2:	95 83       	std	Z+5, r25	; 0x05
     2f4:	84 83       	std	Z+4, r24	; 0x04
        g->altFreq = 0;
     2f6:	16 86       	std	Z+14, r1	; 0x0e
     2f8:	15 86       	std	Z+13, r1	; 0x0d
     2fa:	08 95       	ret
    } else {
        g->altFreq = g->super.freq;
     2fc:	96 87       	std	Z+14, r25	; 0x0e
     2fe:	85 87       	std	Z+13, r24	; 0x0d
        g->super.freq = 0;
     300:	15 82       	std	Z+5, r1	; 0x05
     302:	14 82       	std	Z+4, r1	; 0x04
    }
}
     304:	08 95       	ret

00000306 <_KEY_allowEnter>:
    }
    return 0;
}

int _KEY_allowEnter(KEY *k, int arg) {
    k->enterEn = 1;
     306:	21 e0       	ldi	r18, 0x01	; 1
     308:	30 e0       	ldi	r19, 0x00	; 0
     30a:	fc 01       	movw	r30, r24
     30c:	35 87       	std	Z+13, r19	; 0x0d
     30e:	24 87       	std	Z+12, r18	; 0x0c
    return 0;
}
     310:	80 e0       	ldi	r24, 0x00	; 0
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	08 95       	ret

00000316 <_KEY_loop>:
    }
    GUI_print(guin);
    return 0;
}

int _KEY_loop(KEY *k, int arg) {
     316:	8f 92       	push	r8
     318:	9f 92       	push	r9
     31a:	af 92       	push	r10
     31c:	bf 92       	push	r11
     31e:	cf 92       	push	r12
     320:	df 92       	push	r13
     322:	ef 92       	push	r14
     324:	ff 92       	push	r15
     326:	0f 93       	push	r16
     328:	1f 93       	push	r17
     32a:	cf 93       	push	r28
     32c:	df 93       	push	r29
    if (k->keyCount == arg) {
     32e:	fc 01       	movw	r30, r24
     330:	c6 80       	ldd	r12, Z+6	; 0x06
     332:	d7 80       	ldd	r13, Z+7	; 0x07
     334:	c6 16       	cp	r12, r22
     336:	d7 06       	cpc	r13, r23
     338:	09 f0       	breq	.+2      	; 0x33c <_KEY_loop+0x26>
     33a:	68 c0       	rjmp	.+208    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     33c:	ec 01       	movw	r28, r24
        arg++;
     33e:	56 01       	movw	r10, r12
     340:	ff ef       	ldi	r31, 0xFF	; 255
     342:	af 1a       	sub	r10, r31
     344:	bf 0a       	sbc	r11, r31
        k->keyCount = arg;
     346:	bf 82       	std	Y+7, r11	; 0x07
     348:	ae 82       	std	Y+6, r10	; 0x06
        GUI *guin = (k->guiSel);
     34a:	8c 80       	ldd	r8, Y+4	; 0x04
     34c:	9d 80       	ldd	r9, Y+5	; 0x05
        PWM *pwmn = &(guin->super);
        int tfreq = PWM_getFreq(pwmn);
     34e:	40 e0       	ldi	r20, 0x00	; 0
     350:	50 e0       	ldi	r21, 0x00	; 0
     352:	6c e7       	ldi	r22, 0x7C	; 124
     354:	74 e0       	ldi	r23, 0x04	; 4
     356:	c4 01       	movw	r24, r8
     358:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <sync>
        if ((tfreq == -1) || (k->dir == 0)) {
     35c:	8f 3f       	cpi	r24, 0xFF	; 255
     35e:	2f ef       	ldi	r18, 0xFF	; 255
     360:	92 07       	cpc	r25, r18
     362:	29 f0       	breq	.+10     	; 0x36e <_KEY_loop+0x58>
     364:	2a 85       	ldd	r18, Y+10	; 0x0a
     366:	3b 85       	ldd	r19, Y+11	; 0x0b
     368:	21 15       	cp	r18, r1
     36a:	31 05       	cpc	r19, r1
     36c:	29 f4       	brne	.+10     	; 0x378 <_KEY_loop+0x62>
            k->dir = 0;
     36e:	1b 86       	std	Y+11, r1	; 0x0b
     370:	1a 86       	std	Y+10, r1	; 0x0a
            k->keyCount = 0;
     372:	1f 82       	std	Y+7, r1	; 0x07
     374:	1e 82       	std	Y+6, r1	; 0x06
     376:	4c c0       	rjmp	.+152    	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
            return;
        }
        tfreq += k->dir;
     378:	6c 01       	movw	r12, r24
     37a:	c2 0e       	add	r12, r18
     37c:	d3 1e       	adc	r13, r19
        PWM_setFreq(pwmn, tfreq);
     37e:	0f 2e       	mov	r0, r31
     380:	f0 e8       	ldi	r31, 0x80	; 128
     382:	ef 2e       	mov	r14, r31
     384:	f4 e0       	ldi	r31, 0x04	; 4
     386:	ff 2e       	mov	r15, r31
     388:	f0 2d       	mov	r31, r0
     38a:	84 01       	movw	r16, r8
     38c:	20 e0       	ldi	r18, 0x00	; 0
     38e:	30 e0       	ldi	r19, 0x00	; 0
     390:	a9 01       	movw	r20, r18
     392:	60 e0       	ldi	r22, 0x00	; 0
     394:	70 e0       	ldi	r23, 0x00	; 0
     396:	cb 01       	movw	r24, r22
     398:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
        GUI_print(guin);
     39c:	c1 2c       	mov	r12, r1
     39e:	d1 2c       	mov	r13, r1
     3a0:	0f 2e       	mov	r0, r31
     3a2:	f2 ee       	ldi	r31, 0xE2	; 226
     3a4:	ef 2e       	mov	r14, r31
     3a6:	f0 e0       	ldi	r31, 0x00	; 0
     3a8:	ff 2e       	mov	r15, r31
     3aa:	f0 2d       	mov	r31, r0
     3ac:	20 e0       	ldi	r18, 0x00	; 0
     3ae:	30 e0       	ldi	r19, 0x00	; 0
     3b0:	a9 01       	movw	r20, r18
     3b2:	60 e0       	ldi	r22, 0x00	; 0
     3b4:	70 e0       	ldi	r23, 0x00	; 0
     3b6:	cb 01       	movw	r24, r22
     3b8:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
        AFTER(MSEC(800 + (200 * arg)), k, _KEY_loop, arg);
     3bc:	28 ea       	ldi	r18, 0xA8	; 168
     3be:	31 e6       	ldi	r19, 0x61	; 97
     3c0:	d5 01       	movw	r26, r10
     3c2:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__usmulhisi3>
     3c6:	ab 01       	movw	r20, r22
     3c8:	bc 01       	movw	r22, r24
     3ca:	40 56       	subi	r20, 0x60	; 96
     3cc:	59 47       	sbci	r21, 0x79	; 121
     3ce:	6e 4f       	sbci	r22, 0xFE	; 254
     3d0:	7f 4f       	sbci	r23, 0xFF	; 255
     3d2:	db 01       	movw	r26, r22
     3d4:	ca 01       	movw	r24, r20
     3d6:	1a f4       	brpl	.+6      	; 0x3de <_KEY_loop+0xc8>
     3d8:	03 96       	adiw	r24, 0x03	; 3
     3da:	a1 1d       	adc	r26, r1
     3dc:	b1 1d       	adc	r27, r1
     3de:	bc 01       	movw	r22, r24
     3e0:	cd 01       	movw	r24, r26
     3e2:	95 95       	asr	r25
     3e4:	87 95       	ror	r24
     3e6:	77 95       	ror	r23
     3e8:	67 95       	ror	r22
     3ea:	95 95       	asr	r25
     3ec:	87 95       	ror	r24
     3ee:	77 95       	ror	r23
     3f0:	67 95       	ror	r22
     3f2:	65 01       	movw	r12, r10
     3f4:	0f 2e       	mov	r0, r31
     3f6:	fb e8       	ldi	r31, 0x8B	; 139
     3f8:	ef 2e       	mov	r14, r31
     3fa:	f1 e0       	ldi	r31, 0x01	; 1
     3fc:	ff 2e       	mov	r15, r31
     3fe:	f0 2d       	mov	r31, r0
     400:	8e 01       	movw	r16, r28
     402:	20 e0       	ldi	r18, 0x00	; 0
     404:	30 e0       	ldi	r19, 0x00	; 0
     406:	a9 01       	movw	r20, r18
     408:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
    }
    return 0;
     40c:	80 e0       	ldi	r24, 0x00	; 0
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	df 91       	pop	r29
     412:	cf 91       	pop	r28
     414:	1f 91       	pop	r17
     416:	0f 91       	pop	r16
     418:	ff 90       	pop	r15
     41a:	ef 90       	pop	r14
     41c:	df 90       	pop	r13
     41e:	cf 90       	pop	r12
     420:	bf 90       	pop	r11
     422:	af 90       	pop	r10
     424:	9f 90       	pop	r9
     426:	8f 90       	pop	r8
     428:	08 95       	ret

0000042a <KEY_pwmSel>:
 *  Author: Daniel
 */

#include "KEY.h"

int KEY_pwmSel(KEY *k, int arg) {
     42a:	cf 92       	push	r12
     42c:	df 92       	push	r13
     42e:	ef 92       	push	r14
     430:	ff 92       	push	r15
     432:	0f 93       	push	r16
     434:	1f 93       	push	r17
     436:	cf 93       	push	r28
     438:	df 93       	push	r29
     43a:	ec 01       	movw	r28, r24
    if (!(PINE & (1 << PINE3))) {
     43c:	63 99       	sbic	0x0c, 3	; 12
     43e:	4f c0       	rjmp	.+158    	; 0x4de <KEY_pwmSel+0xb4>
        //RIGHT
        if (k->guiSel == k->GUI2) {
     440:	ec 81       	ldd	r30, Y+4	; 0x04
     442:	fd 81       	ldd	r31, Y+5	; 0x05
     444:	88 89       	ldd	r24, Y+16	; 0x10
     446:	99 89       	ldd	r25, Y+17	; 0x11
     448:	e8 17       	cp	r30, r24
     44a:	f9 07       	cpc	r31, r25
     44c:	c1 f4       	brne	.+48     	; 0x47e <KEY_pwmSel+0x54>
            GUI_stopBlink(k->guiSel);
     44e:	10 8a       	std	Z+16, r1	; 0x10
     450:	17 86       	std	Z+15, r1	; 0x0f
     452:	0c 81       	ldd	r16, Y+4	; 0x04
     454:	1d 81       	ldd	r17, Y+5	; 0x05
     456:	cc 24       	eor	r12, r12
     458:	c3 94       	inc	r12
     45a:	d1 2c       	mov	r13, r1
     45c:	0f 2e       	mov	r0, r31
     45e:	f2 ee       	ldi	r31, 0xE2	; 226
     460:	ef 2e       	mov	r14, r31
     462:	f0 e0       	ldi	r31, 0x00	; 0
     464:	ff 2e       	mov	r15, r31
     466:	f0 2d       	mov	r31, r0
     468:	20 e0       	ldi	r18, 0x00	; 0
     46a:	30 e0       	ldi	r19, 0x00	; 0
     46c:	a9 01       	movw	r20, r18
     46e:	60 e0       	ldi	r22, 0x00	; 0
     470:	70 e0       	ldi	r23, 0x00	; 0
     472:	cb 01       	movw	r24, r22
     474:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
            k->guiSel = NULL;
     478:	1d 82       	std	Y+5, r1	; 0x05
     47a:	1c 82       	std	Y+4, r1	; 0x04
     47c:	80 c0       	rjmp	.+256    	; 0x57e <__stack+0x7f>
        } else {
            k->guiSel = k->GUI2;
     47e:	9d 83       	std	Y+5, r25	; 0x05
     480:	8c 83       	std	Y+4, r24	; 0x04
            GUI_stopBlink(k->GUI1);
     482:	ee 85       	ldd	r30, Y+14	; 0x0e
     484:	ff 85       	ldd	r31, Y+15	; 0x0f
     486:	10 8a       	std	Z+16, r1	; 0x10
     488:	17 86       	std	Z+15, r1	; 0x0f
     48a:	0e 85       	ldd	r16, Y+14	; 0x0e
     48c:	1f 85       	ldd	r17, Y+15	; 0x0f
     48e:	cc 24       	eor	r12, r12
     490:	c3 94       	inc	r12
     492:	d1 2c       	mov	r13, r1
     494:	0f 2e       	mov	r0, r31
     496:	f2 ee       	ldi	r31, 0xE2	; 226
     498:	ef 2e       	mov	r14, r31
     49a:	f0 e0       	ldi	r31, 0x00	; 0
     49c:	ff 2e       	mov	r15, r31
     49e:	f0 2d       	mov	r31, r0
     4a0:	20 e0       	ldi	r18, 0x00	; 0
     4a2:	30 e0       	ldi	r19, 0x00	; 0
     4a4:	a9 01       	movw	r20, r18
     4a6:	60 e0       	ldi	r22, 0x00	; 0
     4a8:	70 e0       	ldi	r23, 0x00	; 0
     4aa:	cb 01       	movw	r24, r22
     4ac:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
            GUI_startBlink(k->guiSel);
     4b0:	ec 81       	ldd	r30, Y+4	; 0x04
     4b2:	fd 81       	ldd	r31, Y+5	; 0x05
     4b4:	10 8a       	std	Z+16, r1	; 0x10
     4b6:	17 86       	std	Z+15, r1	; 0x0f
     4b8:	0c 81       	ldd	r16, Y+4	; 0x04
     4ba:	1d 81       	ldd	r17, Y+5	; 0x05
     4bc:	c1 2c       	mov	r12, r1
     4be:	d1 2c       	mov	r13, r1
     4c0:	0f 2e       	mov	r0, r31
     4c2:	f7 e0       	ldi	r31, 0x07	; 7
     4c4:	ef 2e       	mov	r14, r31
     4c6:	f1 e0       	ldi	r31, 0x01	; 1
     4c8:	ff 2e       	mov	r15, r31
     4ca:	f0 2d       	mov	r31, r0
     4cc:	20 e0       	ldi	r18, 0x00	; 0
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	a9 01       	movw	r20, r18
     4d2:	60 e0       	ldi	r22, 0x00	; 0
     4d4:	70 e0       	ldi	r23, 0x00	; 0
     4d6:	cb 01       	movw	r24, r22
     4d8:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
     4dc:	50 c0       	rjmp	.+160    	; 0x57e <__stack+0x7f>
        }
    } else if (!(PINE & (1 << PINE2))) {
     4de:	62 99       	sbic	0x0c, 2	; 12
     4e0:	4e c0       	rjmp	.+156    	; 0x57e <__stack+0x7f>
        //LEFT
        if (k->guiSel == k->GUI1) {
     4e2:	ec 81       	ldd	r30, Y+4	; 0x04
     4e4:	fd 81       	ldd	r31, Y+5	; 0x05
     4e6:	8e 85       	ldd	r24, Y+14	; 0x0e
     4e8:	9f 85       	ldd	r25, Y+15	; 0x0f
     4ea:	e8 17       	cp	r30, r24
     4ec:	f9 07       	cpc	r31, r25
     4ee:	c1 f4       	brne	.+48     	; 0x520 <__stack+0x21>
            GUI_stopBlink(k->guiSel);
     4f0:	10 8a       	std	Z+16, r1	; 0x10
     4f2:	17 86       	std	Z+15, r1	; 0x0f
     4f4:	0c 81       	ldd	r16, Y+4	; 0x04
     4f6:	1d 81       	ldd	r17, Y+5	; 0x05
     4f8:	cc 24       	eor	r12, r12
     4fa:	c3 94       	inc	r12
     4fc:	d1 2c       	mov	r13, r1
     4fe:	0f 2e       	mov	r0, r31
     500:	f2 ee       	ldi	r31, 0xE2	; 226
     502:	ef 2e       	mov	r14, r31
     504:	f0 e0       	ldi	r31, 0x00	; 0
     506:	ff 2e       	mov	r15, r31
     508:	f0 2d       	mov	r31, r0
     50a:	20 e0       	ldi	r18, 0x00	; 0
     50c:	30 e0       	ldi	r19, 0x00	; 0
     50e:	a9 01       	movw	r20, r18
     510:	60 e0       	ldi	r22, 0x00	; 0
     512:	70 e0       	ldi	r23, 0x00	; 0
     514:	cb 01       	movw	r24, r22
     516:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
            k->guiSel = NULL;
     51a:	1d 82       	std	Y+5, r1	; 0x05
     51c:	1c 82       	std	Y+4, r1	; 0x04
     51e:	2f c0       	rjmp	.+94     	; 0x57e <__stack+0x7f>
        } else {
            k->guiSel = k->GUI1;
     520:	9d 83       	std	Y+5, r25	; 0x05
     522:	8c 83       	std	Y+4, r24	; 0x04
            GUI_stopBlink(k->GUI2);
     524:	e8 89       	ldd	r30, Y+16	; 0x10
     526:	f9 89       	ldd	r31, Y+17	; 0x11
     528:	10 8a       	std	Z+16, r1	; 0x10
     52a:	17 86       	std	Z+15, r1	; 0x0f
     52c:	08 89       	ldd	r16, Y+16	; 0x10
     52e:	19 89       	ldd	r17, Y+17	; 0x11
     530:	cc 24       	eor	r12, r12
     532:	c3 94       	inc	r12
     534:	d1 2c       	mov	r13, r1
     536:	0f 2e       	mov	r0, r31
     538:	f2 ee       	ldi	r31, 0xE2	; 226
     53a:	ef 2e       	mov	r14, r31
     53c:	f0 e0       	ldi	r31, 0x00	; 0
     53e:	ff 2e       	mov	r15, r31
     540:	f0 2d       	mov	r31, r0
     542:	20 e0       	ldi	r18, 0x00	; 0
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	a9 01       	movw	r20, r18
     548:	60 e0       	ldi	r22, 0x00	; 0
     54a:	70 e0       	ldi	r23, 0x00	; 0
     54c:	cb 01       	movw	r24, r22
     54e:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
            GUI_startBlink(k->guiSel);
     552:	ec 81       	ldd	r30, Y+4	; 0x04
     554:	fd 81       	ldd	r31, Y+5	; 0x05
     556:	10 8a       	std	Z+16, r1	; 0x10
     558:	17 86       	std	Z+15, r1	; 0x0f
     55a:	0c 81       	ldd	r16, Y+4	; 0x04
     55c:	1d 81       	ldd	r17, Y+5	; 0x05
     55e:	c1 2c       	mov	r12, r1
     560:	d1 2c       	mov	r13, r1
     562:	0f 2e       	mov	r0, r31
     564:	f7 e0       	ldi	r31, 0x07	; 7
     566:	ef 2e       	mov	r14, r31
     568:	f1 e0       	ldi	r31, 0x01	; 1
     56a:	ff 2e       	mov	r15, r31
     56c:	f0 2d       	mov	r31, r0
     56e:	20 e0       	ldi	r18, 0x00	; 0
     570:	30 e0       	ldi	r19, 0x00	; 0
     572:	a9 01       	movw	r20, r18
     574:	60 e0       	ldi	r22, 0x00	; 0
     576:	70 e0       	ldi	r23, 0x00	; 0
     578:	cb 01       	movw	r24, r22
     57a:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
        }
    }
    return 0;
}
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	df 91       	pop	r29
     584:	cf 91       	pop	r28
     586:	1f 91       	pop	r17
     588:	0f 91       	pop	r16
     58a:	ff 90       	pop	r15
     58c:	ef 90       	pop	r14
     58e:	df 90       	pop	r13
     590:	cf 90       	pop	r12
     592:	08 95       	ret

00000594 <KEY_pwmInc>:
int _KEY_allowEnter(KEY *k, int arg) {
    k->enterEn = 1;
    return 0;
}

int KEY_pwmInc(KEY *k, int arg) {
     594:	af 92       	push	r10
     596:	bf 92       	push	r11
     598:	cf 92       	push	r12
     59a:	df 92       	push	r13
     59c:	ef 92       	push	r14
     59e:	ff 92       	push	r15
     5a0:	0f 93       	push	r16
     5a2:	1f 93       	push	r17
     5a4:	cf 93       	push	r28
     5a6:	df 93       	push	r29
    if (k->guiSel == NULL)
     5a8:	fc 01       	movw	r30, r24
     5aa:	a4 80       	ldd	r10, Z+4	; 0x04
     5ac:	b5 80       	ldd	r11, Z+5	; 0x05
     5ae:	a1 14       	cp	r10, r1
     5b0:	b1 04       	cpc	r11, r1
     5b2:	09 f4       	brne	.+2      	; 0x5b6 <KEY_pwmInc+0x22>
     5b4:	a3 c0       	rjmp	.+326    	; 0x6fc <KEY_pwmInc+0x168>
     5b6:	ec 01       	movw	r28, r24
        return;
    GUI *guin = (k->guiSel);
    if (!(PINB & (1 << PINB7))) {
     5b8:	1f 99       	sbic	0x03, 7	; 3
     5ba:	33 c0       	rjmp	.+102    	; 0x622 <KEY_pwmInc+0x8e>
        KEY_scrollDown(k);
     5bc:	cc 24       	eor	r12, r12
     5be:	ca 94       	dec	r12
     5c0:	dc 2c       	mov	r13, r12
     5c2:	0f 2e       	mov	r0, r31
     5c4:	f2 e6       	ldi	r31, 0x62	; 98
     5c6:	ef 2e       	mov	r14, r31
     5c8:	f4 e0       	ldi	r31, 0x04	; 4
     5ca:	ff 2e       	mov	r15, r31
     5cc:	f0 2d       	mov	r31, r0
     5ce:	85 01       	movw	r16, r10
     5d0:	20 e0       	ldi	r18, 0x00	; 0
     5d2:	30 e0       	ldi	r19, 0x00	; 0
     5d4:	a9 01       	movw	r20, r18
     5d6:	60 e0       	ldi	r22, 0x00	; 0
     5d8:	70 e0       	ldi	r23, 0x00	; 0
     5da:	cb 01       	movw	r24, r22
     5dc:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
     5e0:	8f ef       	ldi	r24, 0xFF	; 255
     5e2:	9f ef       	ldi	r25, 0xFF	; 255
     5e4:	9b 87       	std	Y+11, r25	; 0x0b
     5e6:	8a 87       	std	Y+10, r24	; 0x0a
     5e8:	8e 81       	ldd	r24, Y+6	; 0x06
     5ea:	9f 81       	ldd	r25, Y+7	; 0x07
     5ec:	89 2b       	or	r24, r25
     5ee:	09 f0       	breq	.+2      	; 0x5f2 <KEY_pwmInc+0x5e>
     5f0:	71 c0       	rjmp	.+226    	; 0x6d4 <KEY_pwmInc+0x140>
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	9f 83       	std	Y+7, r25	; 0x07
     5f8:	8e 83       	std	Y+6, r24	; 0x06
     5fa:	cc 24       	eor	r12, r12
     5fc:	c3 94       	inc	r12
     5fe:	d1 2c       	mov	r13, r1
     600:	0f 2e       	mov	r0, r31
     602:	fb e8       	ldi	r31, 0x8B	; 139
     604:	ef 2e       	mov	r14, r31
     606:	f1 e0       	ldi	r31, 0x01	; 1
     608:	ff 2e       	mov	r15, r31
     60a:	f0 2d       	mov	r31, r0
     60c:	8e 01       	movw	r16, r28
     60e:	20 e0       	ldi	r18, 0x00	; 0
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	a9 01       	movw	r20, r18
     614:	62 e1       	ldi	r22, 0x12	; 18
     616:	7a e7       	ldi	r23, 0x7A	; 122
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
     620:	59 c0       	rjmp	.+178    	; 0x6d4 <KEY_pwmInc+0x140>
    } else if (!(PINB & (1 << PINB6))) {
     622:	1e 99       	sbic	0x03, 6	; 3
     624:	2f c0       	rjmp	.+94     	; 0x684 <KEY_pwmInc+0xf0>
        KEY_scrollUp(k);
     626:	cc 24       	eor	r12, r12
     628:	c3 94       	inc	r12
     62a:	d1 2c       	mov	r13, r1
     62c:	0f 2e       	mov	r0, r31
     62e:	f2 e6       	ldi	r31, 0x62	; 98
     630:	ef 2e       	mov	r14, r31
     632:	f4 e0       	ldi	r31, 0x04	; 4
     634:	ff 2e       	mov	r15, r31
     636:	f0 2d       	mov	r31, r0
     638:	85 01       	movw	r16, r10
     63a:	20 e0       	ldi	r18, 0x00	; 0
     63c:	30 e0       	ldi	r19, 0x00	; 0
     63e:	a9 01       	movw	r20, r18
     640:	60 e0       	ldi	r22, 0x00	; 0
     642:	70 e0       	ldi	r23, 0x00	; 0
     644:	cb 01       	movw	r24, r22
     646:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
     64a:	81 e0       	ldi	r24, 0x01	; 1
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	9b 87       	std	Y+11, r25	; 0x0b
     650:	8a 87       	std	Y+10, r24	; 0x0a
     652:	8e 81       	ldd	r24, Y+6	; 0x06
     654:	9f 81       	ldd	r25, Y+7	; 0x07
     656:	89 2b       	or	r24, r25
     658:	e9 f5       	brne	.+122    	; 0x6d4 <KEY_pwmInc+0x140>
     65a:	81 e0       	ldi	r24, 0x01	; 1
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	9f 83       	std	Y+7, r25	; 0x07
     660:	8e 83       	std	Y+6, r24	; 0x06
     662:	0f 2e       	mov	r0, r31
     664:	fb e8       	ldi	r31, 0x8B	; 139
     666:	ef 2e       	mov	r14, r31
     668:	f1 e0       	ldi	r31, 0x01	; 1
     66a:	ff 2e       	mov	r15, r31
     66c:	f0 2d       	mov	r31, r0
     66e:	8e 01       	movw	r16, r28
     670:	20 e0       	ldi	r18, 0x00	; 0
     672:	30 e0       	ldi	r19, 0x00	; 0
     674:	a9 01       	movw	r20, r18
     676:	62 e1       	ldi	r22, 0x12	; 18
     678:	7a e7       	ldi	r23, 0x7A	; 122
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
     682:	28 c0       	rjmp	.+80     	; 0x6d4 <KEY_pwmInc+0x140>
    } else if (!(PINB & (1 << PINB4))) {
     684:	1c 99       	sbic	0x03, 4	; 3
     686:	20 c0       	rjmp	.+64     	; 0x6c8 <KEY_pwmInc+0x134>
        //ENTER
        if (!k->enterEn)
     688:	84 85       	ldd	r24, Z+12	; 0x0c
     68a:	95 85       	ldd	r25, Z+13	; 0x0d
     68c:	89 2b       	or	r24, r25
     68e:	b1 f1       	breq	.+108    	; 0x6fc <KEY_pwmInc+0x168>
            return;
        k->enterEn = 0;
     690:	15 86       	std	Z+13, r1	; 0x0d
     692:	14 86       	std	Z+12, r1	; 0x0c
        AFTER(MSEC(500), k, _KEY_allowEnter, 0);
     694:	c1 2c       	mov	r12, r1
     696:	d1 2c       	mov	r13, r1
     698:	0f 2e       	mov	r0, r31
     69a:	f3 e8       	ldi	r31, 0x83	; 131
     69c:	ef 2e       	mov	r14, r31
     69e:	f1 e0       	ldi	r31, 0x01	; 1
     6a0:	ff 2e       	mov	r15, r31
     6a2:	f0 2d       	mov	r31, r0
     6a4:	8f 01       	movw	r16, r30
     6a6:	20 e0       	ldi	r18, 0x00	; 0
     6a8:	30 e0       	ldi	r19, 0x00	; 0
     6aa:	a9 01       	movw	r20, r18
     6ac:	69 e0       	ldi	r22, 0x09	; 9
     6ae:	7d e3       	ldi	r23, 0x3D	; 61
     6b0:	80 e0       	ldi	r24, 0x00	; 0
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
        GUI_swapFreq(guin);
     6b8:	40 e0       	ldi	r20, 0x00	; 0
     6ba:	50 e0       	ldi	r21, 0x00	; 0
     6bc:	62 e7       	ldi	r22, 0x72	; 114
     6be:	71 e0       	ldi	r23, 0x01	; 1
     6c0:	c5 01       	movw	r24, r10
     6c2:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <sync>
     6c6:	06 c0       	rjmp	.+12     	; 0x6d4 <KEY_pwmInc+0x140>
    } else if ((PINB & (1 << PINB7)) && (PINB & (1 << PINB6))) {
     6c8:	1f 9b       	sbis	0x03, 7	; 3
     6ca:	04 c0       	rjmp	.+8      	; 0x6d4 <KEY_pwmInc+0x140>
     6cc:	1e 9b       	sbis	0x03, 6	; 3
     6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <KEY_pwmInc+0x140>
        KEY_scrollStop(k);
     6d0:	13 86       	std	Z+11, r1	; 0x0b
     6d2:	12 86       	std	Z+10, r1	; 0x0a
    }
    GUI_print(guin);
     6d4:	c1 2c       	mov	r12, r1
     6d6:	d1 2c       	mov	r13, r1
     6d8:	0f 2e       	mov	r0, r31
     6da:	f2 ee       	ldi	r31, 0xE2	; 226
     6dc:	ef 2e       	mov	r14, r31
     6de:	f0 e0       	ldi	r31, 0x00	; 0
     6e0:	ff 2e       	mov	r15, r31
     6e2:	f0 2d       	mov	r31, r0
     6e4:	85 01       	movw	r16, r10
     6e6:	20 e0       	ldi	r18, 0x00	; 0
     6e8:	30 e0       	ldi	r19, 0x00	; 0
     6ea:	a9 01       	movw	r20, r18
     6ec:	60 e0       	ldi	r22, 0x00	; 0
     6ee:	70 e0       	ldi	r23, 0x00	; 0
     6f0:	cb 01       	movw	r24, r22
     6f2:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
    return 0;
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	00 c0       	rjmp	.+0      	; 0x6fc <KEY_pwmInc+0x168>
}
     6fc:	df 91       	pop	r29
     6fe:	cf 91       	pop	r28
     700:	1f 91       	pop	r17
     702:	0f 91       	pop	r16
     704:	ff 90       	pop	r15
     706:	ef 90       	pop	r14
     708:	df 90       	pop	r13
     70a:	cf 90       	pop	r12
     70c:	bf 90       	pop	r11
     70e:	af 90       	pop	r10
     710:	08 95       	ret

00000712 <launch>:

static GUI GUI1 = init_GUI(init_PWM(&PORTE, PINE4), 0);
static GUI GUI2 = init_GUI(init_PWM(&PORTE, PINE6), 4);
static KEY KEYN = init_KEY(&GUI1, &GUI2);

void launch(Object *o, int arg) {
     712:	cf 92       	push	r12
     714:	df 92       	push	r13
     716:	ef 92       	push	r14
     718:	ff 92       	push	r15
     71a:	0f 93       	push	r16
     71c:	1f 93       	push	r17
	GUI_init(&GUI1);
     71e:	cc 24       	eor	r12, r12
     720:	c3 94       	inc	r12
     722:	d1 2c       	mov	r13, r1
     724:	0f 2e       	mov	r0, r31
     726:	f2 ee       	ldi	r31, 0xE2	; 226
     728:	ef 2e       	mov	r14, r31
     72a:	f0 e0       	ldi	r31, 0x00	; 0
     72c:	ff 2e       	mov	r15, r31
     72e:	f0 2d       	mov	r31, r0
     730:	03 e2       	ldi	r16, 0x23	; 35
     732:	11 e0       	ldi	r17, 0x01	; 1
     734:	20 e0       	ldi	r18, 0x00	; 0
     736:	30 e0       	ldi	r19, 0x00	; 0
     738:	a9 01       	movw	r20, r18
     73a:	60 e0       	ldi	r22, 0x00	; 0
     73c:	70 e0       	ldi	r23, 0x00	; 0
     73e:	cb 01       	movw	r24, r22
     740:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
     744:	c1 2c       	mov	r12, r1
     746:	d1 2c       	mov	r13, r1
     748:	0f 2e       	mov	r0, r31
     74a:	f6 ef       	ldi	r31, 0xF6	; 246
     74c:	ef 2e       	mov	r14, r31
     74e:	f3 e0       	ldi	r31, 0x03	; 3
     750:	ff 2e       	mov	r15, r31
     752:	f0 2d       	mov	r31, r0
     754:	20 e0       	ldi	r18, 0x00	; 0
     756:	30 e0       	ldi	r19, 0x00	; 0
     758:	a9 01       	movw	r20, r18
     75a:	60 e0       	ldi	r22, 0x00	; 0
     75c:	70 e0       	ldi	r23, 0x00	; 0
     75e:	cb 01       	movw	r24, r22
     760:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
	GUI_init(&GUI2);
     764:	cc 24       	eor	r12, r12
     766:	c3 94       	inc	r12
     768:	d1 2c       	mov	r13, r1
     76a:	0f 2e       	mov	r0, r31
     76c:	f2 ee       	ldi	r31, 0xE2	; 226
     76e:	ef 2e       	mov	r14, r31
     770:	f0 e0       	ldi	r31, 0x00	; 0
     772:	ff 2e       	mov	r15, r31
     774:	f0 2d       	mov	r31, r0
     776:	02 e1       	ldi	r16, 0x12	; 18
     778:	11 e0       	ldi	r17, 0x01	; 1
     77a:	20 e0       	ldi	r18, 0x00	; 0
     77c:	30 e0       	ldi	r19, 0x00	; 0
     77e:	a9 01       	movw	r20, r18
     780:	60 e0       	ldi	r22, 0x00	; 0
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	cb 01       	movw	r24, r22
     786:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
     78a:	c1 2c       	mov	r12, r1
     78c:	d1 2c       	mov	r13, r1
     78e:	0f 2e       	mov	r0, r31
     790:	f6 ef       	ldi	r31, 0xF6	; 246
     792:	ef 2e       	mov	r14, r31
     794:	f3 e0       	ldi	r31, 0x03	; 3
     796:	ff 2e       	mov	r15, r31
     798:	f0 2d       	mov	r31, r0
     79a:	20 e0       	ldi	r18, 0x00	; 0
     79c:	30 e0       	ldi	r19, 0x00	; 0
     79e:	a9 01       	movw	r20, r18
     7a0:	60 e0       	ldi	r22, 0x00	; 0
     7a2:	70 e0       	ldi	r23, 0x00	; 0
     7a4:	cb 01       	movw	r24, r22
     7a6:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
}
     7aa:	1f 91       	pop	r17
     7ac:	0f 91       	pop	r16
     7ae:	ff 90       	pop	r15
     7b0:	ef 90       	pop	r14
     7b2:	df 90       	pop	r13
     7b4:	cf 90       	pop	r12
     7b6:	08 95       	ret

000007b8 <main>:

int main() {
	sei();
     7b8:	78 94       	sei

	LCD_init();
     7ba:	6d dc       	rcall	.-1830   	; 0x96 <LCD_init>
	BTN_init();
     7bc:	79 dc       	rcall	.-1806   	; 0xb0 <BTN_init>

	INSTALL(&KEYN, KEY_pwmInc, IRQ_PCINT1);
     7be:	42 e0       	ldi	r20, 0x02	; 2
     7c0:	6a ec       	ldi	r22, 0xCA	; 202
     7c2:	72 e0       	ldi	r23, 0x02	; 2
     7c4:	80 e0       	ldi	r24, 0x00	; 0
     7c6:	91 e0       	ldi	r25, 0x01	; 1
     7c8:	0e 94 9e 10 	call	0x213c	; 0x213c <install>
	INSTALL(&KEYN, KEY_pwmSel, IRQ_PCINT0);
     7cc:	41 e0       	ldi	r20, 0x01	; 1
     7ce:	65 e1       	ldi	r22, 0x15	; 21
     7d0:	72 e0       	ldi	r23, 0x02	; 2
     7d2:	80 e0       	ldi	r24, 0x00	; 0
     7d4:	91 e0       	ldi	r25, 0x01	; 1
     7d6:	0e 94 9e 10 	call	0x213c	; 0x213c <install>

	return TINYTIMBER(NULL, launch, 0);
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e0       	ldi	r21, 0x00	; 0
     7de:	69 e8       	ldi	r22, 0x89	; 137
     7e0:	73 e0       	ldi	r23, 0x03	; 3
     7e2:	80 e0       	ldi	r24, 0x00	; 0
     7e4:	90 e0       	ldi	r25, 0x00	; 0
     7e6:	0c 94 b8 10 	jmp	0x2170	; 0x2170 <tinytimber>
     7ea:	08 95       	ret

000007ec <PWM_init_pulseLoop>:
 *  Author: Daniel
 */

#include "PWM.h"

int PWM_init_pulseLoop(PWM *p, int arg) {
     7ec:	cf 92       	push	r12
     7ee:	df 92       	push	r13
     7f0:	ef 92       	push	r14
     7f2:	ff 92       	push	r15
     7f4:	0f 93       	push	r16
     7f6:	1f 93       	push	r17
     7f8:	cf 93       	push	r28
     7fa:	df 93       	push	r29
     7fc:	ec 01       	movw	r28, r24
    if (p->freq) {
     7fe:	8c 81       	ldd	r24, Y+4	; 0x04
     800:	9d 81       	ldd	r25, Y+5	; 0x05
     802:	89 2b       	or	r24, r25
     804:	a1 f1       	breq	.+104    	; 0x86e <PWM_init_pulseLoop+0x82>
        *(p->reg) ^= (1 << p->toggle);
     806:	ee 81       	ldd	r30, Y+6	; 0x06
     808:	ff 81       	ldd	r31, Y+7	; 0x07
     80a:	81 e0       	ldi	r24, 0x01	; 1
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	08 84       	ldd	r0, Y+8	; 0x08
     810:	02 c0       	rjmp	.+4      	; 0x816 <PWM_init_pulseLoop+0x2a>
     812:	88 0f       	add	r24, r24
     814:	99 1f       	adc	r25, r25
     816:	0a 94       	dec	r0
     818:	e2 f7       	brpl	.-8      	; 0x812 <PWM_init_pulseLoop+0x26>
     81a:	90 81       	ld	r25, Z
     81c:	89 27       	eor	r24, r25
     81e:	80 83       	st	Z, r24
        AFTER(USEC(500000 / (p->freq)), p, PWM_init_pulseLoop, 0);
     820:	2c 81       	ldd	r18, Y+4	; 0x04
     822:	3d 81       	ldd	r19, Y+5	; 0x05
     824:	03 2e       	mov	r0, r19
     826:	00 0c       	add	r0, r0
     828:	44 0b       	sbc	r20, r20
     82a:	55 0b       	sbc	r21, r21
     82c:	60 e2       	ldi	r22, 0x20	; 32
     82e:	71 ea       	ldi	r23, 0xA1	; 161
     830:	87 e0       	ldi	r24, 0x07	; 7
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__divmodsi4>
     838:	ad e7       	ldi	r26, 0x7D	; 125
     83a:	b0 e0       	ldi	r27, 0x00	; 0
     83c:	0e 94 04 11 	call	0x2208	; 0x2208 <__muluhisi3>
     840:	20 ea       	ldi	r18, 0xA0	; 160
     842:	3f e0       	ldi	r19, 0x0F	; 15
     844:	40 e0       	ldi	r20, 0x00	; 0
     846:	50 e0       	ldi	r21, 0x00	; 0
     848:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__divmodsi4>
     84c:	ca 01       	movw	r24, r20
     84e:	b9 01       	movw	r22, r18
     850:	c1 2c       	mov	r12, r1
     852:	d1 2c       	mov	r13, r1
     854:	0f 2e       	mov	r0, r31
     856:	f6 ef       	ldi	r31, 0xF6	; 246
     858:	ef 2e       	mov	r14, r31
     85a:	f3 e0       	ldi	r31, 0x03	; 3
     85c:	ff 2e       	mov	r15, r31
     85e:	f0 2d       	mov	r31, r0
     860:	8e 01       	movw	r16, r28
     862:	20 e0       	ldi	r18, 0x00	; 0
     864:	30 e0       	ldi	r19, 0x00	; 0
     866:	a9 01       	movw	r20, r18
     868:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
     86c:	20 c0       	rjmp	.+64     	; 0x8ae <PWM_init_pulseLoop+0xc2>
    } else {
        *(p->reg) &= ~(1 << p->toggle);
     86e:	ee 81       	ldd	r30, Y+6	; 0x06
     870:	ff 81       	ldd	r31, Y+7	; 0x07
     872:	81 e0       	ldi	r24, 0x01	; 1
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	08 84       	ldd	r0, Y+8	; 0x08
     878:	02 c0       	rjmp	.+4      	; 0x87e <PWM_init_pulseLoop+0x92>
     87a:	88 0f       	add	r24, r24
     87c:	99 1f       	adc	r25, r25
     87e:	0a 94       	dec	r0
     880:	e2 f7       	brpl	.-8      	; 0x87a <PWM_init_pulseLoop+0x8e>
     882:	80 95       	com	r24
     884:	90 81       	ld	r25, Z
     886:	89 23       	and	r24, r25
     888:	80 83       	st	Z, r24
        AFTER(SEC(1), p, PWM_init_pulseLoop, 0);
     88a:	c1 2c       	mov	r12, r1
     88c:	d1 2c       	mov	r13, r1
     88e:	0f 2e       	mov	r0, r31
     890:	f6 ef       	ldi	r31, 0xF6	; 246
     892:	ef 2e       	mov	r14, r31
     894:	f3 e0       	ldi	r31, 0x03	; 3
     896:	ff 2e       	mov	r15, r31
     898:	f0 2d       	mov	r31, r0
     89a:	8e 01       	movw	r16, r28
     89c:	20 e0       	ldi	r18, 0x00	; 0
     89e:	30 e0       	ldi	r19, 0x00	; 0
     8a0:	a9 01       	movw	r20, r18
     8a2:	62 e1       	ldi	r22, 0x12	; 18
     8a4:	7a e7       	ldi	r23, 0x7A	; 122
     8a6:	80 e0       	ldi	r24, 0x00	; 0
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <async>
    }
    return 0;
}
     8ae:	80 e0       	ldi	r24, 0x00	; 0
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	df 91       	pop	r29
     8b4:	cf 91       	pop	r28
     8b6:	1f 91       	pop	r17
     8b8:	0f 91       	pop	r16
     8ba:	ff 90       	pop	r15
     8bc:	ef 90       	pop	r14
     8be:	df 90       	pop	r13
     8c0:	cf 90       	pop	r12
     8c2:	08 95       	ret

000008c4 <_PWM_deltaFreq>:

int _PWM_deltaFreq(PWM *p, int arg) {
    arg += p->freq;
     8c4:	fc 01       	movw	r30, r24
     8c6:	24 81       	ldd	r18, Z+4	; 0x04
     8c8:	35 81       	ldd	r19, Z+5	; 0x05
     8ca:	62 0f       	add	r22, r18
     8cc:	73 1f       	adc	r23, r19
    if (arg <= 0)
     8ce:	16 16       	cp	r1, r22
     8d0:	17 06       	cpc	r1, r23
     8d2:	1c f0       	brlt	.+6      	; 0x8da <_PWM_deltaFreq+0x16>
        p->freq = 0;
     8d4:	15 82       	std	Z+5, r1	; 0x05
     8d6:	14 82       	std	Z+4, r1	; 0x04
     8d8:	0c c0       	rjmp	.+24     	; 0x8f2 <_PWM_deltaFreq+0x2e>
    else if (arg > 99)
     8da:	64 36       	cpi	r22, 0x64	; 100
     8dc:	71 05       	cpc	r23, r1
     8de:	34 f0       	brlt	.+12     	; 0x8ec <_PWM_deltaFreq+0x28>
        p->freq = 99;
     8e0:	23 e6       	ldi	r18, 0x63	; 99
     8e2:	30 e0       	ldi	r19, 0x00	; 0
     8e4:	fc 01       	movw	r30, r24
     8e6:	35 83       	std	Z+5, r19	; 0x05
     8e8:	24 83       	std	Z+4, r18	; 0x04
     8ea:	03 c0       	rjmp	.+6      	; 0x8f2 <_PWM_deltaFreq+0x2e>
    else
        p->freq = arg;
     8ec:	fc 01       	movw	r30, r24
     8ee:	75 83       	std	Z+5, r23	; 0x05
     8f0:	64 83       	std	Z+4, r22	; 0x04
    return 0;
}
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	08 95       	ret

000008f8 <_PWM_getFreq>:

int _PWM_getFreq(PWM *p, int arg) {
    return p->freq;
}
     8f8:	fc 01       	movw	r30, r24
     8fa:	84 81       	ldd	r24, Z+4	; 0x04
     8fc:	95 81       	ldd	r25, Z+5	; 0x05
     8fe:	08 95       	ret

00000900 <_PWM_setFreq>:

int _PWM_setFreq(PWM *p, int arg) {
    if (arg > 99)
     900:	64 36       	cpi	r22, 0x64	; 100
     902:	71 05       	cpc	r23, r1
     904:	34 f0       	brlt	.+12     	; 0x912 <_PWM_setFreq+0x12>
        p->freq = 99;
     906:	23 e6       	ldi	r18, 0x63	; 99
     908:	30 e0       	ldi	r19, 0x00	; 0
     90a:	fc 01       	movw	r30, r24
     90c:	35 83       	std	Z+5, r19	; 0x05
     90e:	24 83       	std	Z+4, r18	; 0x04
     910:	0a c0       	rjmp	.+20     	; 0x926 <_PWM_setFreq+0x26>
    else if (arg <= 0)
     912:	16 16       	cp	r1, r22
     914:	17 06       	cpc	r1, r23
     916:	24 f0       	brlt	.+8      	; 0x920 <_PWM_setFreq+0x20>
        p->freq = 0;
     918:	fc 01       	movw	r30, r24
     91a:	15 82       	std	Z+5, r1	; 0x05
     91c:	14 82       	std	Z+4, r1	; 0x04
     91e:	03 c0       	rjmp	.+6      	; 0x926 <_PWM_setFreq+0x26>
    else
        p->freq = arg;
     920:	fc 01       	movw	r30, r24
     922:	75 83       	std	Z+5, r23	; 0x05
     924:	64 83       	std	Z+4, r22	; 0x04
    return 0;
     926:	80 e0       	ldi	r24, 0x00	; 0
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	08 95       	ret

0000092c <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     92c:	cf 93       	push	r28
     92e:	df 93       	push	r29
     930:	00 d0       	rcall	.+0      	; 0x932 <initialize+0x6>
     932:	00 d0       	rcall	.+0      	; 0x934 <initialize+0x8>
     934:	cd b7       	in	r28, 0x3d	; 61
     936:	de b7       	in	r29, 0x3e	; 62
     938:	83 e4       	ldi	r24, 0x43	; 67
     93a:	92 e0       	ldi	r25, 0x02	; 2
     93c:	23 e2       	ldi	r18, 0x23	; 35
     93e:	33 e0       	ldi	r19, 0x03	; 3
     940:	fc 01       	movw	r30, r24
     942:	70 97       	sbiw	r30, 0x10	; 16
     944:	91 83       	std	Z+1, r25	; 0x01
     946:	80 83       	st	Z, r24
     948:	40 96       	adiw	r24, 0x10	; 16
     94a:	82 17       	cp	r24, r18
     94c:	93 07       	cpc	r25, r19
     94e:	c1 f7       	brne	.-16     	; 0x940 <initialize+0x14>
     950:	10 92 14 03 	sts	0x0314, r1	; 0x800314 <messages+0xe1>
     954:	10 92 13 03 	sts	0x0313, r1	; 0x800313 <messages+0xe0>
     958:	ee e7       	ldi	r30, 0x7E	; 126
     95a:	f1 e0       	ldi	r31, 0x01	; 1
     95c:	8b e9       	ldi	r24, 0x9B	; 155
     95e:	91 e0       	ldi	r25, 0x01	; 1
     960:	91 83       	std	Z+1, r25	; 0x01
     962:	80 83       	st	Z, r24
     964:	88 eb       	ldi	r24, 0xB8	; 184
     966:	91 e0       	ldi	r25, 0x01	; 1
     968:	96 8f       	std	Z+30, r25	; 0x1e
     96a:	85 8f       	std	Z+29, r24	; 0x1d
     96c:	a5 ed       	ldi	r26, 0xD5	; 213
     96e:	b1 e0       	ldi	r27, 0x01	; 1
     970:	b3 af       	std	Z+59, r27	; 0x3b
     972:	a2 af       	std	Z+58, r26	; 0x3a
     974:	1d 92       	st	X+, r1
     976:	1c 92       	st	X, r1
     978:	fa 83       	std	Y+2, r31	; 0x02
     97a:	e9 83       	std	Y+1, r30	; 0x01
     97c:	ef e7       	ldi	r30, 0x7F	; 127
     97e:	f3 e0       	ldi	r31, 0x03	; 3
     980:	fc 83       	std	Y+4, r31	; 0x04
     982:	eb 83       	std	Y+3, r30	; 0x03
     984:	89 81       	ldd	r24, Y+1	; 0x01
     986:	9a 81       	ldd	r25, Y+2	; 0x02
     988:	06 96       	adiw	r24, 0x06	; 6
     98a:	0e 94 53 11 	call	0x22a6	; 0x22a6 <setjmp>
     98e:	8b 81       	ldd	r24, Y+3	; 0x03
     990:	9c 81       	ldd	r25, Y+4	; 0x04
     992:	e9 81       	ldd	r30, Y+1	; 0x01
     994:	fa 81       	ldd	r31, Y+2	; 0x02
     996:	97 8b       	std	Z+23, r25	; 0x17
     998:	86 8b       	std	Z+22, r24	; 0x16
     99a:	91 8f       	std	Z+25, r25	; 0x19
     99c:	80 8f       	std	Z+24, r24	; 0x18
     99e:	82 e3       	ldi	r24, 0x32	; 50
     9a0:	90 e1       	ldi	r25, 0x10	; 16
     9a2:	94 8f       	std	Z+28, r25	; 0x1c
     9a4:	83 8f       	std	Z+27, r24	; 0x1b
     9a6:	15 82       	std	Z+5, r1	; 0x05
     9a8:	14 82       	std	Z+4, r1	; 0x04
     9aa:	7d 96       	adiw	r30, 0x1d	; 29
     9ac:	fa 83       	std	Y+2, r31	; 0x02
     9ae:	e9 83       	std	Y+1, r30	; 0x01
     9b0:	eb 81       	ldd	r30, Y+3	; 0x03
     9b2:	fc 81       	ldd	r31, Y+4	; 0x04
     9b4:	e0 5a       	subi	r30, 0xA0	; 160
     9b6:	ff 4f       	sbci	r31, 0xFF	; 255
     9b8:	fc 83       	std	Y+4, r31	; 0x04
     9ba:	eb 83       	std	Y+3, r30	; 0x03
     9bc:	89 81       	ldd	r24, Y+1	; 0x01
     9be:	9a 81       	ldd	r25, Y+2	; 0x02
     9c0:	82 5f       	subi	r24, 0xF2	; 242
     9c2:	91 40       	sbci	r25, 0x01	; 1
     9c4:	f9 f6       	brne	.-66     	; 0x984 <initialize+0x58>
     9c6:	e6 e1       	ldi	r30, 0x16	; 22
     9c8:	f2 e0       	ldi	r31, 0x02	; 2
     9ca:	11 82       	std	Z+1, r1	; 0x01
     9cc:	10 82       	st	Z, r1
     9ce:	15 82       	std	Z+5, r1	; 0x05
     9d0:	14 82       	std	Z+4, r1	; 0x04
     9d2:	13 82       	std	Z+3, r1	; 0x03
     9d4:	12 82       	std	Z+2, r1	; 0x02
     9d6:	e1 e6       	ldi	r30, 0x61	; 97
     9d8:	f0 e0       	ldi	r31, 0x00	; 0
     9da:	80 e8       	ldi	r24, 0x80	; 128
     9dc:	80 83       	st	Z, r24
     9de:	10 82       	st	Z, r1
     9e0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     9e4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     9e8:	84 e0       	ldi	r24, 0x04	; 4
     9ea:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     9ee:	81 e0       	ldi	r24, 0x01	; 1
     9f0:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     9f4:	0f 90       	pop	r0
     9f6:	0f 90       	pop	r0
     9f8:	0f 90       	pop	r0
     9fa:	0f 90       	pop	r0
     9fc:	df 91       	pop	r29
     9fe:	cf 91       	pop	r28
     a00:	08 95       	ret

00000a02 <dispatch>:
     a02:	cf 93       	push	r28
     a04:	df 93       	push	r29
     a06:	00 d0       	rcall	.+0      	; 0xa08 <dispatch+0x6>
     a08:	cd b7       	in	r28, 0x3d	; 61
     a0a:	de b7       	in	r29, 0x3e	; 62
     a0c:	9a 83       	std	Y+2, r25	; 0x02
     a0e:	89 83       	std	Y+1, r24	; 0x01
     a10:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <current>
     a14:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <current+0x1>
     a18:	06 96       	adiw	r24, 0x06	; 6
     a1a:	0e 94 53 11 	call	0x22a6	; 0x22a6 <setjmp>
     a1e:	89 2b       	or	r24, r25
     a20:	59 f4       	brne	.+22     	; 0xa38 <dispatch+0x36>
     a22:	89 81       	ldd	r24, Y+1	; 0x01
     a24:	9a 81       	ldd	r25, Y+2	; 0x02
     a26:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <current+0x1>
     a2a:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <current>
     a2e:	61 e0       	ldi	r22, 0x01	; 1
     a30:	70 e0       	ldi	r23, 0x00	; 0
     a32:	06 96       	adiw	r24, 0x06	; 6
     a34:	0e 94 73 11 	call	0x22e6	; 0x22e6 <longjmp>
     a38:	0f 90       	pop	r0
     a3a:	0f 90       	pop	r0
     a3c:	df 91       	pop	r29
     a3e:	cf 91       	pop	r28
     a40:	08 95       	ret

00000a42 <schedule>:
     a42:	0f 93       	push	r16
     a44:	1f 93       	push	r17
     a46:	cf 93       	push	r28
     a48:	df 93       	push	r29
     a4a:	c0 91 36 01 	lds	r28, 0x0136	; 0x800136 <activeStack>
     a4e:	d0 91 37 01 	lds	r29, 0x0137	; 0x800137 <activeStack+0x1>
     a52:	aa 81       	ldd	r26, Y+2	; 0x02
     a54:	bb 81       	ldd	r27, Y+3	; 0x03
     a56:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <msgQ>
     a5a:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <msgQ+0x1>
     a5e:	30 97       	sbiw	r30, 0x00	; 0
     a60:	29 f1       	breq	.+74     	; 0xaac <schedule+0x6a>
     a62:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <threadPool>
     a66:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <threadPool+0x1>
     a6a:	00 97       	sbiw	r24, 0x00	; 0
     a6c:	f9 f0       	breq	.+62     	; 0xaac <schedule+0x6a>
     a6e:	10 97       	sbiw	r26, 0x00	; 0
     a70:	79 f0       	breq	.+30     	; 0xa90 <schedule+0x4e>
     a72:	46 81       	ldd	r20, Z+6	; 0x06
     a74:	57 81       	ldd	r21, Z+7	; 0x07
     a76:	60 85       	ldd	r22, Z+8	; 0x08
     a78:	71 85       	ldd	r23, Z+9	; 0x09
     a7a:	16 96       	adiw	r26, 0x06	; 6
     a7c:	0d 91       	ld	r16, X+
     a7e:	1d 91       	ld	r17, X+
     a80:	2d 91       	ld	r18, X+
     a82:	3c 91       	ld	r19, X
     a84:	19 97       	sbiw	r26, 0x09	; 9
     a86:	40 1b       	sub	r20, r16
     a88:	51 0b       	sbc	r21, r17
     a8a:	62 0b       	sbc	r22, r18
     a8c:	73 0b       	sbc	r23, r19
     a8e:	72 f4       	brpl	.+28     	; 0xaac <schedule+0x6a>
     a90:	fc 01       	movw	r30, r24
     a92:	20 81       	ld	r18, Z
     a94:	31 81       	ldd	r19, Z+1	; 0x01
     a96:	30 93 39 01 	sts	0x0139, r19	; 0x800139 <threadPool+0x1>
     a9a:	20 93 38 01 	sts	0x0138, r18	; 0x800138 <threadPool>
     a9e:	d1 83       	std	Z+1, r29	; 0x01
     aa0:	c0 83       	st	Z, r28
     aa2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <activeStack+0x1>
     aa6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <activeStack>
     aaa:	ab df       	rcall	.-170    	; 0xa02 <dispatch>
     aac:	df 91       	pop	r29
     aae:	cf 91       	pop	r28
     ab0:	1f 91       	pop	r17
     ab2:	0f 91       	pop	r16
     ab4:	08 95       	ret

00000ab6 <__vector_1>:
     ab6:	1f 92       	push	r1
     ab8:	0f 92       	push	r0
     aba:	0f b6       	in	r0, 0x3f	; 63
     abc:	0f 92       	push	r0
     abe:	11 24       	eor	r1, r1
     ac0:	2f 93       	push	r18
     ac2:	3f 93       	push	r19
     ac4:	4f 93       	push	r20
     ac6:	5f 93       	push	r21
     ac8:	6f 93       	push	r22
     aca:	7f 93       	push	r23
     acc:	8f 93       	push	r24
     ace:	9f 93       	push	r25
     ad0:	af 93       	push	r26
     ad2:	bf 93       	push	r27
     ad4:	ef 93       	push	r30
     ad6:	ff 93       	push	r31
     ad8:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     adc:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     ae0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     ae4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     ae8:	c9 01       	movw	r24, r18
     aea:	03 2e       	mov	r0, r19
     aec:	00 0c       	add	r0, r0
     aee:	aa 0b       	sbc	r26, r26
     af0:	bb 0b       	sbc	r27, r27
     af2:	dc 01       	movw	r26, r24
     af4:	99 27       	eor	r25, r25
     af6:	88 27       	eor	r24, r24
     af8:	60 e0       	ldi	r22, 0x00	; 0
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	84 2b       	or	r24, r20
     afe:	95 2b       	or	r25, r21
     b00:	a6 2b       	or	r26, r22
     b02:	b7 2b       	or	r27, r23
     b04:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     b08:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     b0c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     b10:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     b14:	b0 9b       	sbis	0x16, 0	; 22
     b16:	1b c0       	rjmp	.+54     	; 0xb4e <__vector_1+0x98>
     b18:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     b1c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     b20:	c9 01       	movw	r24, r18
     b22:	01 96       	adiw	r24, 0x01	; 1
     b24:	09 2e       	mov	r0, r25
     b26:	00 0c       	add	r0, r0
     b28:	aa 0b       	sbc	r26, r26
     b2a:	bb 0b       	sbc	r27, r27
     b2c:	dc 01       	movw	r26, r24
     b2e:	99 27       	eor	r25, r25
     b30:	88 27       	eor	r24, r24
     b32:	60 e0       	ldi	r22, 0x00	; 0
     b34:	70 e0       	ldi	r23, 0x00	; 0
     b36:	84 2b       	or	r24, r20
     b38:	95 2b       	or	r25, r21
     b3a:	a6 2b       	or	r26, r22
     b3c:	b7 2b       	or	r27, r23
     b3e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     b42:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     b46:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     b4a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     b4e:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable>
     b52:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x1>
     b56:	30 97       	sbiw	r30, 0x00	; 0
     b58:	39 f0       	breq	.+14     	; 0xb68 <__vector_1+0xb2>
     b5a:	60 e0       	ldi	r22, 0x00	; 0
     b5c:	70 e0       	ldi	r23, 0x00	; 0
     b5e:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable>
     b62:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x1>
     b66:	09 95       	icall
     b68:	6c df       	rcall	.-296    	; 0xa42 <schedule>
     b6a:	ff 91       	pop	r31
     b6c:	ef 91       	pop	r30
     b6e:	bf 91       	pop	r27
     b70:	af 91       	pop	r26
     b72:	9f 91       	pop	r25
     b74:	8f 91       	pop	r24
     b76:	7f 91       	pop	r23
     b78:	6f 91       	pop	r22
     b7a:	5f 91       	pop	r21
     b7c:	4f 91       	pop	r20
     b7e:	3f 91       	pop	r19
     b80:	2f 91       	pop	r18
     b82:	0f 90       	pop	r0
     b84:	0f be       	out	0x3f, r0	; 63
     b86:	0f 90       	pop	r0
     b88:	1f 90       	pop	r1
     b8a:	18 95       	reti

00000b8c <__vector_2>:
     b8c:	1f 92       	push	r1
     b8e:	0f 92       	push	r0
     b90:	0f b6       	in	r0, 0x3f	; 63
     b92:	0f 92       	push	r0
     b94:	11 24       	eor	r1, r1
     b96:	2f 93       	push	r18
     b98:	3f 93       	push	r19
     b9a:	4f 93       	push	r20
     b9c:	5f 93       	push	r21
     b9e:	6f 93       	push	r22
     ba0:	7f 93       	push	r23
     ba2:	8f 93       	push	r24
     ba4:	9f 93       	push	r25
     ba6:	af 93       	push	r26
     ba8:	bf 93       	push	r27
     baa:	ef 93       	push	r30
     bac:	ff 93       	push	r31
     bae:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     bb2:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     bb6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     bba:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     bbe:	c9 01       	movw	r24, r18
     bc0:	03 2e       	mov	r0, r19
     bc2:	00 0c       	add	r0, r0
     bc4:	aa 0b       	sbc	r26, r26
     bc6:	bb 0b       	sbc	r27, r27
     bc8:	dc 01       	movw	r26, r24
     bca:	99 27       	eor	r25, r25
     bcc:	88 27       	eor	r24, r24
     bce:	60 e0       	ldi	r22, 0x00	; 0
     bd0:	70 e0       	ldi	r23, 0x00	; 0
     bd2:	84 2b       	or	r24, r20
     bd4:	95 2b       	or	r25, r21
     bd6:	a6 2b       	or	r26, r22
     bd8:	b7 2b       	or	r27, r23
     bda:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     bde:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     be2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     be6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     bea:	b0 9b       	sbis	0x16, 0	; 22
     bec:	1b c0       	rjmp	.+54     	; 0xc24 <__vector_2+0x98>
     bee:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     bf2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     bf6:	c9 01       	movw	r24, r18
     bf8:	01 96       	adiw	r24, 0x01	; 1
     bfa:	09 2e       	mov	r0, r25
     bfc:	00 0c       	add	r0, r0
     bfe:	aa 0b       	sbc	r26, r26
     c00:	bb 0b       	sbc	r27, r27
     c02:	dc 01       	movw	r26, r24
     c04:	99 27       	eor	r25, r25
     c06:	88 27       	eor	r24, r24
     c08:	60 e0       	ldi	r22, 0x00	; 0
     c0a:	70 e0       	ldi	r23, 0x00	; 0
     c0c:	84 2b       	or	r24, r20
     c0e:	95 2b       	or	r25, r21
     c10:	a6 2b       	or	r26, r22
     c12:	b7 2b       	or	r27, r23
     c14:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     c18:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     c1c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     c20:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     c24:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x2>
     c28:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x3>
     c2c:	30 97       	sbiw	r30, 0x00	; 0
     c2e:	39 f0       	breq	.+14     	; 0xc3e <__vector_2+0xb2>
     c30:	61 e0       	ldi	r22, 0x01	; 1
     c32:	70 e0       	ldi	r23, 0x00	; 0
     c34:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x2>
     c38:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x3>
     c3c:	09 95       	icall
     c3e:	01 df       	rcall	.-510    	; 0xa42 <schedule>
     c40:	ff 91       	pop	r31
     c42:	ef 91       	pop	r30
     c44:	bf 91       	pop	r27
     c46:	af 91       	pop	r26
     c48:	9f 91       	pop	r25
     c4a:	8f 91       	pop	r24
     c4c:	7f 91       	pop	r23
     c4e:	6f 91       	pop	r22
     c50:	5f 91       	pop	r21
     c52:	4f 91       	pop	r20
     c54:	3f 91       	pop	r19
     c56:	2f 91       	pop	r18
     c58:	0f 90       	pop	r0
     c5a:	0f be       	out	0x3f, r0	; 63
     c5c:	0f 90       	pop	r0
     c5e:	1f 90       	pop	r1
     c60:	18 95       	reti

00000c62 <__vector_3>:
     c62:	1f 92       	push	r1
     c64:	0f 92       	push	r0
     c66:	0f b6       	in	r0, 0x3f	; 63
     c68:	0f 92       	push	r0
     c6a:	11 24       	eor	r1, r1
     c6c:	2f 93       	push	r18
     c6e:	3f 93       	push	r19
     c70:	4f 93       	push	r20
     c72:	5f 93       	push	r21
     c74:	6f 93       	push	r22
     c76:	7f 93       	push	r23
     c78:	8f 93       	push	r24
     c7a:	9f 93       	push	r25
     c7c:	af 93       	push	r26
     c7e:	bf 93       	push	r27
     c80:	ef 93       	push	r30
     c82:	ff 93       	push	r31
     c84:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     c88:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     c8c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c90:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c94:	c9 01       	movw	r24, r18
     c96:	03 2e       	mov	r0, r19
     c98:	00 0c       	add	r0, r0
     c9a:	aa 0b       	sbc	r26, r26
     c9c:	bb 0b       	sbc	r27, r27
     c9e:	dc 01       	movw	r26, r24
     ca0:	99 27       	eor	r25, r25
     ca2:	88 27       	eor	r24, r24
     ca4:	60 e0       	ldi	r22, 0x00	; 0
     ca6:	70 e0       	ldi	r23, 0x00	; 0
     ca8:	84 2b       	or	r24, r20
     caa:	95 2b       	or	r25, r21
     cac:	a6 2b       	or	r26, r22
     cae:	b7 2b       	or	r27, r23
     cb0:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     cb4:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     cb8:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     cbc:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     cc0:	b0 9b       	sbis	0x16, 0	; 22
     cc2:	1b c0       	rjmp	.+54     	; 0xcfa <__vector_3+0x98>
     cc4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     cc8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     ccc:	c9 01       	movw	r24, r18
     cce:	01 96       	adiw	r24, 0x01	; 1
     cd0:	09 2e       	mov	r0, r25
     cd2:	00 0c       	add	r0, r0
     cd4:	aa 0b       	sbc	r26, r26
     cd6:	bb 0b       	sbc	r27, r27
     cd8:	dc 01       	movw	r26, r24
     cda:	99 27       	eor	r25, r25
     cdc:	88 27       	eor	r24, r24
     cde:	60 e0       	ldi	r22, 0x00	; 0
     ce0:	70 e0       	ldi	r23, 0x00	; 0
     ce2:	84 2b       	or	r24, r20
     ce4:	95 2b       	or	r25, r21
     ce6:	a6 2b       	or	r26, r22
     ce8:	b7 2b       	or	r27, r23
     cea:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     cee:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     cf2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     cf6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     cfa:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x4>
     cfe:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x5>
     d02:	30 97       	sbiw	r30, 0x00	; 0
     d04:	39 f0       	breq	.+14     	; 0xd14 <__vector_3+0xb2>
     d06:	62 e0       	ldi	r22, 0x02	; 2
     d08:	70 e0       	ldi	r23, 0x00	; 0
     d0a:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x4>
     d0e:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x5>
     d12:	09 95       	icall
     d14:	96 de       	rcall	.-724    	; 0xa42 <schedule>
     d16:	ff 91       	pop	r31
     d18:	ef 91       	pop	r30
     d1a:	bf 91       	pop	r27
     d1c:	af 91       	pop	r26
     d1e:	9f 91       	pop	r25
     d20:	8f 91       	pop	r24
     d22:	7f 91       	pop	r23
     d24:	6f 91       	pop	r22
     d26:	5f 91       	pop	r21
     d28:	4f 91       	pop	r20
     d2a:	3f 91       	pop	r19
     d2c:	2f 91       	pop	r18
     d2e:	0f 90       	pop	r0
     d30:	0f be       	out	0x3f, r0	; 63
     d32:	0f 90       	pop	r0
     d34:	1f 90       	pop	r1
     d36:	18 95       	reti

00000d38 <__vector_4>:
     d38:	1f 92       	push	r1
     d3a:	0f 92       	push	r0
     d3c:	0f b6       	in	r0, 0x3f	; 63
     d3e:	0f 92       	push	r0
     d40:	11 24       	eor	r1, r1
     d42:	2f 93       	push	r18
     d44:	3f 93       	push	r19
     d46:	4f 93       	push	r20
     d48:	5f 93       	push	r21
     d4a:	6f 93       	push	r22
     d4c:	7f 93       	push	r23
     d4e:	8f 93       	push	r24
     d50:	9f 93       	push	r25
     d52:	af 93       	push	r26
     d54:	bf 93       	push	r27
     d56:	ef 93       	push	r30
     d58:	ff 93       	push	r31
     d5a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     d5e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     d62:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     d66:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     d6a:	c9 01       	movw	r24, r18
     d6c:	03 2e       	mov	r0, r19
     d6e:	00 0c       	add	r0, r0
     d70:	aa 0b       	sbc	r26, r26
     d72:	bb 0b       	sbc	r27, r27
     d74:	dc 01       	movw	r26, r24
     d76:	99 27       	eor	r25, r25
     d78:	88 27       	eor	r24, r24
     d7a:	60 e0       	ldi	r22, 0x00	; 0
     d7c:	70 e0       	ldi	r23, 0x00	; 0
     d7e:	84 2b       	or	r24, r20
     d80:	95 2b       	or	r25, r21
     d82:	a6 2b       	or	r26, r22
     d84:	b7 2b       	or	r27, r23
     d86:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     d8a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     d8e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     d92:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     d96:	b0 9b       	sbis	0x16, 0	; 22
     d98:	1b c0       	rjmp	.+54     	; 0xdd0 <__vector_4+0x98>
     d9a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     d9e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     da2:	c9 01       	movw	r24, r18
     da4:	01 96       	adiw	r24, 0x01	; 1
     da6:	09 2e       	mov	r0, r25
     da8:	00 0c       	add	r0, r0
     daa:	aa 0b       	sbc	r26, r26
     dac:	bb 0b       	sbc	r27, r27
     dae:	dc 01       	movw	r26, r24
     db0:	99 27       	eor	r25, r25
     db2:	88 27       	eor	r24, r24
     db4:	60 e0       	ldi	r22, 0x00	; 0
     db6:	70 e0       	ldi	r23, 0x00	; 0
     db8:	84 2b       	or	r24, r20
     dba:	95 2b       	or	r25, r21
     dbc:	a6 2b       	or	r26, r22
     dbe:	b7 2b       	or	r27, r23
     dc0:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     dc4:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     dc8:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     dcc:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     dd0:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x6>
     dd4:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x7>
     dd8:	30 97       	sbiw	r30, 0x00	; 0
     dda:	39 f0       	breq	.+14     	; 0xdea <__vector_4+0xb2>
     ddc:	63 e0       	ldi	r22, 0x03	; 3
     dde:	70 e0       	ldi	r23, 0x00	; 0
     de0:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x6>
     de4:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x7>
     de8:	09 95       	icall
     dea:	2b de       	rcall	.-938    	; 0xa42 <schedule>
     dec:	ff 91       	pop	r31
     dee:	ef 91       	pop	r30
     df0:	bf 91       	pop	r27
     df2:	af 91       	pop	r26
     df4:	9f 91       	pop	r25
     df6:	8f 91       	pop	r24
     df8:	7f 91       	pop	r23
     dfa:	6f 91       	pop	r22
     dfc:	5f 91       	pop	r21
     dfe:	4f 91       	pop	r20
     e00:	3f 91       	pop	r19
     e02:	2f 91       	pop	r18
     e04:	0f 90       	pop	r0
     e06:	0f be       	out	0x3f, r0	; 63
     e08:	0f 90       	pop	r0
     e0a:	1f 90       	pop	r1
     e0c:	18 95       	reti

00000e0e <__vector_5>:
     e0e:	1f 92       	push	r1
     e10:	0f 92       	push	r0
     e12:	0f b6       	in	r0, 0x3f	; 63
     e14:	0f 92       	push	r0
     e16:	11 24       	eor	r1, r1
     e18:	2f 93       	push	r18
     e1a:	3f 93       	push	r19
     e1c:	4f 93       	push	r20
     e1e:	5f 93       	push	r21
     e20:	6f 93       	push	r22
     e22:	7f 93       	push	r23
     e24:	8f 93       	push	r24
     e26:	9f 93       	push	r25
     e28:	af 93       	push	r26
     e2a:	bf 93       	push	r27
     e2c:	ef 93       	push	r30
     e2e:	ff 93       	push	r31
     e30:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     e34:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     e38:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     e3c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     e40:	c9 01       	movw	r24, r18
     e42:	03 2e       	mov	r0, r19
     e44:	00 0c       	add	r0, r0
     e46:	aa 0b       	sbc	r26, r26
     e48:	bb 0b       	sbc	r27, r27
     e4a:	dc 01       	movw	r26, r24
     e4c:	99 27       	eor	r25, r25
     e4e:	88 27       	eor	r24, r24
     e50:	60 e0       	ldi	r22, 0x00	; 0
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	84 2b       	or	r24, r20
     e56:	95 2b       	or	r25, r21
     e58:	a6 2b       	or	r26, r22
     e5a:	b7 2b       	or	r27, r23
     e5c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     e60:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     e64:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     e68:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     e6c:	b0 9b       	sbis	0x16, 0	; 22
     e6e:	1b c0       	rjmp	.+54     	; 0xea6 <__vector_5+0x98>
     e70:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     e74:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     e78:	c9 01       	movw	r24, r18
     e7a:	01 96       	adiw	r24, 0x01	; 1
     e7c:	09 2e       	mov	r0, r25
     e7e:	00 0c       	add	r0, r0
     e80:	aa 0b       	sbc	r26, r26
     e82:	bb 0b       	sbc	r27, r27
     e84:	dc 01       	movw	r26, r24
     e86:	99 27       	eor	r25, r25
     e88:	88 27       	eor	r24, r24
     e8a:	60 e0       	ldi	r22, 0x00	; 0
     e8c:	70 e0       	ldi	r23, 0x00	; 0
     e8e:	84 2b       	or	r24, r20
     e90:	95 2b       	or	r25, r21
     e92:	a6 2b       	or	r26, r22
     e94:	b7 2b       	or	r27, r23
     e96:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     e9a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     e9e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     ea2:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     ea6:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x8>
     eaa:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x9>
     eae:	30 97       	sbiw	r30, 0x00	; 0
     eb0:	39 f0       	breq	.+14     	; 0xec0 <__vector_5+0xb2>
     eb2:	64 e0       	ldi	r22, 0x04	; 4
     eb4:	70 e0       	ldi	r23, 0x00	; 0
     eb6:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x8>
     eba:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x9>
     ebe:	09 95       	icall
     ec0:	c0 dd       	rcall	.-1152   	; 0xa42 <schedule>
     ec2:	ff 91       	pop	r31
     ec4:	ef 91       	pop	r30
     ec6:	bf 91       	pop	r27
     ec8:	af 91       	pop	r26
     eca:	9f 91       	pop	r25
     ecc:	8f 91       	pop	r24
     ece:	7f 91       	pop	r23
     ed0:	6f 91       	pop	r22
     ed2:	5f 91       	pop	r21
     ed4:	4f 91       	pop	r20
     ed6:	3f 91       	pop	r19
     ed8:	2f 91       	pop	r18
     eda:	0f 90       	pop	r0
     edc:	0f be       	out	0x3f, r0	; 63
     ede:	0f 90       	pop	r0
     ee0:	1f 90       	pop	r1
     ee2:	18 95       	reti

00000ee4 <__vector_10>:
     ee4:	1f 92       	push	r1
     ee6:	0f 92       	push	r0
     ee8:	0f b6       	in	r0, 0x3f	; 63
     eea:	0f 92       	push	r0
     eec:	11 24       	eor	r1, r1
     eee:	2f 93       	push	r18
     ef0:	3f 93       	push	r19
     ef2:	4f 93       	push	r20
     ef4:	5f 93       	push	r21
     ef6:	6f 93       	push	r22
     ef8:	7f 93       	push	r23
     efa:	8f 93       	push	r24
     efc:	9f 93       	push	r25
     efe:	af 93       	push	r26
     f00:	bf 93       	push	r27
     f02:	ef 93       	push	r30
     f04:	ff 93       	push	r31
     f06:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     f0a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     f0e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f12:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f16:	c9 01       	movw	r24, r18
     f18:	03 2e       	mov	r0, r19
     f1a:	00 0c       	add	r0, r0
     f1c:	aa 0b       	sbc	r26, r26
     f1e:	bb 0b       	sbc	r27, r27
     f20:	dc 01       	movw	r26, r24
     f22:	99 27       	eor	r25, r25
     f24:	88 27       	eor	r24, r24
     f26:	60 e0       	ldi	r22, 0x00	; 0
     f28:	70 e0       	ldi	r23, 0x00	; 0
     f2a:	84 2b       	or	r24, r20
     f2c:	95 2b       	or	r25, r21
     f2e:	a6 2b       	or	r26, r22
     f30:	b7 2b       	or	r27, r23
     f32:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     f36:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     f3a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     f3e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     f42:	b0 9b       	sbis	0x16, 0	; 22
     f44:	1b c0       	rjmp	.+54     	; 0xf7c <__vector_10+0x98>
     f46:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f4a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f4e:	c9 01       	movw	r24, r18
     f50:	01 96       	adiw	r24, 0x01	; 1
     f52:	09 2e       	mov	r0, r25
     f54:	00 0c       	add	r0, r0
     f56:	aa 0b       	sbc	r26, r26
     f58:	bb 0b       	sbc	r27, r27
     f5a:	dc 01       	movw	r26, r24
     f5c:	99 27       	eor	r25, r25
     f5e:	88 27       	eor	r24, r24
     f60:	60 e0       	ldi	r22, 0x00	; 0
     f62:	70 e0       	ldi	r23, 0x00	; 0
     f64:	84 2b       	or	r24, r20
     f66:	95 2b       	or	r25, r21
     f68:	a6 2b       	or	r26, r22
     f6a:	b7 2b       	or	r27, r23
     f6c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     f70:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     f74:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     f78:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     f7c:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0xa>
     f80:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0xb>
     f84:	30 97       	sbiw	r30, 0x00	; 0
     f86:	39 f0       	breq	.+14     	; 0xf96 <__vector_10+0xb2>
     f88:	65 e0       	ldi	r22, 0x05	; 5
     f8a:	70 e0       	ldi	r23, 0x00	; 0
     f8c:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0xa>
     f90:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0xb>
     f94:	09 95       	icall
     f96:	55 dd       	rcall	.-1366   	; 0xa42 <schedule>
     f98:	ff 91       	pop	r31
     f9a:	ef 91       	pop	r30
     f9c:	bf 91       	pop	r27
     f9e:	af 91       	pop	r26
     fa0:	9f 91       	pop	r25
     fa2:	8f 91       	pop	r24
     fa4:	7f 91       	pop	r23
     fa6:	6f 91       	pop	r22
     fa8:	5f 91       	pop	r21
     faa:	4f 91       	pop	r20
     fac:	3f 91       	pop	r19
     fae:	2f 91       	pop	r18
     fb0:	0f 90       	pop	r0
     fb2:	0f be       	out	0x3f, r0	; 63
     fb4:	0f 90       	pop	r0
     fb6:	1f 90       	pop	r1
     fb8:	18 95       	reti

00000fba <__vector_11>:
     fba:	1f 92       	push	r1
     fbc:	0f 92       	push	r0
     fbe:	0f b6       	in	r0, 0x3f	; 63
     fc0:	0f 92       	push	r0
     fc2:	11 24       	eor	r1, r1
     fc4:	2f 93       	push	r18
     fc6:	3f 93       	push	r19
     fc8:	4f 93       	push	r20
     fca:	5f 93       	push	r21
     fcc:	6f 93       	push	r22
     fce:	7f 93       	push	r23
     fd0:	8f 93       	push	r24
     fd2:	9f 93       	push	r25
     fd4:	af 93       	push	r26
     fd6:	bf 93       	push	r27
     fd8:	ef 93       	push	r30
     fda:	ff 93       	push	r31
     fdc:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     fe0:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     fe4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     fe8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     fec:	c9 01       	movw	r24, r18
     fee:	03 2e       	mov	r0, r19
     ff0:	00 0c       	add	r0, r0
     ff2:	aa 0b       	sbc	r26, r26
     ff4:	bb 0b       	sbc	r27, r27
     ff6:	dc 01       	movw	r26, r24
     ff8:	99 27       	eor	r25, r25
     ffa:	88 27       	eor	r24, r24
     ffc:	60 e0       	ldi	r22, 0x00	; 0
     ffe:	70 e0       	ldi	r23, 0x00	; 0
    1000:	84 2b       	or	r24, r20
    1002:	95 2b       	or	r25, r21
    1004:	a6 2b       	or	r26, r22
    1006:	b7 2b       	or	r27, r23
    1008:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    100c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1010:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1014:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1018:	b0 9b       	sbis	0x16, 0	; 22
    101a:	1b c0       	rjmp	.+54     	; 0x1052 <__vector_11+0x98>
    101c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1020:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1024:	c9 01       	movw	r24, r18
    1026:	01 96       	adiw	r24, 0x01	; 1
    1028:	09 2e       	mov	r0, r25
    102a:	00 0c       	add	r0, r0
    102c:	aa 0b       	sbc	r26, r26
    102e:	bb 0b       	sbc	r27, r27
    1030:	dc 01       	movw	r26, r24
    1032:	99 27       	eor	r25, r25
    1034:	88 27       	eor	r24, r24
    1036:	60 e0       	ldi	r22, 0x00	; 0
    1038:	70 e0       	ldi	r23, 0x00	; 0
    103a:	84 2b       	or	r24, r20
    103c:	95 2b       	or	r25, r21
    103e:	a6 2b       	or	r26, r22
    1040:	b7 2b       	or	r27, r23
    1042:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1046:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    104a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    104e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1052:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0xc>
    1056:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0xd>
    105a:	30 97       	sbiw	r30, 0x00	; 0
    105c:	39 f0       	breq	.+14     	; 0x106c <__vector_11+0xb2>
    105e:	66 e0       	ldi	r22, 0x06	; 6
    1060:	70 e0       	ldi	r23, 0x00	; 0
    1062:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0xc>
    1066:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0xd>
    106a:	09 95       	icall
    106c:	ea dc       	rcall	.-1580   	; 0xa42 <schedule>
    106e:	ff 91       	pop	r31
    1070:	ef 91       	pop	r30
    1072:	bf 91       	pop	r27
    1074:	af 91       	pop	r26
    1076:	9f 91       	pop	r25
    1078:	8f 91       	pop	r24
    107a:	7f 91       	pop	r23
    107c:	6f 91       	pop	r22
    107e:	5f 91       	pop	r21
    1080:	4f 91       	pop	r20
    1082:	3f 91       	pop	r19
    1084:	2f 91       	pop	r18
    1086:	0f 90       	pop	r0
    1088:	0f be       	out	0x3f, r0	; 63
    108a:	0f 90       	pop	r0
    108c:	1f 90       	pop	r1
    108e:	18 95       	reti

00001090 <__vector_12>:
    1090:	1f 92       	push	r1
    1092:	0f 92       	push	r0
    1094:	0f b6       	in	r0, 0x3f	; 63
    1096:	0f 92       	push	r0
    1098:	11 24       	eor	r1, r1
    109a:	2f 93       	push	r18
    109c:	3f 93       	push	r19
    109e:	4f 93       	push	r20
    10a0:	5f 93       	push	r21
    10a2:	6f 93       	push	r22
    10a4:	7f 93       	push	r23
    10a6:	8f 93       	push	r24
    10a8:	9f 93       	push	r25
    10aa:	af 93       	push	r26
    10ac:	bf 93       	push	r27
    10ae:	ef 93       	push	r30
    10b0:	ff 93       	push	r31
    10b2:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    10b6:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    10ba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10be:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10c2:	c9 01       	movw	r24, r18
    10c4:	03 2e       	mov	r0, r19
    10c6:	00 0c       	add	r0, r0
    10c8:	aa 0b       	sbc	r26, r26
    10ca:	bb 0b       	sbc	r27, r27
    10cc:	dc 01       	movw	r26, r24
    10ce:	99 27       	eor	r25, r25
    10d0:	88 27       	eor	r24, r24
    10d2:	60 e0       	ldi	r22, 0x00	; 0
    10d4:	70 e0       	ldi	r23, 0x00	; 0
    10d6:	84 2b       	or	r24, r20
    10d8:	95 2b       	or	r25, r21
    10da:	a6 2b       	or	r26, r22
    10dc:	b7 2b       	or	r27, r23
    10de:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    10e2:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    10e6:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    10ea:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    10ee:	b0 9b       	sbis	0x16, 0	; 22
    10f0:	1b c0       	rjmp	.+54     	; 0x1128 <__vector_12+0x98>
    10f2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10f6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10fa:	c9 01       	movw	r24, r18
    10fc:	01 96       	adiw	r24, 0x01	; 1
    10fe:	09 2e       	mov	r0, r25
    1100:	00 0c       	add	r0, r0
    1102:	aa 0b       	sbc	r26, r26
    1104:	bb 0b       	sbc	r27, r27
    1106:	dc 01       	movw	r26, r24
    1108:	99 27       	eor	r25, r25
    110a:	88 27       	eor	r24, r24
    110c:	60 e0       	ldi	r22, 0x00	; 0
    110e:	70 e0       	ldi	r23, 0x00	; 0
    1110:	84 2b       	or	r24, r20
    1112:	95 2b       	or	r25, r21
    1114:	a6 2b       	or	r26, r22
    1116:	b7 2b       	or	r27, r23
    1118:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    111c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1120:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1124:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1128:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable+0xe>
    112c:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0xf>
    1130:	30 97       	sbiw	r30, 0x00	; 0
    1132:	39 f0       	breq	.+14     	; 0x1142 <__vector_12+0xb2>
    1134:	67 e0       	ldi	r22, 0x07	; 7
    1136:	70 e0       	ldi	r23, 0x00	; 0
    1138:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable+0xe>
    113c:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0xf>
    1140:	09 95       	icall
    1142:	7f dc       	rcall	.-1794   	; 0xa42 <schedule>
    1144:	ff 91       	pop	r31
    1146:	ef 91       	pop	r30
    1148:	bf 91       	pop	r27
    114a:	af 91       	pop	r26
    114c:	9f 91       	pop	r25
    114e:	8f 91       	pop	r24
    1150:	7f 91       	pop	r23
    1152:	6f 91       	pop	r22
    1154:	5f 91       	pop	r21
    1156:	4f 91       	pop	r20
    1158:	3f 91       	pop	r19
    115a:	2f 91       	pop	r18
    115c:	0f 90       	pop	r0
    115e:	0f be       	out	0x3f, r0	; 63
    1160:	0f 90       	pop	r0
    1162:	1f 90       	pop	r1
    1164:	18 95       	reti

00001166 <__vector_13>:
    1166:	1f 92       	push	r1
    1168:	0f 92       	push	r0
    116a:	0f b6       	in	r0, 0x3f	; 63
    116c:	0f 92       	push	r0
    116e:	11 24       	eor	r1, r1
    1170:	2f 93       	push	r18
    1172:	3f 93       	push	r19
    1174:	4f 93       	push	r20
    1176:	5f 93       	push	r21
    1178:	6f 93       	push	r22
    117a:	7f 93       	push	r23
    117c:	8f 93       	push	r24
    117e:	9f 93       	push	r25
    1180:	af 93       	push	r26
    1182:	bf 93       	push	r27
    1184:	ef 93       	push	r30
    1186:	ff 93       	push	r31
    1188:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    118c:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1190:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1194:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1198:	c9 01       	movw	r24, r18
    119a:	03 2e       	mov	r0, r19
    119c:	00 0c       	add	r0, r0
    119e:	aa 0b       	sbc	r26, r26
    11a0:	bb 0b       	sbc	r27, r27
    11a2:	dc 01       	movw	r26, r24
    11a4:	99 27       	eor	r25, r25
    11a6:	88 27       	eor	r24, r24
    11a8:	60 e0       	ldi	r22, 0x00	; 0
    11aa:	70 e0       	ldi	r23, 0x00	; 0
    11ac:	84 2b       	or	r24, r20
    11ae:	95 2b       	or	r25, r21
    11b0:	a6 2b       	or	r26, r22
    11b2:	b7 2b       	or	r27, r23
    11b4:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    11b8:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    11bc:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    11c0:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    11c4:	b0 9b       	sbis	0x16, 0	; 22
    11c6:	1b c0       	rjmp	.+54     	; 0x11fe <__vector_13+0x98>
    11c8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11cc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11d0:	c9 01       	movw	r24, r18
    11d2:	01 96       	adiw	r24, 0x01	; 1
    11d4:	09 2e       	mov	r0, r25
    11d6:	00 0c       	add	r0, r0
    11d8:	aa 0b       	sbc	r26, r26
    11da:	bb 0b       	sbc	r27, r27
    11dc:	dc 01       	movw	r26, r24
    11de:	99 27       	eor	r25, r25
    11e0:	88 27       	eor	r24, r24
    11e2:	60 e0       	ldi	r22, 0x00	; 0
    11e4:	70 e0       	ldi	r23, 0x00	; 0
    11e6:	84 2b       	or	r24, r20
    11e8:	95 2b       	or	r25, r21
    11ea:	a6 2b       	or	r26, r22
    11ec:	b7 2b       	or	r27, r23
    11ee:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    11f2:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    11f6:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    11fa:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    11fe:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0x10>
    1202:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0x11>
    1206:	30 97       	sbiw	r30, 0x00	; 0
    1208:	39 f0       	breq	.+14     	; 0x1218 <__vector_13+0xb2>
    120a:	68 e0       	ldi	r22, 0x08	; 8
    120c:	70 e0       	ldi	r23, 0x00	; 0
    120e:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0x10>
    1212:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0x11>
    1216:	09 95       	icall
    1218:	14 dc       	rcall	.-2008   	; 0xa42 <schedule>
    121a:	ff 91       	pop	r31
    121c:	ef 91       	pop	r30
    121e:	bf 91       	pop	r27
    1220:	af 91       	pop	r26
    1222:	9f 91       	pop	r25
    1224:	8f 91       	pop	r24
    1226:	7f 91       	pop	r23
    1228:	6f 91       	pop	r22
    122a:	5f 91       	pop	r21
    122c:	4f 91       	pop	r20
    122e:	3f 91       	pop	r19
    1230:	2f 91       	pop	r18
    1232:	0f 90       	pop	r0
    1234:	0f be       	out	0x3f, r0	; 63
    1236:	0f 90       	pop	r0
    1238:	1f 90       	pop	r1
    123a:	18 95       	reti

0000123c <__vector_14>:
    123c:	1f 92       	push	r1
    123e:	0f 92       	push	r0
    1240:	0f b6       	in	r0, 0x3f	; 63
    1242:	0f 92       	push	r0
    1244:	11 24       	eor	r1, r1
    1246:	2f 93       	push	r18
    1248:	3f 93       	push	r19
    124a:	4f 93       	push	r20
    124c:	5f 93       	push	r21
    124e:	6f 93       	push	r22
    1250:	7f 93       	push	r23
    1252:	8f 93       	push	r24
    1254:	9f 93       	push	r25
    1256:	af 93       	push	r26
    1258:	bf 93       	push	r27
    125a:	ef 93       	push	r30
    125c:	ff 93       	push	r31
    125e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1262:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1266:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    126a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    126e:	c9 01       	movw	r24, r18
    1270:	03 2e       	mov	r0, r19
    1272:	00 0c       	add	r0, r0
    1274:	aa 0b       	sbc	r26, r26
    1276:	bb 0b       	sbc	r27, r27
    1278:	dc 01       	movw	r26, r24
    127a:	99 27       	eor	r25, r25
    127c:	88 27       	eor	r24, r24
    127e:	60 e0       	ldi	r22, 0x00	; 0
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	84 2b       	or	r24, r20
    1284:	95 2b       	or	r25, r21
    1286:	a6 2b       	or	r26, r22
    1288:	b7 2b       	or	r27, r23
    128a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    128e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1292:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1296:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    129a:	b0 9b       	sbis	0x16, 0	; 22
    129c:	1b c0       	rjmp	.+54     	; 0x12d4 <__vector_14+0x98>
    129e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    12a2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    12a6:	c9 01       	movw	r24, r18
    12a8:	01 96       	adiw	r24, 0x01	; 1
    12aa:	09 2e       	mov	r0, r25
    12ac:	00 0c       	add	r0, r0
    12ae:	aa 0b       	sbc	r26, r26
    12b0:	bb 0b       	sbc	r27, r27
    12b2:	dc 01       	movw	r26, r24
    12b4:	99 27       	eor	r25, r25
    12b6:	88 27       	eor	r24, r24
    12b8:	60 e0       	ldi	r22, 0x00	; 0
    12ba:	70 e0       	ldi	r23, 0x00	; 0
    12bc:	84 2b       	or	r24, r20
    12be:	95 2b       	or	r25, r21
    12c0:	a6 2b       	or	r26, r22
    12c2:	b7 2b       	or	r27, r23
    12c4:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    12c8:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    12cc:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    12d0:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    12d4:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <mtable+0x12>
    12d8:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <mtable+0x13>
    12dc:	30 97       	sbiw	r30, 0x00	; 0
    12de:	39 f0       	breq	.+14     	; 0x12ee <__vector_14+0xb2>
    12e0:	69 e0       	ldi	r22, 0x09	; 9
    12e2:	70 e0       	ldi	r23, 0x00	; 0
    12e4:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <otable+0x12>
    12e8:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <otable+0x13>
    12ec:	09 95       	icall
    12ee:	a9 db       	rcall	.-2222   	; 0xa42 <schedule>
    12f0:	ff 91       	pop	r31
    12f2:	ef 91       	pop	r30
    12f4:	bf 91       	pop	r27
    12f6:	af 91       	pop	r26
    12f8:	9f 91       	pop	r25
    12fa:	8f 91       	pop	r24
    12fc:	7f 91       	pop	r23
    12fe:	6f 91       	pop	r22
    1300:	5f 91       	pop	r21
    1302:	4f 91       	pop	r20
    1304:	3f 91       	pop	r19
    1306:	2f 91       	pop	r18
    1308:	0f 90       	pop	r0
    130a:	0f be       	out	0x3f, r0	; 63
    130c:	0f 90       	pop	r0
    130e:	1f 90       	pop	r1
    1310:	18 95       	reti

00001312 <__vector_15>:
    1312:	1f 92       	push	r1
    1314:	0f 92       	push	r0
    1316:	0f b6       	in	r0, 0x3f	; 63
    1318:	0f 92       	push	r0
    131a:	11 24       	eor	r1, r1
    131c:	2f 93       	push	r18
    131e:	3f 93       	push	r19
    1320:	4f 93       	push	r20
    1322:	5f 93       	push	r21
    1324:	6f 93       	push	r22
    1326:	7f 93       	push	r23
    1328:	8f 93       	push	r24
    132a:	9f 93       	push	r25
    132c:	af 93       	push	r26
    132e:	bf 93       	push	r27
    1330:	ef 93       	push	r30
    1332:	ff 93       	push	r31
    1334:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1338:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    133c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1340:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1344:	c9 01       	movw	r24, r18
    1346:	03 2e       	mov	r0, r19
    1348:	00 0c       	add	r0, r0
    134a:	aa 0b       	sbc	r26, r26
    134c:	bb 0b       	sbc	r27, r27
    134e:	dc 01       	movw	r26, r24
    1350:	99 27       	eor	r25, r25
    1352:	88 27       	eor	r24, r24
    1354:	60 e0       	ldi	r22, 0x00	; 0
    1356:	70 e0       	ldi	r23, 0x00	; 0
    1358:	84 2b       	or	r24, r20
    135a:	95 2b       	or	r25, r21
    135c:	a6 2b       	or	r26, r22
    135e:	b7 2b       	or	r27, r23
    1360:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1364:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1368:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    136c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1370:	b0 9b       	sbis	0x16, 0	; 22
    1372:	1b c0       	rjmp	.+54     	; 0x13aa <__vector_15+0x98>
    1374:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1378:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    137c:	c9 01       	movw	r24, r18
    137e:	01 96       	adiw	r24, 0x01	; 1
    1380:	09 2e       	mov	r0, r25
    1382:	00 0c       	add	r0, r0
    1384:	aa 0b       	sbc	r26, r26
    1386:	bb 0b       	sbc	r27, r27
    1388:	dc 01       	movw	r26, r24
    138a:	99 27       	eor	r25, r25
    138c:	88 27       	eor	r24, r24
    138e:	60 e0       	ldi	r22, 0x00	; 0
    1390:	70 e0       	ldi	r23, 0x00	; 0
    1392:	84 2b       	or	r24, r20
    1394:	95 2b       	or	r25, r21
    1396:	a6 2b       	or	r26, r22
    1398:	b7 2b       	or	r27, r23
    139a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    139e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    13a2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    13a6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    13aa:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <mtable+0x14>
    13ae:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <mtable+0x15>
    13b2:	30 97       	sbiw	r30, 0x00	; 0
    13b4:	39 f0       	breq	.+14     	; 0x13c4 <__vector_15+0xb2>
    13b6:	6a e0       	ldi	r22, 0x0A	; 10
    13b8:	70 e0       	ldi	r23, 0x00	; 0
    13ba:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <otable+0x14>
    13be:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <otable+0x15>
    13c2:	09 95       	icall
    13c4:	3e db       	rcall	.-2436   	; 0xa42 <schedule>
    13c6:	ff 91       	pop	r31
    13c8:	ef 91       	pop	r30
    13ca:	bf 91       	pop	r27
    13cc:	af 91       	pop	r26
    13ce:	9f 91       	pop	r25
    13d0:	8f 91       	pop	r24
    13d2:	7f 91       	pop	r23
    13d4:	6f 91       	pop	r22
    13d6:	5f 91       	pop	r21
    13d8:	4f 91       	pop	r20
    13da:	3f 91       	pop	r19
    13dc:	2f 91       	pop	r18
    13de:	0f 90       	pop	r0
    13e0:	0f be       	out	0x3f, r0	; 63
    13e2:	0f 90       	pop	r0
    13e4:	1f 90       	pop	r1
    13e6:	18 95       	reti

000013e8 <__vector_16>:
    13e8:	1f 92       	push	r1
    13ea:	0f 92       	push	r0
    13ec:	0f b6       	in	r0, 0x3f	; 63
    13ee:	0f 92       	push	r0
    13f0:	11 24       	eor	r1, r1
    13f2:	2f 93       	push	r18
    13f4:	3f 93       	push	r19
    13f6:	4f 93       	push	r20
    13f8:	5f 93       	push	r21
    13fa:	6f 93       	push	r22
    13fc:	7f 93       	push	r23
    13fe:	8f 93       	push	r24
    1400:	9f 93       	push	r25
    1402:	af 93       	push	r26
    1404:	bf 93       	push	r27
    1406:	ef 93       	push	r30
    1408:	ff 93       	push	r31
    140a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    140e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1412:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1416:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    141a:	c9 01       	movw	r24, r18
    141c:	03 2e       	mov	r0, r19
    141e:	00 0c       	add	r0, r0
    1420:	aa 0b       	sbc	r26, r26
    1422:	bb 0b       	sbc	r27, r27
    1424:	dc 01       	movw	r26, r24
    1426:	99 27       	eor	r25, r25
    1428:	88 27       	eor	r24, r24
    142a:	60 e0       	ldi	r22, 0x00	; 0
    142c:	70 e0       	ldi	r23, 0x00	; 0
    142e:	84 2b       	or	r24, r20
    1430:	95 2b       	or	r25, r21
    1432:	a6 2b       	or	r26, r22
    1434:	b7 2b       	or	r27, r23
    1436:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    143a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    143e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1442:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1446:	b0 9b       	sbis	0x16, 0	; 22
    1448:	1b c0       	rjmp	.+54     	; 0x1480 <__vector_16+0x98>
    144a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    144e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1452:	c9 01       	movw	r24, r18
    1454:	01 96       	adiw	r24, 0x01	; 1
    1456:	09 2e       	mov	r0, r25
    1458:	00 0c       	add	r0, r0
    145a:	aa 0b       	sbc	r26, r26
    145c:	bb 0b       	sbc	r27, r27
    145e:	dc 01       	movw	r26, r24
    1460:	99 27       	eor	r25, r25
    1462:	88 27       	eor	r24, r24
    1464:	60 e0       	ldi	r22, 0x00	; 0
    1466:	70 e0       	ldi	r23, 0x00	; 0
    1468:	84 2b       	or	r24, r20
    146a:	95 2b       	or	r25, r21
    146c:	a6 2b       	or	r26, r22
    146e:	b7 2b       	or	r27, r23
    1470:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1474:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1478:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    147c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1480:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <mtable+0x16>
    1484:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <mtable+0x17>
    1488:	30 97       	sbiw	r30, 0x00	; 0
    148a:	39 f0       	breq	.+14     	; 0x149a <__vector_16+0xb2>
    148c:	6b e0       	ldi	r22, 0x0B	; 11
    148e:	70 e0       	ldi	r23, 0x00	; 0
    1490:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <otable+0x16>
    1494:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <otable+0x17>
    1498:	09 95       	icall
    149a:	d3 da       	rcall	.-2650   	; 0xa42 <schedule>
    149c:	ff 91       	pop	r31
    149e:	ef 91       	pop	r30
    14a0:	bf 91       	pop	r27
    14a2:	af 91       	pop	r26
    14a4:	9f 91       	pop	r25
    14a6:	8f 91       	pop	r24
    14a8:	7f 91       	pop	r23
    14aa:	6f 91       	pop	r22
    14ac:	5f 91       	pop	r21
    14ae:	4f 91       	pop	r20
    14b0:	3f 91       	pop	r19
    14b2:	2f 91       	pop	r18
    14b4:	0f 90       	pop	r0
    14b6:	0f be       	out	0x3f, r0	; 63
    14b8:	0f 90       	pop	r0
    14ba:	1f 90       	pop	r1
    14bc:	18 95       	reti

000014be <__vector_17>:
    14be:	1f 92       	push	r1
    14c0:	0f 92       	push	r0
    14c2:	0f b6       	in	r0, 0x3f	; 63
    14c4:	0f 92       	push	r0
    14c6:	11 24       	eor	r1, r1
    14c8:	2f 93       	push	r18
    14ca:	3f 93       	push	r19
    14cc:	4f 93       	push	r20
    14ce:	5f 93       	push	r21
    14d0:	6f 93       	push	r22
    14d2:	7f 93       	push	r23
    14d4:	8f 93       	push	r24
    14d6:	9f 93       	push	r25
    14d8:	af 93       	push	r26
    14da:	bf 93       	push	r27
    14dc:	ef 93       	push	r30
    14de:	ff 93       	push	r31
    14e0:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    14e4:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    14e8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    14ec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    14f0:	c9 01       	movw	r24, r18
    14f2:	03 2e       	mov	r0, r19
    14f4:	00 0c       	add	r0, r0
    14f6:	aa 0b       	sbc	r26, r26
    14f8:	bb 0b       	sbc	r27, r27
    14fa:	dc 01       	movw	r26, r24
    14fc:	99 27       	eor	r25, r25
    14fe:	88 27       	eor	r24, r24
    1500:	60 e0       	ldi	r22, 0x00	; 0
    1502:	70 e0       	ldi	r23, 0x00	; 0
    1504:	84 2b       	or	r24, r20
    1506:	95 2b       	or	r25, r21
    1508:	a6 2b       	or	r26, r22
    150a:	b7 2b       	or	r27, r23
    150c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1510:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1514:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1518:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    151c:	b0 9b       	sbis	0x16, 0	; 22
    151e:	1b c0       	rjmp	.+54     	; 0x1556 <__vector_17+0x98>
    1520:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1524:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1528:	c9 01       	movw	r24, r18
    152a:	01 96       	adiw	r24, 0x01	; 1
    152c:	09 2e       	mov	r0, r25
    152e:	00 0c       	add	r0, r0
    1530:	aa 0b       	sbc	r26, r26
    1532:	bb 0b       	sbc	r27, r27
    1534:	dc 01       	movw	r26, r24
    1536:	99 27       	eor	r25, r25
    1538:	88 27       	eor	r24, r24
    153a:	60 e0       	ldi	r22, 0x00	; 0
    153c:	70 e0       	ldi	r23, 0x00	; 0
    153e:	84 2b       	or	r24, r20
    1540:	95 2b       	or	r25, r21
    1542:	a6 2b       	or	r26, r22
    1544:	b7 2b       	or	r27, r23
    1546:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    154a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    154e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1552:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1556:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <mtable+0x18>
    155a:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <mtable+0x19>
    155e:	30 97       	sbiw	r30, 0x00	; 0
    1560:	39 f0       	breq	.+14     	; 0x1570 <__vector_17+0xb2>
    1562:	6c e0       	ldi	r22, 0x0C	; 12
    1564:	70 e0       	ldi	r23, 0x00	; 0
    1566:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <otable+0x18>
    156a:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <otable+0x19>
    156e:	09 95       	icall
    1570:	68 da       	rcall	.-2864   	; 0xa42 <schedule>
    1572:	ff 91       	pop	r31
    1574:	ef 91       	pop	r30
    1576:	bf 91       	pop	r27
    1578:	af 91       	pop	r26
    157a:	9f 91       	pop	r25
    157c:	8f 91       	pop	r24
    157e:	7f 91       	pop	r23
    1580:	6f 91       	pop	r22
    1582:	5f 91       	pop	r21
    1584:	4f 91       	pop	r20
    1586:	3f 91       	pop	r19
    1588:	2f 91       	pop	r18
    158a:	0f 90       	pop	r0
    158c:	0f be       	out	0x3f, r0	; 63
    158e:	0f 90       	pop	r0
    1590:	1f 90       	pop	r1
    1592:	18 95       	reti

00001594 <__vector_18>:
    1594:	1f 92       	push	r1
    1596:	0f 92       	push	r0
    1598:	0f b6       	in	r0, 0x3f	; 63
    159a:	0f 92       	push	r0
    159c:	11 24       	eor	r1, r1
    159e:	2f 93       	push	r18
    15a0:	3f 93       	push	r19
    15a2:	4f 93       	push	r20
    15a4:	5f 93       	push	r21
    15a6:	6f 93       	push	r22
    15a8:	7f 93       	push	r23
    15aa:	8f 93       	push	r24
    15ac:	9f 93       	push	r25
    15ae:	af 93       	push	r26
    15b0:	bf 93       	push	r27
    15b2:	ef 93       	push	r30
    15b4:	ff 93       	push	r31
    15b6:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    15ba:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    15be:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    15c2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    15c6:	c9 01       	movw	r24, r18
    15c8:	03 2e       	mov	r0, r19
    15ca:	00 0c       	add	r0, r0
    15cc:	aa 0b       	sbc	r26, r26
    15ce:	bb 0b       	sbc	r27, r27
    15d0:	dc 01       	movw	r26, r24
    15d2:	99 27       	eor	r25, r25
    15d4:	88 27       	eor	r24, r24
    15d6:	60 e0       	ldi	r22, 0x00	; 0
    15d8:	70 e0       	ldi	r23, 0x00	; 0
    15da:	84 2b       	or	r24, r20
    15dc:	95 2b       	or	r25, r21
    15de:	a6 2b       	or	r26, r22
    15e0:	b7 2b       	or	r27, r23
    15e2:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    15e6:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    15ea:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    15ee:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    15f2:	b0 9b       	sbis	0x16, 0	; 22
    15f4:	1b c0       	rjmp	.+54     	; 0x162c <__vector_18+0x98>
    15f6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    15fa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    15fe:	c9 01       	movw	r24, r18
    1600:	01 96       	adiw	r24, 0x01	; 1
    1602:	09 2e       	mov	r0, r25
    1604:	00 0c       	add	r0, r0
    1606:	aa 0b       	sbc	r26, r26
    1608:	bb 0b       	sbc	r27, r27
    160a:	dc 01       	movw	r26, r24
    160c:	99 27       	eor	r25, r25
    160e:	88 27       	eor	r24, r24
    1610:	60 e0       	ldi	r22, 0x00	; 0
    1612:	70 e0       	ldi	r23, 0x00	; 0
    1614:	84 2b       	or	r24, r20
    1616:	95 2b       	or	r25, r21
    1618:	a6 2b       	or	r26, r22
    161a:	b7 2b       	or	r27, r23
    161c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1620:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1624:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1628:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    162c:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <mtable+0x1a>
    1630:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <mtable+0x1b>
    1634:	30 97       	sbiw	r30, 0x00	; 0
    1636:	39 f0       	breq	.+14     	; 0x1646 <__vector_18+0xb2>
    1638:	6d e0       	ldi	r22, 0x0D	; 13
    163a:	70 e0       	ldi	r23, 0x00	; 0
    163c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <otable+0x1a>
    1640:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <otable+0x1b>
    1644:	09 95       	icall
    1646:	fd d9       	rcall	.-3078   	; 0xa42 <schedule>
    1648:	ff 91       	pop	r31
    164a:	ef 91       	pop	r30
    164c:	bf 91       	pop	r27
    164e:	af 91       	pop	r26
    1650:	9f 91       	pop	r25
    1652:	8f 91       	pop	r24
    1654:	7f 91       	pop	r23
    1656:	6f 91       	pop	r22
    1658:	5f 91       	pop	r21
    165a:	4f 91       	pop	r20
    165c:	3f 91       	pop	r19
    165e:	2f 91       	pop	r18
    1660:	0f 90       	pop	r0
    1662:	0f be       	out	0x3f, r0	; 63
    1664:	0f 90       	pop	r0
    1666:	1f 90       	pop	r1
    1668:	18 95       	reti

0000166a <__vector_19>:
    166a:	1f 92       	push	r1
    166c:	0f 92       	push	r0
    166e:	0f b6       	in	r0, 0x3f	; 63
    1670:	0f 92       	push	r0
    1672:	11 24       	eor	r1, r1
    1674:	2f 93       	push	r18
    1676:	3f 93       	push	r19
    1678:	4f 93       	push	r20
    167a:	5f 93       	push	r21
    167c:	6f 93       	push	r22
    167e:	7f 93       	push	r23
    1680:	8f 93       	push	r24
    1682:	9f 93       	push	r25
    1684:	af 93       	push	r26
    1686:	bf 93       	push	r27
    1688:	ef 93       	push	r30
    168a:	ff 93       	push	r31
    168c:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1690:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1694:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1698:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    169c:	c9 01       	movw	r24, r18
    169e:	03 2e       	mov	r0, r19
    16a0:	00 0c       	add	r0, r0
    16a2:	aa 0b       	sbc	r26, r26
    16a4:	bb 0b       	sbc	r27, r27
    16a6:	dc 01       	movw	r26, r24
    16a8:	99 27       	eor	r25, r25
    16aa:	88 27       	eor	r24, r24
    16ac:	60 e0       	ldi	r22, 0x00	; 0
    16ae:	70 e0       	ldi	r23, 0x00	; 0
    16b0:	84 2b       	or	r24, r20
    16b2:	95 2b       	or	r25, r21
    16b4:	a6 2b       	or	r26, r22
    16b6:	b7 2b       	or	r27, r23
    16b8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    16bc:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    16c0:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    16c4:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    16c8:	b0 9b       	sbis	0x16, 0	; 22
    16ca:	1b c0       	rjmp	.+54     	; 0x1702 <__vector_19+0x98>
    16cc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    16d0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    16d4:	c9 01       	movw	r24, r18
    16d6:	01 96       	adiw	r24, 0x01	; 1
    16d8:	09 2e       	mov	r0, r25
    16da:	00 0c       	add	r0, r0
    16dc:	aa 0b       	sbc	r26, r26
    16de:	bb 0b       	sbc	r27, r27
    16e0:	dc 01       	movw	r26, r24
    16e2:	99 27       	eor	r25, r25
    16e4:	88 27       	eor	r24, r24
    16e6:	60 e0       	ldi	r22, 0x00	; 0
    16e8:	70 e0       	ldi	r23, 0x00	; 0
    16ea:	84 2b       	or	r24, r20
    16ec:	95 2b       	or	r25, r21
    16ee:	a6 2b       	or	r26, r22
    16f0:	b7 2b       	or	r27, r23
    16f2:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    16f6:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    16fa:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    16fe:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1702:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <mtable+0x1c>
    1706:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <mtable+0x1d>
    170a:	30 97       	sbiw	r30, 0x00	; 0
    170c:	39 f0       	breq	.+14     	; 0x171c <__vector_19+0xb2>
    170e:	6e e0       	ldi	r22, 0x0E	; 14
    1710:	70 e0       	ldi	r23, 0x00	; 0
    1712:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <otable+0x1c>
    1716:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <otable+0x1d>
    171a:	09 95       	icall
    171c:	92 d9       	rcall	.-3292   	; 0xa42 <schedule>
    171e:	ff 91       	pop	r31
    1720:	ef 91       	pop	r30
    1722:	bf 91       	pop	r27
    1724:	af 91       	pop	r26
    1726:	9f 91       	pop	r25
    1728:	8f 91       	pop	r24
    172a:	7f 91       	pop	r23
    172c:	6f 91       	pop	r22
    172e:	5f 91       	pop	r21
    1730:	4f 91       	pop	r20
    1732:	3f 91       	pop	r19
    1734:	2f 91       	pop	r18
    1736:	0f 90       	pop	r0
    1738:	0f be       	out	0x3f, r0	; 63
    173a:	0f 90       	pop	r0
    173c:	1f 90       	pop	r1
    173e:	18 95       	reti

00001740 <__vector_20>:
    1740:	1f 92       	push	r1
    1742:	0f 92       	push	r0
    1744:	0f b6       	in	r0, 0x3f	; 63
    1746:	0f 92       	push	r0
    1748:	11 24       	eor	r1, r1
    174a:	2f 93       	push	r18
    174c:	3f 93       	push	r19
    174e:	4f 93       	push	r20
    1750:	5f 93       	push	r21
    1752:	6f 93       	push	r22
    1754:	7f 93       	push	r23
    1756:	8f 93       	push	r24
    1758:	9f 93       	push	r25
    175a:	af 93       	push	r26
    175c:	bf 93       	push	r27
    175e:	ef 93       	push	r30
    1760:	ff 93       	push	r31
    1762:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1766:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    176a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    176e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1772:	c9 01       	movw	r24, r18
    1774:	03 2e       	mov	r0, r19
    1776:	00 0c       	add	r0, r0
    1778:	aa 0b       	sbc	r26, r26
    177a:	bb 0b       	sbc	r27, r27
    177c:	dc 01       	movw	r26, r24
    177e:	99 27       	eor	r25, r25
    1780:	88 27       	eor	r24, r24
    1782:	60 e0       	ldi	r22, 0x00	; 0
    1784:	70 e0       	ldi	r23, 0x00	; 0
    1786:	84 2b       	or	r24, r20
    1788:	95 2b       	or	r25, r21
    178a:	a6 2b       	or	r26, r22
    178c:	b7 2b       	or	r27, r23
    178e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1792:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1796:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    179a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    179e:	b0 9b       	sbis	0x16, 0	; 22
    17a0:	1b c0       	rjmp	.+54     	; 0x17d8 <__vector_20+0x98>
    17a2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    17a6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    17aa:	c9 01       	movw	r24, r18
    17ac:	01 96       	adiw	r24, 0x01	; 1
    17ae:	09 2e       	mov	r0, r25
    17b0:	00 0c       	add	r0, r0
    17b2:	aa 0b       	sbc	r26, r26
    17b4:	bb 0b       	sbc	r27, r27
    17b6:	dc 01       	movw	r26, r24
    17b8:	99 27       	eor	r25, r25
    17ba:	88 27       	eor	r24, r24
    17bc:	60 e0       	ldi	r22, 0x00	; 0
    17be:	70 e0       	ldi	r23, 0x00	; 0
    17c0:	84 2b       	or	r24, r20
    17c2:	95 2b       	or	r25, r21
    17c4:	a6 2b       	or	r26, r22
    17c6:	b7 2b       	or	r27, r23
    17c8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    17cc:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    17d0:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    17d4:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    17d8:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <mtable+0x1e>
    17dc:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <mtable+0x1f>
    17e0:	30 97       	sbiw	r30, 0x00	; 0
    17e2:	39 f0       	breq	.+14     	; 0x17f2 <__vector_20+0xb2>
    17e4:	6f e0       	ldi	r22, 0x0F	; 15
    17e6:	70 e0       	ldi	r23, 0x00	; 0
    17e8:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <otable+0x1e>
    17ec:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <otable+0x1f>
    17f0:	09 95       	icall
    17f2:	27 d9       	rcall	.-3506   	; 0xa42 <schedule>
    17f4:	ff 91       	pop	r31
    17f6:	ef 91       	pop	r30
    17f8:	bf 91       	pop	r27
    17fa:	af 91       	pop	r26
    17fc:	9f 91       	pop	r25
    17fe:	8f 91       	pop	r24
    1800:	7f 91       	pop	r23
    1802:	6f 91       	pop	r22
    1804:	5f 91       	pop	r21
    1806:	4f 91       	pop	r20
    1808:	3f 91       	pop	r19
    180a:	2f 91       	pop	r18
    180c:	0f 90       	pop	r0
    180e:	0f be       	out	0x3f, r0	; 63
    1810:	0f 90       	pop	r0
    1812:	1f 90       	pop	r1
    1814:	18 95       	reti

00001816 <__vector_21>:
    1816:	1f 92       	push	r1
    1818:	0f 92       	push	r0
    181a:	0f b6       	in	r0, 0x3f	; 63
    181c:	0f 92       	push	r0
    181e:	11 24       	eor	r1, r1
    1820:	2f 93       	push	r18
    1822:	3f 93       	push	r19
    1824:	4f 93       	push	r20
    1826:	5f 93       	push	r21
    1828:	6f 93       	push	r22
    182a:	7f 93       	push	r23
    182c:	8f 93       	push	r24
    182e:	9f 93       	push	r25
    1830:	af 93       	push	r26
    1832:	bf 93       	push	r27
    1834:	ef 93       	push	r30
    1836:	ff 93       	push	r31
    1838:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    183c:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1840:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1844:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1848:	c9 01       	movw	r24, r18
    184a:	03 2e       	mov	r0, r19
    184c:	00 0c       	add	r0, r0
    184e:	aa 0b       	sbc	r26, r26
    1850:	bb 0b       	sbc	r27, r27
    1852:	dc 01       	movw	r26, r24
    1854:	99 27       	eor	r25, r25
    1856:	88 27       	eor	r24, r24
    1858:	60 e0       	ldi	r22, 0x00	; 0
    185a:	70 e0       	ldi	r23, 0x00	; 0
    185c:	84 2b       	or	r24, r20
    185e:	95 2b       	or	r25, r21
    1860:	a6 2b       	or	r26, r22
    1862:	b7 2b       	or	r27, r23
    1864:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1868:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    186c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1870:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1874:	b0 9b       	sbis	0x16, 0	; 22
    1876:	1b c0       	rjmp	.+54     	; 0x18ae <__vector_21+0x98>
    1878:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    187c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1880:	c9 01       	movw	r24, r18
    1882:	01 96       	adiw	r24, 0x01	; 1
    1884:	09 2e       	mov	r0, r25
    1886:	00 0c       	add	r0, r0
    1888:	aa 0b       	sbc	r26, r26
    188a:	bb 0b       	sbc	r27, r27
    188c:	dc 01       	movw	r26, r24
    188e:	99 27       	eor	r25, r25
    1890:	88 27       	eor	r24, r24
    1892:	60 e0       	ldi	r22, 0x00	; 0
    1894:	70 e0       	ldi	r23, 0x00	; 0
    1896:	84 2b       	or	r24, r20
    1898:	95 2b       	or	r25, r21
    189a:	a6 2b       	or	r26, r22
    189c:	b7 2b       	or	r27, r23
    189e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    18a2:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    18a6:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    18aa:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    18ae:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <mtable+0x20>
    18b2:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <mtable+0x21>
    18b6:	30 97       	sbiw	r30, 0x00	; 0
    18b8:	39 f0       	breq	.+14     	; 0x18c8 <__vector_21+0xb2>
    18ba:	60 e1       	ldi	r22, 0x10	; 16
    18bc:	70 e0       	ldi	r23, 0x00	; 0
    18be:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <otable+0x20>
    18c2:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <otable+0x21>
    18c6:	09 95       	icall
    18c8:	bc d8       	rcall	.-3720   	; 0xa42 <schedule>
    18ca:	ff 91       	pop	r31
    18cc:	ef 91       	pop	r30
    18ce:	bf 91       	pop	r27
    18d0:	af 91       	pop	r26
    18d2:	9f 91       	pop	r25
    18d4:	8f 91       	pop	r24
    18d6:	7f 91       	pop	r23
    18d8:	6f 91       	pop	r22
    18da:	5f 91       	pop	r21
    18dc:	4f 91       	pop	r20
    18de:	3f 91       	pop	r19
    18e0:	2f 91       	pop	r18
    18e2:	0f 90       	pop	r0
    18e4:	0f be       	out	0x3f, r0	; 63
    18e6:	0f 90       	pop	r0
    18e8:	1f 90       	pop	r1
    18ea:	18 95       	reti

000018ec <__vector_22>:
    18ec:	1f 92       	push	r1
    18ee:	0f 92       	push	r0
    18f0:	0f b6       	in	r0, 0x3f	; 63
    18f2:	0f 92       	push	r0
    18f4:	11 24       	eor	r1, r1
    18f6:	2f 93       	push	r18
    18f8:	3f 93       	push	r19
    18fa:	4f 93       	push	r20
    18fc:	5f 93       	push	r21
    18fe:	6f 93       	push	r22
    1900:	7f 93       	push	r23
    1902:	8f 93       	push	r24
    1904:	9f 93       	push	r25
    1906:	af 93       	push	r26
    1908:	bf 93       	push	r27
    190a:	ef 93       	push	r30
    190c:	ff 93       	push	r31
    190e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1912:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1916:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    191a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    191e:	c9 01       	movw	r24, r18
    1920:	03 2e       	mov	r0, r19
    1922:	00 0c       	add	r0, r0
    1924:	aa 0b       	sbc	r26, r26
    1926:	bb 0b       	sbc	r27, r27
    1928:	dc 01       	movw	r26, r24
    192a:	99 27       	eor	r25, r25
    192c:	88 27       	eor	r24, r24
    192e:	60 e0       	ldi	r22, 0x00	; 0
    1930:	70 e0       	ldi	r23, 0x00	; 0
    1932:	84 2b       	or	r24, r20
    1934:	95 2b       	or	r25, r21
    1936:	a6 2b       	or	r26, r22
    1938:	b7 2b       	or	r27, r23
    193a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    193e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1942:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1946:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    194a:	b0 9b       	sbis	0x16, 0	; 22
    194c:	1b c0       	rjmp	.+54     	; 0x1984 <__vector_22+0x98>
    194e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1952:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1956:	c9 01       	movw	r24, r18
    1958:	01 96       	adiw	r24, 0x01	; 1
    195a:	09 2e       	mov	r0, r25
    195c:	00 0c       	add	r0, r0
    195e:	aa 0b       	sbc	r26, r26
    1960:	bb 0b       	sbc	r27, r27
    1962:	dc 01       	movw	r26, r24
    1964:	99 27       	eor	r25, r25
    1966:	88 27       	eor	r24, r24
    1968:	60 e0       	ldi	r22, 0x00	; 0
    196a:	70 e0       	ldi	r23, 0x00	; 0
    196c:	84 2b       	or	r24, r20
    196e:	95 2b       	or	r25, r21
    1970:	a6 2b       	or	r26, r22
    1972:	b7 2b       	or	r27, r23
    1974:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1978:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    197c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1980:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1984:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <mtable+0x22>
    1988:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <mtable+0x23>
    198c:	30 97       	sbiw	r30, 0x00	; 0
    198e:	39 f0       	breq	.+14     	; 0x199e <__vector_22+0xb2>
    1990:	61 e1       	ldi	r22, 0x11	; 17
    1992:	70 e0       	ldi	r23, 0x00	; 0
    1994:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <otable+0x22>
    1998:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <otable+0x23>
    199c:	09 95       	icall
    199e:	51 d8       	rcall	.-3934   	; 0xa42 <schedule>
    19a0:	ff 91       	pop	r31
    19a2:	ef 91       	pop	r30
    19a4:	bf 91       	pop	r27
    19a6:	af 91       	pop	r26
    19a8:	9f 91       	pop	r25
    19aa:	8f 91       	pop	r24
    19ac:	7f 91       	pop	r23
    19ae:	6f 91       	pop	r22
    19b0:	5f 91       	pop	r21
    19b2:	4f 91       	pop	r20
    19b4:	3f 91       	pop	r19
    19b6:	2f 91       	pop	r18
    19b8:	0f 90       	pop	r0
    19ba:	0f be       	out	0x3f, r0	; 63
    19bc:	0f 90       	pop	r0
    19be:	1f 90       	pop	r1
    19c0:	18 95       	reti

000019c2 <enqueueByDeadline>:
    19c2:	ef 92       	push	r14
    19c4:	ff 92       	push	r15
    19c6:	0f 93       	push	r16
    19c8:	1f 93       	push	r17
    19ca:	cf 93       	push	r28
    19cc:	df 93       	push	r29
    19ce:	7b 01       	movw	r14, r22
    19d0:	eb 01       	movw	r28, r22
    19d2:	a8 81       	ld	r26, Y
    19d4:	b9 81       	ldd	r27, Y+1	; 0x01
    19d6:	10 97       	sbiw	r26, 0x00	; 0
    19d8:	61 f1       	breq	.+88     	; 0x1a32 <enqueueByDeadline+0x70>
    19da:	fc 01       	movw	r30, r24
    19dc:	06 81       	ldd	r16, Z+6	; 0x06
    19de:	17 81       	ldd	r17, Z+7	; 0x07
    19e0:	20 85       	ldd	r18, Z+8	; 0x08
    19e2:	31 85       	ldd	r19, Z+9	; 0x09
    19e4:	16 96       	adiw	r26, 0x06	; 6
    19e6:	4d 91       	ld	r20, X+
    19e8:	5d 91       	ld	r21, X+
    19ea:	6d 91       	ld	r22, X+
    19ec:	7c 91       	ld	r23, X
    19ee:	19 97       	sbiw	r26, 0x09	; 9
    19f0:	04 17       	cp	r16, r20
    19f2:	15 07       	cpc	r17, r21
    19f4:	26 07       	cpc	r18, r22
    19f6:	37 07       	cpc	r19, r23
    19f8:	14 f4       	brge	.+4      	; 0x19fe <enqueueByDeadline+0x3c>
    19fa:	1b c0       	rjmp	.+54     	; 0x1a32 <enqueueByDeadline+0x70>
    19fc:	df 01       	movw	r26, r30
    19fe:	ed 91       	ld	r30, X+
    1a00:	fc 91       	ld	r31, X
    1a02:	11 97       	sbiw	r26, 0x01	; 1
    1a04:	30 97       	sbiw	r30, 0x00	; 0
    1a06:	49 f0       	breq	.+18     	; 0x1a1a <enqueueByDeadline+0x58>
    1a08:	46 81       	ldd	r20, Z+6	; 0x06
    1a0a:	57 81       	ldd	r21, Z+7	; 0x07
    1a0c:	60 85       	ldd	r22, Z+8	; 0x08
    1a0e:	71 85       	ldd	r23, Z+9	; 0x09
    1a10:	04 17       	cp	r16, r20
    1a12:	15 07       	cpc	r17, r21
    1a14:	26 07       	cpc	r18, r22
    1a16:	37 07       	cpc	r19, r23
    1a18:	8c f7       	brge	.-30     	; 0x19fc <enqueueByDeadline+0x3a>
    1a1a:	ec 01       	movw	r28, r24
    1a1c:	f9 83       	std	Y+1, r31	; 0x01
    1a1e:	e8 83       	st	Y, r30
    1a20:	10 97       	sbiw	r26, 0x00	; 0
    1a22:	21 f4       	brne	.+8      	; 0x1a2c <enqueueByDeadline+0x6a>
    1a24:	f7 01       	movw	r30, r14
    1a26:	91 83       	std	Z+1, r25	; 0x01
    1a28:	80 83       	st	Z, r24
    1a2a:	07 c0       	rjmp	.+14     	; 0x1a3a <enqueueByDeadline+0x78>
    1a2c:	8d 93       	st	X+, r24
    1a2e:	9c 93       	st	X, r25
    1a30:	04 c0       	rjmp	.+8      	; 0x1a3a <enqueueByDeadline+0x78>
    1a32:	ec 01       	movw	r28, r24
    1a34:	b9 83       	std	Y+1, r27	; 0x01
    1a36:	a8 83       	st	Y, r26
    1a38:	f5 cf       	rjmp	.-22     	; 0x1a24 <enqueueByDeadline+0x62>
    1a3a:	df 91       	pop	r29
    1a3c:	cf 91       	pop	r28
    1a3e:	1f 91       	pop	r17
    1a40:	0f 91       	pop	r16
    1a42:	ff 90       	pop	r15
    1a44:	ef 90       	pop	r14
    1a46:	08 95       	ret

00001a48 <enqueueByBaseline>:
    1a48:	ef 92       	push	r14
    1a4a:	ff 92       	push	r15
    1a4c:	0f 93       	push	r16
    1a4e:	1f 93       	push	r17
    1a50:	cf 93       	push	r28
    1a52:	df 93       	push	r29
    1a54:	7b 01       	movw	r14, r22
    1a56:	eb 01       	movw	r28, r22
    1a58:	a8 81       	ld	r26, Y
    1a5a:	b9 81       	ldd	r27, Y+1	; 0x01
    1a5c:	10 97       	sbiw	r26, 0x00	; 0
    1a5e:	61 f1       	breq	.+88     	; 0x1ab8 <enqueueByBaseline+0x70>
    1a60:	fc 01       	movw	r30, r24
    1a62:	02 81       	ldd	r16, Z+2	; 0x02
    1a64:	13 81       	ldd	r17, Z+3	; 0x03
    1a66:	24 81       	ldd	r18, Z+4	; 0x04
    1a68:	35 81       	ldd	r19, Z+5	; 0x05
    1a6a:	12 96       	adiw	r26, 0x02	; 2
    1a6c:	4d 91       	ld	r20, X+
    1a6e:	5d 91       	ld	r21, X+
    1a70:	6d 91       	ld	r22, X+
    1a72:	7c 91       	ld	r23, X
    1a74:	15 97       	sbiw	r26, 0x05	; 5
    1a76:	04 17       	cp	r16, r20
    1a78:	15 07       	cpc	r17, r21
    1a7a:	26 07       	cpc	r18, r22
    1a7c:	37 07       	cpc	r19, r23
    1a7e:	14 f4       	brge	.+4      	; 0x1a84 <enqueueByBaseline+0x3c>
    1a80:	1b c0       	rjmp	.+54     	; 0x1ab8 <enqueueByBaseline+0x70>
    1a82:	df 01       	movw	r26, r30
    1a84:	ed 91       	ld	r30, X+
    1a86:	fc 91       	ld	r31, X
    1a88:	11 97       	sbiw	r26, 0x01	; 1
    1a8a:	30 97       	sbiw	r30, 0x00	; 0
    1a8c:	49 f0       	breq	.+18     	; 0x1aa0 <enqueueByBaseline+0x58>
    1a8e:	42 81       	ldd	r20, Z+2	; 0x02
    1a90:	53 81       	ldd	r21, Z+3	; 0x03
    1a92:	64 81       	ldd	r22, Z+4	; 0x04
    1a94:	75 81       	ldd	r23, Z+5	; 0x05
    1a96:	04 17       	cp	r16, r20
    1a98:	15 07       	cpc	r17, r21
    1a9a:	26 07       	cpc	r18, r22
    1a9c:	37 07       	cpc	r19, r23
    1a9e:	8c f7       	brge	.-30     	; 0x1a82 <enqueueByBaseline+0x3a>
    1aa0:	ec 01       	movw	r28, r24
    1aa2:	f9 83       	std	Y+1, r31	; 0x01
    1aa4:	e8 83       	st	Y, r30
    1aa6:	10 97       	sbiw	r26, 0x00	; 0
    1aa8:	21 f4       	brne	.+8      	; 0x1ab2 <enqueueByBaseline+0x6a>
    1aaa:	f7 01       	movw	r30, r14
    1aac:	91 83       	std	Z+1, r25	; 0x01
    1aae:	80 83       	st	Z, r24
    1ab0:	07 c0       	rjmp	.+14     	; 0x1ac0 <enqueueByBaseline+0x78>
    1ab2:	8d 93       	st	X+, r24
    1ab4:	9c 93       	st	X, r25
    1ab6:	04 c0       	rjmp	.+8      	; 0x1ac0 <enqueueByBaseline+0x78>
    1ab8:	ec 01       	movw	r28, r24
    1aba:	b9 83       	std	Y+1, r27	; 0x01
    1abc:	a8 83       	st	Y, r26
    1abe:	f5 cf       	rjmp	.-22     	; 0x1aaa <enqueueByBaseline+0x62>
    1ac0:	df 91       	pop	r29
    1ac2:	cf 91       	pop	r28
    1ac4:	1f 91       	pop	r17
    1ac6:	0f 91       	pop	r16
    1ac8:	ff 90       	pop	r15
    1aca:	ef 90       	pop	r14
    1acc:	08 95       	ret

00001ace <dequeue>:
    1ace:	dc 01       	movw	r26, r24
    1ad0:	ed 91       	ld	r30, X+
    1ad2:	fc 91       	ld	r31, X
    1ad4:	11 97       	sbiw	r26, 0x01	; 1
    1ad6:	30 97       	sbiw	r30, 0x00	; 0
    1ad8:	59 f4       	brne	.+22     	; 0x1af0 <dequeue+0x22>
    1ada:	8f ef       	ldi	r24, 0xFF	; 255
    1adc:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    1ae0:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    1ae4:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    1ae8:	81 e0       	ldi	r24, 0x01	; 1
    1aea:	83 bf       	out	0x33, r24	; 51
    1aec:	88 95       	sleep
    1aee:	fd cf       	rjmp	.-6      	; 0x1aea <dequeue+0x1c>
    1af0:	20 81       	ld	r18, Z
    1af2:	31 81       	ldd	r19, Z+1	; 0x01
    1af4:	2d 93       	st	X+, r18
    1af6:	3c 93       	st	X, r19
    1af8:	cf 01       	movw	r24, r30
    1afa:	08 95       	ret

00001afc <__vector_9>:
    1afc:	1f 92       	push	r1
    1afe:	0f 92       	push	r0
    1b00:	0f b6       	in	r0, 0x3f	; 63
    1b02:	0f 92       	push	r0
    1b04:	11 24       	eor	r1, r1
    1b06:	2f 93       	push	r18
    1b08:	3f 93       	push	r19
    1b0a:	4f 93       	push	r20
    1b0c:	5f 93       	push	r21
    1b0e:	6f 93       	push	r22
    1b10:	7f 93       	push	r23
    1b12:	8f 93       	push	r24
    1b14:	9f 93       	push	r25
    1b16:	ef 93       	push	r30
    1b18:	ff 93       	push	r31
    1b1a:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
    1b1e:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
    1b22:	01 96       	adiw	r24, 0x01	; 1
    1b24:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <__data_end+0x1>
    1b28:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__data_end>
    1b2c:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1b30:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1b34:	30 97       	sbiw	r30, 0x00	; 0
    1b36:	01 f1       	breq	.+64     	; 0x1b78 <__vector_9+0x7c>
    1b38:	42 81       	ldd	r20, Z+2	; 0x02
    1b3a:	53 81       	ldd	r21, Z+3	; 0x03
    1b3c:	64 81       	ldd	r22, Z+4	; 0x04
    1b3e:	75 81       	ldd	r23, Z+5	; 0x05
    1b40:	86 17       	cp	r24, r22
    1b42:	97 07       	cpc	r25, r23
    1b44:	c9 f4       	brne	.+50     	; 0x1b78 <__vector_9+0x7c>
    1b46:	ca 01       	movw	r24, r20
    1b48:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1b4c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1b50:	42 1b       	sub	r20, r18
    1b52:	53 0b       	sbc	r21, r19
    1b54:	41 30       	cpi	r20, 0x01	; 1
    1b56:	51 05       	cpc	r21, r1
    1b58:	29 f4       	brne	.+10     	; 0x1b64 <__vector_9+0x68>
    1b5a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1b5e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1b62:	01 96       	adiw	r24, 0x01	; 1
    1b64:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1b68:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1b6c:	ef e6       	ldi	r30, 0x6F	; 111
    1b6e:	f0 e0       	ldi	r31, 0x00	; 0
    1b70:	80 81       	ld	r24, Z
    1b72:	82 60       	ori	r24, 0x02	; 2
    1b74:	80 83       	st	Z, r24
    1b76:	05 c0       	rjmp	.+10     	; 0x1b82 <__vector_9+0x86>
    1b78:	ef e6       	ldi	r30, 0x6F	; 111
    1b7a:	f0 e0       	ldi	r31, 0x00	; 0
    1b7c:	80 81       	ld	r24, Z
    1b7e:	8d 7f       	andi	r24, 0xFD	; 253
    1b80:	80 83       	st	Z, r24
    1b82:	ff 91       	pop	r31
    1b84:	ef 91       	pop	r30
    1b86:	9f 91       	pop	r25
    1b88:	8f 91       	pop	r24
    1b8a:	7f 91       	pop	r23
    1b8c:	6f 91       	pop	r22
    1b8e:	5f 91       	pop	r21
    1b90:	4f 91       	pop	r20
    1b92:	3f 91       	pop	r19
    1b94:	2f 91       	pop	r18
    1b96:	0f 90       	pop	r0
    1b98:	0f be       	out	0x3f, r0	; 63
    1b9a:	0f 90       	pop	r0
    1b9c:	1f 90       	pop	r1
    1b9e:	18 95       	reti

00001ba0 <__vector_7>:
    1ba0:	1f 92       	push	r1
    1ba2:	0f 92       	push	r0
    1ba4:	0f b6       	in	r0, 0x3f	; 63
    1ba6:	0f 92       	push	r0
    1ba8:	11 24       	eor	r1, r1
    1baa:	cf 92       	push	r12
    1bac:	df 92       	push	r13
    1bae:	ef 92       	push	r14
    1bb0:	ff 92       	push	r15
    1bb2:	2f 93       	push	r18
    1bb4:	3f 93       	push	r19
    1bb6:	4f 93       	push	r20
    1bb8:	5f 93       	push	r21
    1bba:	6f 93       	push	r22
    1bbc:	7f 93       	push	r23
    1bbe:	8f 93       	push	r24
    1bc0:	9f 93       	push	r25
    1bc2:	af 93       	push	r26
    1bc4:	bf 93       	push	r27
    1bc6:	ef 93       	push	r30
    1bc8:	ff 93       	push	r31
    1bca:	c0 90 50 01 	lds	r12, 0x0150	; 0x800150 <__data_end>
    1bce:	d0 90 51 01 	lds	r13, 0x0151	; 0x800151 <__data_end+0x1>
    1bd2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1bd6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1bda:	b0 99       	sbic	0x16, 0	; 22
    1bdc:	0f c0       	rjmp	.+30     	; 0x1bfc <__vector_7+0x5c>
    1bde:	0d 2c       	mov	r0, r13
    1be0:	00 0c       	add	r0, r0
    1be2:	ee 08       	sbc	r14, r14
    1be4:	ff 08       	sbc	r15, r15
    1be6:	d6 01       	movw	r26, r12
    1be8:	99 27       	eor	r25, r25
    1bea:	88 27       	eor	r24, r24
    1bec:	69 01       	movw	r12, r18
    1bee:	e1 2c       	mov	r14, r1
    1bf0:	f1 2c       	mov	r15, r1
    1bf2:	c8 2a       	or	r12, r24
    1bf4:	d9 2a       	or	r13, r25
    1bf6:	ea 2a       	or	r14, r26
    1bf8:	fb 2a       	or	r15, r27
    1bfa:	15 c0       	rjmp	.+42     	; 0x1c26 <__vector_7+0x86>
    1bfc:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c00:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c04:	8f ef       	ldi	r24, 0xFF	; 255
    1c06:	c8 1a       	sub	r12, r24
    1c08:	d8 0a       	sbc	r13, r24
    1c0a:	0d 2c       	mov	r0, r13
    1c0c:	00 0c       	add	r0, r0
    1c0e:	ee 08       	sbc	r14, r14
    1c10:	ff 08       	sbc	r15, r15
    1c12:	d6 01       	movw	r26, r12
    1c14:	99 27       	eor	r25, r25
    1c16:	88 27       	eor	r24, r24
    1c18:	69 01       	movw	r12, r18
    1c1a:	e1 2c       	mov	r14, r1
    1c1c:	f1 2c       	mov	r15, r1
    1c1e:	c8 2a       	or	r12, r24
    1c20:	d9 2a       	or	r13, r25
    1c22:	ea 2a       	or	r14, r26
    1c24:	fb 2a       	or	r15, r27
    1c26:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1c2a:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1c2e:	30 97       	sbiw	r30, 0x00	; 0
    1c30:	09 f4       	brne	.+2      	; 0x1c34 <__vector_7+0x94>
    1c32:	40 c0       	rjmp	.+128    	; 0x1cb4 <__vector_7+0x114>
    1c34:	82 81       	ldd	r24, Z+2	; 0x02
    1c36:	93 81       	ldd	r25, Z+3	; 0x03
    1c38:	a4 81       	ldd	r26, Z+4	; 0x04
    1c3a:	b5 81       	ldd	r27, Z+5	; 0x05
    1c3c:	8c 19       	sub	r24, r12
    1c3e:	9d 09       	sbc	r25, r13
    1c40:	ae 09       	sbc	r26, r14
    1c42:	bf 09       	sbc	r27, r15
    1c44:	18 16       	cp	r1, r24
    1c46:	19 06       	cpc	r1, r25
    1c48:	1a 06       	cpc	r1, r26
    1c4a:	1b 06       	cpc	r1, r27
    1c4c:	dc f1       	brlt	.+118    	; 0x1cc4 <__vector_7+0x124>
    1c4e:	86 e5       	ldi	r24, 0x56	; 86
    1c50:	91 e0       	ldi	r25, 0x01	; 1
    1c52:	3d df       	rcall	.-390    	; 0x1ace <dequeue>
    1c54:	68 e5       	ldi	r22, 0x58	; 88
    1c56:	71 e0       	ldi	r23, 0x01	; 1
    1c58:	b4 de       	rcall	.-664    	; 0x19c2 <enqueueByDeadline>
    1c5a:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1c5e:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1c62:	30 97       	sbiw	r30, 0x00	; 0
    1c64:	39 f1       	breq	.+78     	; 0x1cb4 <__vector_7+0x114>
    1c66:	82 81       	ldd	r24, Z+2	; 0x02
    1c68:	93 81       	ldd	r25, Z+3	; 0x03
    1c6a:	a4 81       	ldd	r26, Z+4	; 0x04
    1c6c:	b5 81       	ldd	r27, Z+5	; 0x05
    1c6e:	8c 19       	sub	r24, r12
    1c70:	9d 09       	sbc	r25, r13
    1c72:	ae 09       	sbc	r26, r14
    1c74:	bf 09       	sbc	r27, r15
    1c76:	18 16       	cp	r1, r24
    1c78:	19 06       	cpc	r1, r25
    1c7a:	1a 06       	cpc	r1, r26
    1c7c:	1b 06       	cpc	r1, r27
    1c7e:	3c f7       	brge	.-50     	; 0x1c4e <__vector_7+0xae>
    1c80:	21 c0       	rjmp	.+66     	; 0x1cc4 <__vector_7+0x124>
    1c82:	9c 01       	movw	r18, r24
    1c84:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c88:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c8c:	84 1b       	sub	r24, r20
    1c8e:	95 0b       	sbc	r25, r21
    1c90:	01 97       	sbiw	r24, 0x01	; 1
    1c92:	31 f4       	brne	.+12     	; 0x1ca0 <__vector_7+0x100>
    1c94:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c98:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c9c:	2f 5f       	subi	r18, 0xFF	; 255
    1c9e:	3f 4f       	sbci	r19, 0xFF	; 255
    1ca0:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1ca4:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1ca8:	ef e6       	ldi	r30, 0x6F	; 111
    1caa:	f0 e0       	ldi	r31, 0x00	; 0
    1cac:	80 81       	ld	r24, Z
    1cae:	82 60       	ori	r24, 0x02	; 2
    1cb0:	80 83       	st	Z, r24
    1cb2:	05 c0       	rjmp	.+10     	; 0x1cbe <__vector_7+0x11e>
    1cb4:	ef e6       	ldi	r30, 0x6F	; 111
    1cb6:	f0 e0       	ldi	r31, 0x00	; 0
    1cb8:	80 81       	ld	r24, Z
    1cba:	8d 7f       	andi	r24, 0xFD	; 253
    1cbc:	80 83       	st	Z, r24
    1cbe:	0e 94 21 05 	call	0xa42	; 0xa42 <schedule>
    1cc2:	0c c0       	rjmp	.+24     	; 0x1cdc <__vector_7+0x13c>
    1cc4:	82 81       	ldd	r24, Z+2	; 0x02
    1cc6:	93 81       	ldd	r25, Z+3	; 0x03
    1cc8:	a4 81       	ldd	r26, Z+4	; 0x04
    1cca:	b5 81       	ldd	r27, Z+5	; 0x05
    1ccc:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1cd0:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1cd4:	2a 17       	cp	r18, r26
    1cd6:	3b 07       	cpc	r19, r27
    1cd8:	69 f7       	brne	.-38     	; 0x1cb4 <__vector_7+0x114>
    1cda:	d3 cf       	rjmp	.-90     	; 0x1c82 <__vector_7+0xe2>
    1cdc:	ff 91       	pop	r31
    1cde:	ef 91       	pop	r30
    1ce0:	bf 91       	pop	r27
    1ce2:	af 91       	pop	r26
    1ce4:	9f 91       	pop	r25
    1ce6:	8f 91       	pop	r24
    1ce8:	7f 91       	pop	r23
    1cea:	6f 91       	pop	r22
    1cec:	5f 91       	pop	r21
    1cee:	4f 91       	pop	r20
    1cf0:	3f 91       	pop	r19
    1cf2:	2f 91       	pop	r18
    1cf4:	ff 90       	pop	r15
    1cf6:	ef 90       	pop	r14
    1cf8:	df 90       	pop	r13
    1cfa:	cf 90       	pop	r12
    1cfc:	0f 90       	pop	r0
    1cfe:	0f be       	out	0x3f, r0	; 63
    1d00:	0f 90       	pop	r0
    1d02:	1f 90       	pop	r1
    1d04:	18 95       	reti

00001d06 <async>:
    1d06:	3f 92       	push	r3
    1d08:	4f 92       	push	r4
    1d0a:	5f 92       	push	r5
    1d0c:	6f 92       	push	r6
    1d0e:	7f 92       	push	r7
    1d10:	8f 92       	push	r8
    1d12:	9f 92       	push	r9
    1d14:	af 92       	push	r10
    1d16:	bf 92       	push	r11
    1d18:	cf 92       	push	r12
    1d1a:	df 92       	push	r13
    1d1c:	ef 92       	push	r14
    1d1e:	ff 92       	push	r15
    1d20:	0f 93       	push	r16
    1d22:	1f 93       	push	r17
    1d24:	cf 93       	push	r28
    1d26:	df 93       	push	r29
    1d28:	2b 01       	movw	r4, r22
    1d2a:	3c 01       	movw	r6, r24
    1d2c:	49 01       	movw	r8, r18
    1d2e:	5a 01       	movw	r10, r20
    1d30:	8f b7       	in	r24, 0x3f	; 63
    1d32:	80 78       	andi	r24, 0x80	; 128
    1d34:	38 2e       	mov	r3, r24
    1d36:	f8 94       	cli
    1d38:	8a e3       	ldi	r24, 0x3A	; 58
    1d3a:	91 e0       	ldi	r25, 0x01	; 1
    1d3c:	c8 de       	rcall	.-624    	; 0x1ace <dequeue>
    1d3e:	ec 01       	movw	r28, r24
    1d40:	1b 87       	std	Y+11, r17	; 0x0b
    1d42:	0a 87       	std	Y+10, r16	; 0x0a
    1d44:	fd 86       	std	Y+13, r15	; 0x0d
    1d46:	ec 86       	std	Y+12, r14	; 0x0c
    1d48:	df 86       	std	Y+15, r13	; 0x0f
    1d4a:	ce 86       	std	Y+14, r12	; 0x0e
    1d4c:	33 20       	and	r3, r3
    1d4e:	61 f0       	breq	.+24     	; 0x1d68 <async+0x62>
    1d50:	e0 91 34 01 	lds	r30, 0x0134	; 0x800134 <current>
    1d54:	f0 91 35 01 	lds	r31, 0x0135	; 0x800135 <current+0x1>
    1d58:	02 80       	ldd	r0, Z+2	; 0x02
    1d5a:	f3 81       	ldd	r31, Z+3	; 0x03
    1d5c:	e0 2d       	mov	r30, r0
    1d5e:	82 81       	ldd	r24, Z+2	; 0x02
    1d60:	93 81       	ldd	r25, Z+3	; 0x03
    1d62:	a4 81       	ldd	r26, Z+4	; 0x04
    1d64:	b5 81       	ldd	r27, Z+5	; 0x05
    1d66:	08 c0       	rjmp	.+16     	; 0x1d78 <async+0x72>
    1d68:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <timestamp>
    1d6c:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <timestamp+0x1>
    1d70:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <timestamp+0x2>
    1d74:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <timestamp+0x3>
    1d78:	48 0e       	add	r4, r24
    1d7a:	59 1e       	adc	r5, r25
    1d7c:	6a 1e       	adc	r6, r26
    1d7e:	7b 1e       	adc	r7, r27
    1d80:	4a 82       	std	Y+2, r4	; 0x02
    1d82:	5b 82       	std	Y+3, r5	; 0x03
    1d84:	6c 82       	std	Y+4, r6	; 0x04
    1d86:	7d 82       	std	Y+5, r7	; 0x05
    1d88:	18 14       	cp	r1, r8
    1d8a:	19 04       	cpc	r1, r9
    1d8c:	1a 04       	cpc	r1, r10
    1d8e:	1b 04       	cpc	r1, r11
    1d90:	44 f0       	brlt	.+16     	; 0x1da2 <async+0x9c>
    1d92:	0f 2e       	mov	r0, r31
    1d94:	88 24       	eor	r8, r8
    1d96:	8a 94       	dec	r8
    1d98:	98 2c       	mov	r9, r8
    1d9a:	a8 2c       	mov	r10, r8
    1d9c:	ff e7       	ldi	r31, 0x7F	; 127
    1d9e:	bf 2e       	mov	r11, r31
    1da0:	f0 2d       	mov	r31, r0
    1da2:	84 0c       	add	r8, r4
    1da4:	95 1c       	adc	r9, r5
    1da6:	a6 1c       	adc	r10, r6
    1da8:	b7 1c       	adc	r11, r7
    1daa:	8e 82       	std	Y+6, r8	; 0x06
    1dac:	9f 82       	std	Y+7, r9	; 0x07
    1dae:	a8 86       	std	Y+8, r10	; 0x08
    1db0:	b9 86       	std	Y+9, r11	; 0x09
    1db2:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
    1db6:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
    1dba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1dbe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1dc2:	b0 99       	sbic	0x16, 0	; 22
    1dc4:	0e c0       	rjmp	.+28     	; 0x1de2 <async+0xdc>
    1dc6:	09 2e       	mov	r0, r25
    1dc8:	00 0c       	add	r0, r0
    1dca:	aa 0b       	sbc	r26, r26
    1dcc:	bb 0b       	sbc	r27, r27
    1dce:	dc 01       	movw	r26, r24
    1dd0:	99 27       	eor	r25, r25
    1dd2:	88 27       	eor	r24, r24
    1dd4:	60 e0       	ldi	r22, 0x00	; 0
    1dd6:	70 e0       	ldi	r23, 0x00	; 0
    1dd8:	84 2b       	or	r24, r20
    1dda:	95 2b       	or	r25, r21
    1ddc:	a6 2b       	or	r26, r22
    1dde:	b7 2b       	or	r27, r23
    1de0:	13 c0       	rjmp	.+38     	; 0x1e08 <async+0x102>
    1de2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1de6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1dea:	01 96       	adiw	r24, 0x01	; 1
    1dec:	09 2e       	mov	r0, r25
    1dee:	00 0c       	add	r0, r0
    1df0:	aa 0b       	sbc	r26, r26
    1df2:	bb 0b       	sbc	r27, r27
    1df4:	dc 01       	movw	r26, r24
    1df6:	99 27       	eor	r25, r25
    1df8:	88 27       	eor	r24, r24
    1dfa:	a9 01       	movw	r20, r18
    1dfc:	60 e0       	ldi	r22, 0x00	; 0
    1dfe:	70 e0       	ldi	r23, 0x00	; 0
    1e00:	84 2b       	or	r24, r20
    1e02:	95 2b       	or	r25, r21
    1e04:	a6 2b       	or	r26, r22
    1e06:	b7 2b       	or	r27, r23
    1e08:	48 1a       	sub	r4, r24
    1e0a:	59 0a       	sbc	r5, r25
    1e0c:	6a 0a       	sbc	r6, r26
    1e0e:	7b 0a       	sbc	r7, r27
    1e10:	14 14       	cp	r1, r4
    1e12:	15 04       	cpc	r1, r5
    1e14:	16 04       	cpc	r1, r6
    1e16:	17 04       	cpc	r1, r7
    1e18:	a4 f5       	brge	.+104    	; 0x1e82 <async+0x17c>
    1e1a:	66 e5       	ldi	r22, 0x56	; 86
    1e1c:	71 e0       	ldi	r23, 0x01	; 1
    1e1e:	ce 01       	movw	r24, r28
    1e20:	13 de       	rcall	.-986    	; 0x1a48 <enqueueByBaseline>
    1e22:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1e26:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1e2a:	30 97       	sbiw	r30, 0x00	; 0
    1e2c:	21 f1       	breq	.+72     	; 0x1e76 <async+0x170>
    1e2e:	82 81       	ldd	r24, Z+2	; 0x02
    1e30:	93 81       	ldd	r25, Z+3	; 0x03
    1e32:	a4 81       	ldd	r26, Z+4	; 0x04
    1e34:	b5 81       	ldd	r27, Z+5	; 0x05
    1e36:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1e3a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1e3e:	2a 17       	cp	r18, r26
    1e40:	3b 07       	cpc	r19, r27
    1e42:	c9 f4       	brne	.+50     	; 0x1e76 <async+0x170>
    1e44:	9c 01       	movw	r18, r24
    1e46:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1e4a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1e4e:	84 1b       	sub	r24, r20
    1e50:	95 0b       	sbc	r25, r21
    1e52:	01 97       	sbiw	r24, 0x01	; 1
    1e54:	31 f4       	brne	.+12     	; 0x1e62 <async+0x15c>
    1e56:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1e5a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1e5e:	2f 5f       	subi	r18, 0xFF	; 255
    1e60:	3f 4f       	sbci	r19, 0xFF	; 255
    1e62:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1e66:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1e6a:	ef e6       	ldi	r30, 0x6F	; 111
    1e6c:	f0 e0       	ldi	r31, 0x00	; 0
    1e6e:	80 81       	ld	r24, Z
    1e70:	82 60       	ori	r24, 0x02	; 2
    1e72:	80 83       	st	Z, r24
    1e74:	40 c0       	rjmp	.+128    	; 0x1ef6 <async+0x1f0>
    1e76:	ef e6       	ldi	r30, 0x6F	; 111
    1e78:	f0 e0       	ldi	r31, 0x00	; 0
    1e7a:	80 81       	ld	r24, Z
    1e7c:	8d 7f       	andi	r24, 0xFD	; 253
    1e7e:	80 83       	st	Z, r24
    1e80:	3a c0       	rjmp	.+116    	; 0x1ef6 <async+0x1f0>
    1e82:	68 e5       	ldi	r22, 0x58	; 88
    1e84:	71 e0       	ldi	r23, 0x01	; 1
    1e86:	ce 01       	movw	r24, r28
    1e88:	9c dd       	rcall	.-1224   	; 0x19c2 <enqueueByDeadline>
    1e8a:	33 20       	and	r3, r3
    1e8c:	b9 f1       	breq	.+110    	; 0x1efc <async+0x1f6>
    1e8e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <threadPool>
    1e92:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <threadPool+0x1>
    1e96:	00 97       	sbiw	r24, 0x00	; 0
    1e98:	81 f1       	breq	.+96     	; 0x1efa <async+0x1f4>
    1e9a:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <activeStack>
    1e9e:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <activeStack+0x1>
    1ea2:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <msgQ>
    1ea6:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <msgQ+0x1>
    1eaa:	02 81       	ldd	r16, Z+2	; 0x02
    1eac:	13 81       	ldd	r17, Z+3	; 0x03
    1eae:	d9 01       	movw	r26, r18
    1eb0:	16 96       	adiw	r26, 0x06	; 6
    1eb2:	4d 91       	ld	r20, X+
    1eb4:	5d 91       	ld	r21, X+
    1eb6:	6d 91       	ld	r22, X+
    1eb8:	7c 91       	ld	r23, X
    1eba:	19 97       	sbiw	r26, 0x09	; 9
    1ebc:	d8 01       	movw	r26, r16
    1ebe:	16 96       	adiw	r26, 0x06	; 6
    1ec0:	0d 91       	ld	r16, X+
    1ec2:	1d 91       	ld	r17, X+
    1ec4:	2d 91       	ld	r18, X+
    1ec6:	3c 91       	ld	r19, X
    1ec8:	19 97       	sbiw	r26, 0x09	; 9
    1eca:	40 1b       	sub	r20, r16
    1ecc:	51 0b       	sbc	r21, r17
    1ece:	62 0b       	sbc	r22, r18
    1ed0:	73 0b       	sbc	r23, r19
    1ed2:	9a f4       	brpl	.+38     	; 0x1efa <async+0x1f4>
    1ed4:	dc 01       	movw	r26, r24
    1ed6:	2d 91       	ld	r18, X+
    1ed8:	3c 91       	ld	r19, X
    1eda:	11 97       	sbiw	r26, 0x01	; 1
    1edc:	30 93 39 01 	sts	0x0139, r19	; 0x800139 <threadPool+0x1>
    1ee0:	20 93 38 01 	sts	0x0138, r18	; 0x800138 <threadPool>
    1ee4:	ed 93       	st	X+, r30
    1ee6:	fc 93       	st	X, r31
    1ee8:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <activeStack+0x1>
    1eec:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <activeStack>
    1ef0:	0e 94 01 05 	call	0xa02	; 0xa02 <dispatch>
    1ef4:	02 c0       	rjmp	.+4      	; 0x1efa <async+0x1f4>
    1ef6:	33 20       	and	r3, r3
    1ef8:	09 f0       	breq	.+2      	; 0x1efc <async+0x1f6>
    1efa:	78 94       	sei
    1efc:	ce 01       	movw	r24, r28
    1efe:	df 91       	pop	r29
    1f00:	cf 91       	pop	r28
    1f02:	1f 91       	pop	r17
    1f04:	0f 91       	pop	r16
    1f06:	ff 90       	pop	r15
    1f08:	ef 90       	pop	r14
    1f0a:	df 90       	pop	r13
    1f0c:	cf 90       	pop	r12
    1f0e:	bf 90       	pop	r11
    1f10:	af 90       	pop	r10
    1f12:	9f 90       	pop	r9
    1f14:	8f 90       	pop	r8
    1f16:	7f 90       	pop	r7
    1f18:	6f 90       	pop	r6
    1f1a:	5f 90       	pop	r5
    1f1c:	4f 90       	pop	r4
    1f1e:	3f 90       	pop	r3
    1f20:	08 95       	ret

00001f22 <sync>:
    1f22:	af 92       	push	r10
    1f24:	bf 92       	push	r11
    1f26:	cf 92       	push	r12
    1f28:	df 92       	push	r13
    1f2a:	ff 92       	push	r15
    1f2c:	0f 93       	push	r16
    1f2e:	1f 93       	push	r17
    1f30:	cf 93       	push	r28
    1f32:	df 93       	push	r29
    1f34:	8c 01       	movw	r16, r24
    1f36:	6b 01       	movw	r12, r22
    1f38:	5a 01       	movw	r10, r20
    1f3a:	8f b7       	in	r24, 0x3f	; 63
    1f3c:	80 78       	andi	r24, 0x80	; 128
    1f3e:	f8 2e       	mov	r15, r24
    1f40:	f8 94       	cli
    1f42:	d8 01       	movw	r26, r16
    1f44:	cd 91       	ld	r28, X+
    1f46:	dc 91       	ld	r29, X
    1f48:	20 97       	sbiw	r28, 0x00	; 0
    1f4a:	71 f1       	breq	.+92     	; 0x1fa8 <sync+0x86>
    1f4c:	ac 81       	ldd	r26, Y+4	; 0x04
    1f4e:	bd 81       	ldd	r27, Y+5	; 0x05
    1f50:	10 97       	sbiw	r26, 0x00	; 0
    1f52:	31 f0       	breq	.+12     	; 0x1f60 <sync+0x3e>
    1f54:	cd 91       	ld	r28, X+
    1f56:	dc 91       	ld	r29, X
    1f58:	ac 81       	ldd	r26, Y+4	; 0x04
    1f5a:	bd 81       	ldd	r27, Y+5	; 0x05
    1f5c:	10 97       	sbiw	r26, 0x00	; 0
    1f5e:	d1 f7       	brne	.-12     	; 0x1f54 <sync+0x32>
    1f60:	e0 91 34 01 	lds	r30, 0x0134	; 0x800134 <current>
    1f64:	f0 91 35 01 	lds	r31, 0x0135	; 0x800135 <current+0x1>
    1f68:	ce 17       	cp	r28, r30
    1f6a:	df 07       	cpc	r29, r31
    1f6c:	21 f0       	breq	.+8      	; 0x1f76 <sync+0x54>
    1f6e:	ff 20       	and	r15, r15
    1f70:	09 f4       	brne	.+2      	; 0x1f74 <sync+0x52>
    1f72:	4d c0       	rjmp	.+154    	; 0x200e <sync+0xec>
    1f74:	07 c0       	rjmp	.+14     	; 0x1f84 <sync+0x62>
    1f76:	ff 20       	and	r15, r15
    1f78:	09 f4       	brne	.+2      	; 0x1f7c <sync+0x5a>
    1f7a:	4c c0       	rjmp	.+152    	; 0x2014 <sync+0xf2>
    1f7c:	78 94       	sei
    1f7e:	8f ef       	ldi	r24, 0xFF	; 255
    1f80:	9f ef       	ldi	r25, 0xFF	; 255
    1f82:	66 c0       	rjmp	.+204    	; 0x2050 <sync+0x12e>
    1f84:	d8 01       	movw	r26, r16
    1f86:	12 96       	adiw	r26, 0x02	; 2
    1f88:	8d 91       	ld	r24, X+
    1f8a:	9c 91       	ld	r25, X
    1f8c:	13 97       	sbiw	r26, 0x03	; 3
    1f8e:	00 97       	sbiw	r24, 0x00	; 0
    1f90:	09 f4       	brne	.+2      	; 0x1f94 <sync+0x72>
    1f92:	46 c0       	rjmp	.+140    	; 0x2020 <sync+0xfe>
    1f94:	dc 01       	movw	r26, r24
    1f96:	15 96       	adiw	r26, 0x05	; 5
    1f98:	1c 92       	st	X, r1
    1f9a:	1e 92       	st	-X, r1
    1f9c:	14 97       	sbiw	r26, 0x04	; 4
    1f9e:	40 c0       	rjmp	.+128    	; 0x2020 <sync+0xfe>
    1fa0:	78 94       	sei
    1fa2:	80 e0       	ldi	r24, 0x00	; 0
    1fa4:	90 e0       	ldi	r25, 0x00	; 0
    1fa6:	54 c0       	rjmp	.+168    	; 0x2050 <sync+0x12e>
    1fa8:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <current>
    1fac:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <current+0x1>
    1fb0:	f8 01       	movw	r30, r16
    1fb2:	91 83       	std	Z+1, r25	; 0x01
    1fb4:	80 83       	st	Z, r24
    1fb6:	ff 20       	and	r15, r15
    1fb8:	41 f0       	breq	.+16     	; 0x1fca <sync+0xa8>
    1fba:	d8 01       	movw	r26, r16
    1fbc:	12 96       	adiw	r26, 0x02	; 2
    1fbe:	8d 91       	ld	r24, X+
    1fc0:	9c 91       	ld	r25, X
    1fc2:	13 97       	sbiw	r26, 0x03	; 3
    1fc4:	01 97       	sbiw	r24, 0x01	; 1
    1fc6:	09 f0       	breq	.+2      	; 0x1fca <sync+0xa8>
    1fc8:	78 94       	sei
    1fca:	b5 01       	movw	r22, r10
    1fcc:	c8 01       	movw	r24, r16
    1fce:	f6 01       	movw	r30, r12
    1fd0:	09 95       	icall
    1fd2:	d8 2f       	mov	r29, r24
    1fd4:	c9 2f       	mov	r28, r25
    1fd6:	8f b7       	in	r24, 0x3f	; 63
    1fd8:	f8 94       	cli
    1fda:	d8 01       	movw	r26, r16
    1fdc:	11 96       	adiw	r26, 0x01	; 1
    1fde:	1c 92       	st	X, r1
    1fe0:	1e 92       	st	-X, r1
    1fe2:	12 96       	adiw	r26, 0x02	; 2
    1fe4:	8d 91       	ld	r24, X+
    1fe6:	9c 91       	ld	r25, X
    1fe8:	13 97       	sbiw	r26, 0x03	; 3
    1fea:	82 30       	cpi	r24, 0x02	; 2
    1fec:	91 05       	cpc	r25, r1
    1fee:	48 f0       	brcs	.+18     	; 0x2002 <sync+0xe0>
    1ff0:	13 96       	adiw	r26, 0x03	; 3
    1ff2:	1c 92       	st	X, r1
    1ff4:	1e 92       	st	-X, r1
    1ff6:	12 97       	sbiw	r26, 0x02	; 2
    1ff8:	fc 01       	movw	r30, r24
    1ffa:	15 82       	std	Z+5, r1	; 0x05
    1ffc:	14 82       	std	Z+4, r1	; 0x04
    1ffe:	0e 94 01 05 	call	0xa02	; 0xa02 <dispatch>
    2002:	ff 20       	and	r15, r15
    2004:	51 f0       	breq	.+20     	; 0x201a <sync+0xf8>
    2006:	78 94       	sei
    2008:	8d 2f       	mov	r24, r29
    200a:	9c 2f       	mov	r25, r28
    200c:	21 c0       	rjmp	.+66     	; 0x2050 <sync+0x12e>
    200e:	8f ef       	ldi	r24, 0xFF	; 255
    2010:	9f ef       	ldi	r25, 0xFF	; 255
    2012:	1e c0       	rjmp	.+60     	; 0x2050 <sync+0x12e>
    2014:	8f ef       	ldi	r24, 0xFF	; 255
    2016:	9f ef       	ldi	r25, 0xFF	; 255
    2018:	1b c0       	rjmp	.+54     	; 0x2050 <sync+0x12e>
    201a:	8d 2f       	mov	r24, r29
    201c:	9c 2f       	mov	r25, r28
    201e:	18 c0       	rjmp	.+48     	; 0x2050 <sync+0x12e>
    2020:	d8 01       	movw	r26, r16
    2022:	13 96       	adiw	r26, 0x03	; 3
    2024:	fc 93       	st	X, r31
    2026:	ee 93       	st	-X, r30
    2028:	12 97       	sbiw	r26, 0x02	; 2
    202a:	15 83       	std	Z+5, r17	; 0x05
    202c:	04 83       	std	Z+4, r16	; 0x04
    202e:	ce 01       	movw	r24, r28
    2030:	0e 94 01 05 	call	0xa02	; 0xa02 <dispatch>
    2034:	e0 91 34 01 	lds	r30, 0x0134	; 0x800134 <current>
    2038:	f0 91 35 01 	lds	r31, 0x0135	; 0x800135 <current+0x1>
    203c:	82 81       	ldd	r24, Z+2	; 0x02
    203e:	93 81       	ldd	r25, Z+3	; 0x03
    2040:	89 2b       	or	r24, r25
    2042:	09 f4       	brne	.+2      	; 0x2046 <sync+0x124>
    2044:	ad cf       	rjmp	.-166    	; 0x1fa0 <sync+0x7e>
    2046:	cf 01       	movw	r24, r30
    2048:	f8 01       	movw	r30, r16
    204a:	91 83       	std	Z+1, r25	; 0x01
    204c:	80 83       	st	Z, r24
    204e:	b5 cf       	rjmp	.-150    	; 0x1fba <sync+0x98>
    2050:	df 91       	pop	r29
    2052:	cf 91       	pop	r28
    2054:	1f 91       	pop	r17
    2056:	0f 91       	pop	r16
    2058:	ff 90       	pop	r15
    205a:	df 90       	pop	r13
    205c:	cf 90       	pop	r12
    205e:	bf 90       	pop	r11
    2060:	af 90       	pop	r10
    2062:	08 95       	ret

00002064 <run>:
    2064:	00 91 34 01 	lds	r16, 0x0134	; 0x800134 <current>
    2068:	10 91 35 01 	lds	r17, 0x0135	; 0x800135 <current+0x1>
    206c:	88 e5       	ldi	r24, 0x58	; 88
    206e:	91 e0       	ldi	r25, 0x01	; 1
    2070:	2e dd       	rcall	.-1444   	; 0x1ace <dequeue>
    2072:	ec 01       	movw	r28, r24
    2074:	d8 01       	movw	r26, r16
    2076:	13 96       	adiw	r26, 0x03	; 3
    2078:	9c 93       	st	X, r25
    207a:	8e 93       	st	-X, r24
    207c:	12 97       	sbiw	r26, 0x02	; 2
    207e:	78 94       	sei
    2080:	4e 85       	ldd	r20, Y+14	; 0x0e
    2082:	5f 85       	ldd	r21, Y+15	; 0x0f
    2084:	6c 85       	ldd	r22, Y+12	; 0x0c
    2086:	7d 85       	ldd	r23, Y+13	; 0x0d
    2088:	8a 85       	ldd	r24, Y+10	; 0x0a
    208a:	9b 85       	ldd	r25, Y+11	; 0x0b
    208c:	4a df       	rcall	.-364    	; 0x1f22 <sync>
    208e:	8f b7       	in	r24, 0x3f	; 63
    2090:	f8 94       	cli
    2092:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <msgPool>
    2096:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <msgPool+0x1>
    209a:	99 83       	std	Y+1, r25	; 0x01
    209c:	88 83       	st	Y, r24
    209e:	d0 93 3b 01 	sts	0x013B, r29	; 0x80013b <msgPool+0x1>
    20a2:	c0 93 3a 01 	sts	0x013A, r28	; 0x80013a <msgPool>
    20a6:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <activeStack>
    20aa:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <activeStack+0x1>
    20ae:	00 81       	ld	r16, Z
    20b0:	11 81       	ldd	r17, Z+1	; 0x01
    20b2:	e8 01       	movw	r28, r16
    20b4:	2a 81       	ldd	r18, Y+2	; 0x02
    20b6:	3b 81       	ldd	r19, Y+3	; 0x03
    20b8:	a0 91 58 01 	lds	r26, 0x0158	; 0x800158 <msgQ>
    20bc:	b0 91 59 01 	lds	r27, 0x0159	; 0x800159 <msgQ+0x1>
    20c0:	10 97       	sbiw	r26, 0x00	; 0
    20c2:	c1 f0       	breq	.+48     	; 0x20f4 <run+0x90>
    20c4:	21 15       	cp	r18, r1
    20c6:	31 05       	cpc	r19, r1
    20c8:	69 f2       	breq	.-102    	; 0x2064 <run>
    20ca:	16 96       	adiw	r26, 0x06	; 6
    20cc:	8d 91       	ld	r24, X+
    20ce:	9d 91       	ld	r25, X+
    20d0:	0d 90       	ld	r0, X+
    20d2:	bc 91       	ld	r27, X
    20d4:	a0 2d       	mov	r26, r0
    20d6:	e9 01       	movw	r28, r18
    20d8:	4e 81       	ldd	r20, Y+6	; 0x06
    20da:	5f 81       	ldd	r21, Y+7	; 0x07
    20dc:	68 85       	ldd	r22, Y+8	; 0x08
    20de:	79 85       	ldd	r23, Y+9	; 0x09
    20e0:	84 1b       	sub	r24, r20
    20e2:	95 0b       	sbc	r25, r21
    20e4:	a6 0b       	sbc	r26, r22
    20e6:	b7 0b       	sbc	r27, r23
    20e8:	18 16       	cp	r1, r24
    20ea:	19 06       	cpc	r1, r25
    20ec:	1a 06       	cpc	r1, r26
    20ee:	1b 06       	cpc	r1, r27
    20f0:	0c f0       	brlt	.+2      	; 0x20f4 <run+0x90>
    20f2:	b8 cf       	rjmp	.-144    	; 0x2064 <run>
    20f4:	10 93 37 01 	sts	0x0137, r17	; 0x800137 <activeStack+0x1>
    20f8:	00 93 36 01 	sts	0x0136, r16	; 0x800136 <activeStack>
    20fc:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <threadPool>
    2100:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <threadPool+0x1>
    2104:	91 83       	std	Z+1, r25	; 0x01
    2106:	80 83       	st	Z, r24
    2108:	f0 93 39 01 	sts	0x0139, r31	; 0x800139 <threadPool+0x1>
    210c:	e0 93 38 01 	sts	0x0138, r30	; 0x800138 <threadPool>
    2110:	a0 91 36 01 	lds	r26, 0x0136	; 0x800136 <activeStack>
    2114:	b0 91 37 01 	lds	r27, 0x0137	; 0x800137 <activeStack+0x1>
    2118:	14 96       	adiw	r26, 0x04	; 4
    211a:	ed 91       	ld	r30, X+
    211c:	fc 91       	ld	r31, X
    211e:	15 97       	sbiw	r26, 0x05	; 5
    2120:	30 97       	sbiw	r30, 0x00	; 0
    2122:	41 f0       	breq	.+16     	; 0x2134 <run+0xd0>
    2124:	a0 81       	ld	r26, Z
    2126:	b1 81       	ldd	r27, Z+1	; 0x01
    2128:	14 96       	adiw	r26, 0x04	; 4
    212a:	ed 91       	ld	r30, X+
    212c:	fc 91       	ld	r31, X
    212e:	15 97       	sbiw	r26, 0x05	; 5
    2130:	30 97       	sbiw	r30, 0x00	; 0
    2132:	c1 f7       	brne	.-16     	; 0x2124 <run+0xc0>
    2134:	cd 01       	movw	r24, r26
    2136:	0e 94 01 05 	call	0xa02	; 0xa02 <dispatch>
    213a:	94 cf       	rjmp	.-216    	; 0x2064 <run>

0000213c <install>:

    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    213c:	42 31       	cpi	r20, 0x12	; 18
    213e:	b8 f4       	brcc	.+46     	; 0x216e <install+0x32>
        char status;
        DISABLE(status);
    2140:	2f b7       	in	r18, 0x3f	; 63
    2142:	f8 94       	cli
        otable[i] = obj;
    2144:	50 e0       	ldi	r21, 0x00	; 0
    2146:	44 0f       	add	r20, r20
    2148:	55 1f       	adc	r21, r21
    214a:	fa 01       	movw	r30, r20
    214c:	e6 5a       	subi	r30, 0xA6	; 166
    214e:	fe 4f       	sbci	r31, 0xFE	; 254
    2150:	91 83       	std	Z+1, r25	; 0x01
    2152:	80 83       	st	Z, r24
        mtable[i] = m;
    2154:	fa 01       	movw	r30, r20
    2156:	ee 50       	subi	r30, 0x0E	; 14
    2158:	fe 4f       	sbci	r31, 0xFE	; 254
    215a:	71 83       	std	Z+1, r23	; 0x01
    215c:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    215e:	41 e0       	ldi	r20, 0x01	; 1
    2160:	50 e0       	ldi	r21, 0x00	; 0
    2162:	fc 01       	movw	r30, r24
    2164:	53 83       	std	Z+3, r21	; 0x03
    2166:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    2168:	22 23       	and	r18, r18
    216a:	0c f4       	brge	.+2      	; 0x216e <install+0x32>
    216c:	78 94       	sei
    216e:	08 95       	ret

00002170 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2170:	8c 01       	movw	r16, r24
    2172:	eb 01       	movw	r28, r22
    2174:	7a 01       	movw	r14, r20
    char status;
    DISABLE(status);
    2176:	8f b7       	in	r24, 0x3f	; 63
    2178:	f8 94       	cli
    initialize();
    217a:	0e 94 96 04 	call	0x92c	; 0x92c <initialize>
    ENABLE(1);
    217e:	78 94       	sei
    if (m != NULL)
    2180:	20 97       	sbiw	r28, 0x00	; 0
    2182:	21 f0       	breq	.+8      	; 0x218c <tinytimber+0x1c>
        m(obj, arg);
    2184:	b7 01       	movw	r22, r14
    2186:	c8 01       	movw	r24, r16
    2188:	fe 01       	movw	r30, r28
    218a:	09 95       	icall
    DISABLE(status);
    218c:	8f b7       	in	r24, 0x3f	; 63
    218e:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    2190:	0e 94 21 05 	call	0xa42	; 0xa42 <schedule>
    ENABLE(1);
    2194:	78 94       	sei
    while (1) {
        SLEEP();
    2196:	81 e0       	ldi	r24, 0x01	; 1
    2198:	83 bf       	out	0x33, r24	; 51
    219a:	88 95       	sleep
    219c:	fd cf       	rjmp	.-6      	; 0x2198 <tinytimber+0x28>

0000219e <__divmodhi4>:
    219e:	97 fb       	bst	r25, 7
    21a0:	07 2e       	mov	r0, r23
    21a2:	16 f4       	brtc	.+4      	; 0x21a8 <__divmodhi4+0xa>
    21a4:	00 94       	com	r0
    21a6:	06 d0       	rcall	.+12     	; 0x21b4 <__divmodhi4_neg1>
    21a8:	77 fd       	sbrc	r23, 7
    21aa:	08 d0       	rcall	.+16     	; 0x21bc <__divmodhi4_neg2>
    21ac:	37 d0       	rcall	.+110    	; 0x221c <__udivmodhi4>
    21ae:	07 fc       	sbrc	r0, 7
    21b0:	05 d0       	rcall	.+10     	; 0x21bc <__divmodhi4_neg2>
    21b2:	3e f4       	brtc	.+14     	; 0x21c2 <__divmodhi4_exit>

000021b4 <__divmodhi4_neg1>:
    21b4:	90 95       	com	r25
    21b6:	81 95       	neg	r24
    21b8:	9f 4f       	sbci	r25, 0xFF	; 255
    21ba:	08 95       	ret

000021bc <__divmodhi4_neg2>:
    21bc:	70 95       	com	r23
    21be:	61 95       	neg	r22
    21c0:	7f 4f       	sbci	r23, 0xFF	; 255

000021c2 <__divmodhi4_exit>:
    21c2:	08 95       	ret

000021c4 <__divmodsi4>:
    21c4:	05 2e       	mov	r0, r21
    21c6:	97 fb       	bst	r25, 7
    21c8:	16 f4       	brtc	.+4      	; 0x21ce <__divmodsi4+0xa>
    21ca:	00 94       	com	r0
    21cc:	0f d0       	rcall	.+30     	; 0x21ec <__negsi2>
    21ce:	57 fd       	sbrc	r21, 7
    21d0:	05 d0       	rcall	.+10     	; 0x21dc <__divmodsi4_neg2>
    21d2:	38 d0       	rcall	.+112    	; 0x2244 <__udivmodsi4>
    21d4:	07 fc       	sbrc	r0, 7
    21d6:	02 d0       	rcall	.+4      	; 0x21dc <__divmodsi4_neg2>
    21d8:	46 f4       	brtc	.+16     	; 0x21ea <__divmodsi4_exit>
    21da:	08 c0       	rjmp	.+16     	; 0x21ec <__negsi2>

000021dc <__divmodsi4_neg2>:
    21dc:	50 95       	com	r21
    21de:	40 95       	com	r20
    21e0:	30 95       	com	r19
    21e2:	21 95       	neg	r18
    21e4:	3f 4f       	sbci	r19, 0xFF	; 255
    21e6:	4f 4f       	sbci	r20, 0xFF	; 255
    21e8:	5f 4f       	sbci	r21, 0xFF	; 255

000021ea <__divmodsi4_exit>:
    21ea:	08 95       	ret

000021ec <__negsi2>:
    21ec:	90 95       	com	r25
    21ee:	80 95       	com	r24
    21f0:	70 95       	com	r23
    21f2:	61 95       	neg	r22
    21f4:	7f 4f       	sbci	r23, 0xFF	; 255
    21f6:	8f 4f       	sbci	r24, 0xFF	; 255
    21f8:	9f 4f       	sbci	r25, 0xFF	; 255
    21fa:	08 95       	ret

000021fc <__usmulhisi3>:
    21fc:	45 d0       	rcall	.+138    	; 0x2288 <__umulhisi3>

000021fe <__usmulhisi3_tail>:
    21fe:	b7 ff       	sbrs	r27, 7
    2200:	08 95       	ret
    2202:	82 1b       	sub	r24, r18
    2204:	93 0b       	sbc	r25, r19
    2206:	08 95       	ret

00002208 <__muluhisi3>:
    2208:	3f d0       	rcall	.+126    	; 0x2288 <__umulhisi3>
    220a:	a5 9f       	mul	r26, r21
    220c:	90 0d       	add	r25, r0
    220e:	b4 9f       	mul	r27, r20
    2210:	90 0d       	add	r25, r0
    2212:	a4 9f       	mul	r26, r20
    2214:	80 0d       	add	r24, r0
    2216:	91 1d       	adc	r25, r1
    2218:	11 24       	eor	r1, r1
    221a:	08 95       	ret

0000221c <__udivmodhi4>:
    221c:	aa 1b       	sub	r26, r26
    221e:	bb 1b       	sub	r27, r27
    2220:	51 e1       	ldi	r21, 0x11	; 17
    2222:	07 c0       	rjmp	.+14     	; 0x2232 <__udivmodhi4_ep>

00002224 <__udivmodhi4_loop>:
    2224:	aa 1f       	adc	r26, r26
    2226:	bb 1f       	adc	r27, r27
    2228:	a6 17       	cp	r26, r22
    222a:	b7 07       	cpc	r27, r23
    222c:	10 f0       	brcs	.+4      	; 0x2232 <__udivmodhi4_ep>
    222e:	a6 1b       	sub	r26, r22
    2230:	b7 0b       	sbc	r27, r23

00002232 <__udivmodhi4_ep>:
    2232:	88 1f       	adc	r24, r24
    2234:	99 1f       	adc	r25, r25
    2236:	5a 95       	dec	r21
    2238:	a9 f7       	brne	.-22     	; 0x2224 <__udivmodhi4_loop>
    223a:	80 95       	com	r24
    223c:	90 95       	com	r25
    223e:	bc 01       	movw	r22, r24
    2240:	cd 01       	movw	r24, r26
    2242:	08 95       	ret

00002244 <__udivmodsi4>:
    2244:	a1 e2       	ldi	r26, 0x21	; 33
    2246:	1a 2e       	mov	r1, r26
    2248:	aa 1b       	sub	r26, r26
    224a:	bb 1b       	sub	r27, r27
    224c:	fd 01       	movw	r30, r26
    224e:	0d c0       	rjmp	.+26     	; 0x226a <__udivmodsi4_ep>

00002250 <__udivmodsi4_loop>:
    2250:	aa 1f       	adc	r26, r26
    2252:	bb 1f       	adc	r27, r27
    2254:	ee 1f       	adc	r30, r30
    2256:	ff 1f       	adc	r31, r31
    2258:	a2 17       	cp	r26, r18
    225a:	b3 07       	cpc	r27, r19
    225c:	e4 07       	cpc	r30, r20
    225e:	f5 07       	cpc	r31, r21
    2260:	20 f0       	brcs	.+8      	; 0x226a <__udivmodsi4_ep>
    2262:	a2 1b       	sub	r26, r18
    2264:	b3 0b       	sbc	r27, r19
    2266:	e4 0b       	sbc	r30, r20
    2268:	f5 0b       	sbc	r31, r21

0000226a <__udivmodsi4_ep>:
    226a:	66 1f       	adc	r22, r22
    226c:	77 1f       	adc	r23, r23
    226e:	88 1f       	adc	r24, r24
    2270:	99 1f       	adc	r25, r25
    2272:	1a 94       	dec	r1
    2274:	69 f7       	brne	.-38     	; 0x2250 <__udivmodsi4_loop>
    2276:	60 95       	com	r22
    2278:	70 95       	com	r23
    227a:	80 95       	com	r24
    227c:	90 95       	com	r25
    227e:	9b 01       	movw	r18, r22
    2280:	ac 01       	movw	r20, r24
    2282:	bd 01       	movw	r22, r26
    2284:	cf 01       	movw	r24, r30
    2286:	08 95       	ret

00002288 <__umulhisi3>:
    2288:	a2 9f       	mul	r26, r18
    228a:	b0 01       	movw	r22, r0
    228c:	b3 9f       	mul	r27, r19
    228e:	c0 01       	movw	r24, r0
    2290:	a3 9f       	mul	r26, r19
    2292:	70 0d       	add	r23, r0
    2294:	81 1d       	adc	r24, r1
    2296:	11 24       	eor	r1, r1
    2298:	91 1d       	adc	r25, r1
    229a:	b2 9f       	mul	r27, r18
    229c:	70 0d       	add	r23, r0
    229e:	81 1d       	adc	r24, r1
    22a0:	11 24       	eor	r1, r1
    22a2:	91 1d       	adc	r25, r1
    22a4:	08 95       	ret

000022a6 <setjmp>:
    22a6:	dc 01       	movw	r26, r24
    22a8:	2d 92       	st	X+, r2
    22aa:	3d 92       	st	X+, r3
    22ac:	4d 92       	st	X+, r4
    22ae:	5d 92       	st	X+, r5
    22b0:	6d 92       	st	X+, r6
    22b2:	7d 92       	st	X+, r7
    22b4:	8d 92       	st	X+, r8
    22b6:	9d 92       	st	X+, r9
    22b8:	ad 92       	st	X+, r10
    22ba:	bd 92       	st	X+, r11
    22bc:	cd 92       	st	X+, r12
    22be:	dd 92       	st	X+, r13
    22c0:	ed 92       	st	X+, r14
    22c2:	fd 92       	st	X+, r15
    22c4:	0d 93       	st	X+, r16
    22c6:	1d 93       	st	X+, r17
    22c8:	cd 93       	st	X+, r28
    22ca:	dd 93       	st	X+, r29
    22cc:	ff 91       	pop	r31
    22ce:	ef 91       	pop	r30
    22d0:	8d b7       	in	r24, 0x3d	; 61
    22d2:	8d 93       	st	X+, r24
    22d4:	8e b7       	in	r24, 0x3e	; 62
    22d6:	8d 93       	st	X+, r24
    22d8:	8f b7       	in	r24, 0x3f	; 63
    22da:	8d 93       	st	X+, r24
    22dc:	ed 93       	st	X+, r30
    22de:	fd 93       	st	X+, r31
    22e0:	88 27       	eor	r24, r24
    22e2:	99 27       	eor	r25, r25
    22e4:	09 94       	ijmp

000022e6 <longjmp>:
    22e6:	dc 01       	movw	r26, r24
    22e8:	cb 01       	movw	r24, r22
    22ea:	81 30       	cpi	r24, 0x01	; 1
    22ec:	91 05       	cpc	r25, r1
    22ee:	81 1d       	adc	r24, r1
    22f0:	2d 90       	ld	r2, X+
    22f2:	3d 90       	ld	r3, X+
    22f4:	4d 90       	ld	r4, X+
    22f6:	5d 90       	ld	r5, X+
    22f8:	6d 90       	ld	r6, X+
    22fa:	7d 90       	ld	r7, X+
    22fc:	8d 90       	ld	r8, X+
    22fe:	9d 90       	ld	r9, X+
    2300:	ad 90       	ld	r10, X+
    2302:	bd 90       	ld	r11, X+
    2304:	cd 90       	ld	r12, X+
    2306:	dd 90       	ld	r13, X+
    2308:	ed 90       	ld	r14, X+
    230a:	fd 90       	ld	r15, X+
    230c:	0d 91       	ld	r16, X+
    230e:	1d 91       	ld	r17, X+
    2310:	cd 91       	ld	r28, X+
    2312:	dd 91       	ld	r29, X+
    2314:	ed 91       	ld	r30, X+
    2316:	fd 91       	ld	r31, X+
    2318:	0d 90       	ld	r0, X+
    231a:	f8 94       	cli
    231c:	fe bf       	out	0x3e, r31	; 62
    231e:	0f be       	out	0x3f, r0	; 63
    2320:	ed bf       	out	0x3d, r30	; 61
    2322:	ed 91       	ld	r30, X+
    2324:	fd 91       	ld	r31, X+
    2326:	09 94       	ijmp

00002328 <_exit>:
    2328:	f8 94       	cli

0000232a <__stop_program>:
    232a:	ff cf       	rjmp	.-2      	; 0x232a <__stop_program>
