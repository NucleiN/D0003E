
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000058  00800100  000023fa  0000248e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000023fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800158  00800158  000024e6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000024e6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002518  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000270  00000000  00000000  00002558  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000033c7  00000000  00000000  000027c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011c9  00000000  00000000  00005b8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002090  00000000  00000000  00006d58  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c5c  00000000  00000000  00008de8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008306  00000000  00000000  00009a44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002c89  00000000  00000000  00011d4a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  000149d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002e23  00000000  00000000  00014be3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	2d c0       	rjmp	.+90     	; 0x5c <__ctors_end>
       2:	00 00       	nop
       4:	bf c5       	rjmp	.+2942   	; 0xb84 <__vector_1>
       6:	00 00       	nop
       8:	28 c6       	rjmp	.+3152   	; 0xc5a <__vector_2>
       a:	00 00       	nop
       c:	91 c6       	rjmp	.+3362   	; 0xd30 <__vector_3>
       e:	00 00       	nop
      10:	fa c6       	rjmp	.+3572   	; 0xe06 <__vector_4>
      12:	00 00       	nop
      14:	63 c7       	rjmp	.+3782   	; 0xedc <__vector_5>
      16:	00 00       	nop
      18:	3d c0       	rjmp	.+122    	; 0x94 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	0c 94 37 0e 	jmp	0x1c6e	; 0x1c6e <__vector_7>
      20:	39 c0       	rjmp	.+114    	; 0x94 <__bad_interrupt>
      22:	00 00       	nop
      24:	0c 94 e5 0d 	jmp	0x1bca	; 0x1bca <__vector_9>
      28:	c4 c7       	rjmp	.+3976   	; 0xfb2 <__vector_10>
      2a:	00 00       	nop
      2c:	0c 94 44 08 	jmp	0x1088	; 0x1088 <__vector_11>
      30:	0c 94 af 08 	jmp	0x115e	; 0x115e <__vector_12>
      34:	0c 94 1a 09 	jmp	0x1234	; 0x1234 <__vector_13>
      38:	0c 94 85 09 	jmp	0x130a	; 0x130a <__vector_14>
      3c:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__vector_15>
      40:	0c 94 5b 0a 	jmp	0x14b6	; 0x14b6 <__vector_16>
      44:	0c 94 c6 0a 	jmp	0x158c	; 0x158c <__vector_17>
      48:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__vector_18>
      4c:	0c 94 9c 0b 	jmp	0x1738	; 0x1738 <__vector_19>
      50:	0c 94 07 0c 	jmp	0x180e	; 0x180e <__vector_20>
      54:	0c 94 72 0c 	jmp	0x18e4	; 0x18e4 <__vector_21>
      58:	0c 94 dd 0c 	jmp	0x19ba	; 0x19ba <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ea ef       	ldi	r30, 0xFA	; 250
      70:	f3 e2       	ldi	r31, 0x23	; 35
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a8 35       	cpi	r26, 0x58	; 88
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a8 e5       	ldi	r26, 0x58	; 88
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 3a       	cpi	r26, 0xAB	; 171
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	fb d3       	rcall	.+2038   	; 0x886 <main>
      90:	0c 94 fb 11 	jmp	0x23f6	; 0x23f6 <_exit>

00000094 <__bad_interrupt>:
      94:	b5 cf       	rjmp	.-150    	; 0x0 <__vectors>

00000096 <LCD_init>:

#include "codeUtils.h"

void LCD_init(void){
	//		Enable LCD | LPow Waveform
	LCDCRA = (1<<LCDEN) | (1<<LCDAB);
      96:	80 ec       	ldi	r24, 0xC0	; 192
      98:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
	//		Async clksrc | 1/4 Duty | 25 segments
	LCDCRB = (1<<LCDCS) | (1<<LCDMUX1) | (1<<LCDMUX0) | (1<<LCDPM2) | (1<<LCDPM1) | (1<<LCDPM0);
      9c:	87 eb       	ldi	r24, 0xB7	; 183
      9e:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	//		divide by 8
	LCDFRR = (1<<LCDCD2) | (1<<LCDCD1) | (1<<LCDCD0);
      a2:	87 e0       	ldi	r24, 0x07	; 7
      a4:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
	//		CC Max 3.35V
	LCDCCR = (1<<LCDCC3) | (1<<LCDCC2) | (1<<LCDCC1) | (1<<LCDCC0);
      a8:	8f e0       	ldi	r24, 0x0F	; 15
      aa:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
      ae:	08 95       	ret

000000b0 <BTN_init>:
}

void BTN_init(void){
	EIMSK|= (1<<PCIE1) | (1<<PCIE0);
      b0:	8d b3       	in	r24, 0x1d	; 29
      b2:	80 6c       	ori	r24, 0xC0	; 192
      b4:	8d bb       	out	0x1d, r24	; 29

	PCMSK1|= (1<<PCINT15) | (1<<PCINT14) | (1<<PCINT12);
      b6:	ec e6       	ldi	r30, 0x6C	; 108
      b8:	f0 e0       	ldi	r31, 0x00	; 0
      ba:	80 81       	ld	r24, Z
      bc:	80 6d       	ori	r24, 0xD0	; 208
      be:	80 83       	st	Z, r24
	PORTB|= (1<<PINB7) | (1<<PINB6) | (1<<PINB4);
      c0:	85 b1       	in	r24, 0x05	; 5
      c2:	80 6d       	ori	r24, 0xD0	; 208
      c4:	85 b9       	out	0x05, r24	; 5
	
	PCMSK0|= (1<<PCINT2) | (1<<PCINT3);
      c6:	eb e6       	ldi	r30, 0x6B	; 107
      c8:	f0 e0       	ldi	r31, 0x00	; 0
      ca:	80 81       	ld	r24, Z
      cc:	8c 60       	ori	r24, 0x0C	; 12
      ce:	80 83       	st	Z, r24
	PORTE|= (1<<PINE3) | (1<<PINE2);
      d0:	8e b1       	in	r24, 0x0e	; 14
      d2:	8c 60       	ori	r24, 0x0C	; 12
      d4:	8e b9       	out	0x0e, r24	; 14
      d6:	08 95       	ret

000000d8 <writeChar>:
}

static uint16_t charNrStencils[10] = {0x1551, 0x0110, 0x1E11, 0x1B11, 0x0B50, 0x1B41, 0x1F41, 0x0111, 0x1F51, 0x1B51};
void writeChar(char c, int pos){
      d8:	ab 01       	movw	r20, r22
	if(pos < 0 && pos > 5) return;
	cli();
      da:	f8 94       	cli
	uint8_t ch = c;
	ch-= 0x30;
      dc:	80 53       	subi	r24, 0x30	; 48

	uint8_t shift = pos%2 ? 0x04 : 0x00;
      de:	60 ff       	sbrs	r22, 0
      e0:	03 c0       	rjmp	.+6      	; 0xe8 <writeChar+0x10>
      e2:	74 e0       	ldi	r23, 0x04	; 4
	uint8_t mask = pos%2 ? 0x0F : 0xF0;
      e4:	af e0       	ldi	r26, 0x0F	; 15
      e6:	02 c0       	rjmp	.+4      	; 0xec <writeChar+0x14>
	if(pos < 0 && pos > 5) return;
	cli();
	uint8_t ch = c;
	ch-= 0x30;

	uint8_t shift = pos%2 ? 0x04 : 0x00;
      e8:	70 e0       	ldi	r23, 0x00	; 0
	uint8_t mask = pos%2 ? 0x0F : 0xF0;
      ea:	a0 ef       	ldi	r26, 0xF0	; 240
	uint16_t stencil = charNrStencils[ch];
      ec:	e8 2f       	mov	r30, r24
      ee:	f0 e0       	ldi	r31, 0x00	; 0
      f0:	ee 0f       	add	r30, r30
      f2:	ff 1f       	adc	r31, r31
      f4:	ec 5b       	subi	r30, 0xBC	; 188
      f6:	fe 4f       	sbci	r31, 0xFE	; 254
      f8:	20 81       	ld	r18, Z
      fa:	31 81       	ldd	r19, Z+1	; 0x01

	uint8_t *memPtr = &LCDDR0;
	memPtr+= pos/2;
      fc:	fa 01       	movw	r30, r20
      fe:	ff 23       	and	r31, r31
     100:	0c f4       	brge	.+2      	; 0x104 <writeChar+0x2c>
     102:	31 96       	adiw	r30, 0x01	; 1
     104:	f5 95       	asr	r31
     106:	e7 95       	ror	r30
     108:	e4 51       	subi	r30, 0x14	; 20
     10a:	ff 4f       	sbci	r31, 0xFF	; 255
     10c:	af 01       	movw	r20, r30
     10e:	4c 5e       	subi	r20, 0xEC	; 236
     110:	5f 4f       	sbci	r21, 0xFF	; 255
	for(int iq = 0; iq < 4; iq++){
		*memPtr&= mask;
		*memPtr|= (stencil & 0x0F) << shift;
     112:	c9 01       	movw	r24, r18
     114:	8f 70       	andi	r24, 0x0F	; 15
     116:	99 27       	eor	r25, r25
     118:	07 2e       	mov	r0, r23
     11a:	02 c0       	rjmp	.+4      	; 0x120 <writeChar+0x48>
     11c:	88 0f       	add	r24, r24
     11e:	99 1f       	adc	r25, r25
     120:	0a 94       	dec	r0
     122:	e2 f7       	brpl	.-8      	; 0x11c <writeChar+0x44>
	uint16_t stencil = charNrStencils[ch];

	uint8_t *memPtr = &LCDDR0;
	memPtr+= pos/2;
	for(int iq = 0; iq < 4; iq++){
		*memPtr&= mask;
     124:	90 81       	ld	r25, Z
     126:	9a 23       	and	r25, r26
		*memPtr|= (stencil & 0x0F) << shift;
     128:	89 2b       	or	r24, r25
     12a:	80 83       	st	Z, r24
		stencil>>= 0x04;
     12c:	32 95       	swap	r19
     12e:	22 95       	swap	r18
     130:	2f 70       	andi	r18, 0x0F	; 15
     132:	23 27       	eor	r18, r19
     134:	3f 70       	andi	r19, 0x0F	; 15
     136:	23 27       	eor	r18, r19
		memPtr+= 0x05;
     138:	35 96       	adiw	r30, 0x05	; 5
	uint8_t mask = pos%2 ? 0x0F : 0xF0;
	uint16_t stencil = charNrStencils[ch];

	uint8_t *memPtr = &LCDDR0;
	memPtr+= pos/2;
	for(int iq = 0; iq < 4; iq++){
     13a:	e4 17       	cp	r30, r20
     13c:	f5 07       	cpc	r31, r21
     13e:	49 f7       	brne	.-46     	; 0x112 <writeChar+0x3a>
		*memPtr&= mask;
		*memPtr|= (stencil & 0x0F) << shift;
		stencil>>= 0x04;
		memPtr+= 0x05;
	}
	sei();
     140:	78 94       	sei
     142:	08 95       	ret

00000144 <clearChar>:
}

void clearChar(int pos){
     144:	9c 01       	movw	r18, r24
	if(pos < 0 && pos > 5) return;
	cli();
     146:	f8 94       	cli
	uint8_t mask = pos%2 ? 0x0F : 0xF0;
     148:	80 fd       	sbrc	r24, 0
     14a:	02 c0       	rjmp	.+4      	; 0x150 <clearChar+0xc>
     14c:	90 ef       	ldi	r25, 0xF0	; 240
     14e:	01 c0       	rjmp	.+2      	; 0x152 <clearChar+0xe>
     150:	9f e0       	ldi	r25, 0x0F	; 15

	uint8_t *memPtr = &LCDDR0;
	memPtr+= pos/2;
     152:	f9 01       	movw	r30, r18
     154:	ff 23       	and	r31, r31
     156:	0c f4       	brge	.+2      	; 0x15a <clearChar+0x16>
     158:	31 96       	adiw	r30, 0x01	; 1
     15a:	f5 95       	asr	r31
     15c:	e7 95       	ror	r30
     15e:	e4 51       	subi	r30, 0x14	; 20
     160:	ff 4f       	sbci	r31, 0xFF	; 255
     162:	9f 01       	movw	r18, r30
     164:	2c 5e       	subi	r18, 0xEC	; 236
     166:	3f 4f       	sbci	r19, 0xFF	; 255
	for(int i = 0; i < 4; i++){
		*memPtr&= mask;
     168:	80 81       	ld	r24, Z
     16a:	89 23       	and	r24, r25
     16c:	80 83       	st	Z, r24
		memPtr+= 0x05;
     16e:	35 96       	adiw	r30, 0x05	; 5
	cli();
	uint8_t mask = pos%2 ? 0x0F : 0xF0;

	uint8_t *memPtr = &LCDDR0;
	memPtr+= pos/2;
	for(int i = 0; i < 4; i++){
     170:	e2 17       	cp	r30, r18
     172:	f3 07       	cpc	r31, r19
     174:	c9 f7       	brne	.-14     	; 0x168 <clearChar+0x24>
		*memPtr&= mask;
		memPtr+= 0x05;
	}
	sei();
     176:	78 94       	sei
     178:	08 95       	ret

0000017a <printAt>:
}

void printAt(int num, int pos){
     17a:	1f 93       	push	r17
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	eb 01       	movw	r28, r22
	int pp = pos;
	writeChar(((num/10) % 10)+0x30, pp);
     182:	2a e0       	ldi	r18, 0x0A	; 10
     184:	30 e0       	ldi	r19, 0x00	; 0
     186:	b9 01       	movw	r22, r18
     188:	0e 94 36 11 	call	0x226c	; 0x226c <__divmodhi4>
     18c:	18 2f       	mov	r17, r24
     18e:	cb 01       	movw	r24, r22
     190:	b9 01       	movw	r22, r18
     192:	0e 94 36 11 	call	0x226c	; 0x226c <__divmodhi4>
     196:	be 01       	movw	r22, r28
     198:	80 5d       	subi	r24, 0xD0	; 208
     19a:	9e df       	rcall	.-196    	; 0xd8 <writeChar>
	pp++;
     19c:	be 01       	movw	r22, r28
     19e:	6f 5f       	subi	r22, 0xFF	; 255
     1a0:	7f 4f       	sbci	r23, 0xFF	; 255
	writeChar((num % 10)+0x30, pp);
     1a2:	80 e3       	ldi	r24, 0x30	; 48
     1a4:	81 0f       	add	r24, r17
     1a6:	98 df       	rcall	.-208    	; 0xd8 <writeChar>
}
     1a8:	df 91       	pop	r29
     1aa:	cf 91       	pop	r28
     1ac:	1f 91       	pop	r17
     1ae:	08 95       	ret

000001b0 <clearAt>:

void clearAt(int pos){
     1b0:	cf 93       	push	r28
     1b2:	df 93       	push	r29
     1b4:	ec 01       	movw	r28, r24
	clearChar(pos);
     1b6:	c6 df       	rcall	.-116    	; 0x144 <clearChar>
	clearChar(pos+1);
     1b8:	ce 01       	movw	r24, r28
     1ba:	01 96       	adiw	r24, 0x01	; 1
     1bc:	c3 df       	rcall	.-122    	; 0x144 <clearChar>
     1be:	df 91       	pop	r29
     1c0:	cf 91       	pop	r28
     1c2:	08 95       	ret

000001c4 <_GUI_print>:
 *  Author: Daniel
 */ 

#include "GUI.h"

int _GUI_print(GUI *g, int arg){
     1c4:	0f 93       	push	r16
     1c6:	1f 93       	push	r17
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
	if(g->writeEn || arg){
     1cc:	fc 01       	movw	r30, r24
     1ce:	27 85       	ldd	r18, Z+15	; 0x0f
     1d0:	30 89       	ldd	r19, Z+16	; 0x10
     1d2:	23 2b       	or	r18, r19
     1d4:	11 f4       	brne	.+4      	; 0x1da <_GUI_print+0x16>
     1d6:	67 2b       	or	r22, r23
     1d8:	81 f0       	breq	.+32     	; 0x1fa <_GUI_print+0x36>
     1da:	ec 01       	movw	r28, r24
		printAt(PWM_getFreq(&(g->p)), g->pos);
     1dc:	0d 85       	ldd	r16, Y+13	; 0x0d
     1de:	1e 85       	ldd	r17, Y+14	; 0x0e
     1e0:	40 e0       	ldi	r20, 0x00	; 0
     1e2:	50 e0       	ldi	r21, 0x00	; 0
     1e4:	63 ee       	ldi	r22, 0xE3	; 227
     1e6:	74 e0       	ldi	r23, 0x04	; 4
     1e8:	04 96       	adiw	r24, 0x04	; 4
     1ea:	0e 94 f8 0f 	call	0x1ff0	; 0x1ff0 <sync>
     1ee:	b8 01       	movw	r22, r16
     1f0:	c4 df       	rcall	.-120    	; 0x17a <printAt>
		g->writeEn = 1;
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	98 8b       	std	Y+16, r25	; 0x10
     1f8:	8f 87       	std	Y+15, r24	; 0x0f
	}
	return 0;
}
     1fa:	80 e0       	ldi	r24, 0x00	; 0
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	df 91       	pop	r29
     200:	cf 91       	pop	r28
     202:	1f 91       	pop	r17
     204:	0f 91       	pop	r16
     206:	08 95       	ret

00000208 <_GUI_clear>:

int _GUI_clear(GUI *g, int arg){
     208:	cf 93       	push	r28
     20a:	df 93       	push	r29
     20c:	ec 01       	movw	r28, r24
	clearAt(g->pos);
     20e:	8d 85       	ldd	r24, Y+13	; 0x0d
     210:	9e 85       	ldd	r25, Y+14	; 0x0e
     212:	ce df       	rcall	.-100    	; 0x1b0 <clearAt>
	g->writeEn = 0;
     214:	18 8a       	std	Y+16, r1	; 0x10
     216:	1f 86       	std	Y+15, r1	; 0x0f
	return 0;
}
     218:	80 e0       	ldi	r24, 0x00	; 0
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	df 91       	pop	r29
     21e:	cf 91       	pop	r28
     220:	08 95       	ret

00000222 <_GUI_blinkLoop>:

int _GUI_blinkLoop(GUI *g, int arg){
     222:	af 92       	push	r10
     224:	bf 92       	push	r11
     226:	cf 92       	push	r12
     228:	df 92       	push	r13
     22a:	ef 92       	push	r14
     22c:	ff 92       	push	r15
     22e:	0f 93       	push	r16
     230:	1f 93       	push	r17
     232:	cf 93       	push	r28
     234:	df 93       	push	r29
	if(arg == g->blinkCount){
     236:	fc 01       	movw	r30, r24
     238:	23 89       	ldd	r18, Z+19	; 0x13
     23a:	34 89       	ldd	r19, Z+20	; 0x14
     23c:	26 17       	cp	r18, r22
     23e:	37 07       	cpc	r19, r23
     240:	09 f0       	breq	.+2      	; 0x244 <_GUI_blinkLoop+0x22>
     242:	4d c0       	rjmp	.+154    	; 0x2de <_GUI_blinkLoop+0xbc>
     244:	ec 01       	movw	r28, r24
		g->blinkCount++;
     246:	59 01       	movw	r10, r18
     248:	ff ef       	ldi	r31, 0xFF	; 255
     24a:	af 1a       	sub	r10, r31
     24c:	bf 0a       	sbc	r11, r31
     24e:	bc 8a       	std	Y+20, r11	; 0x14
     250:	ab 8a       	std	Y+19, r10	; 0x13
		if(arg%2){
     252:	20 ff       	sbrs	r18, 0
     254:	22 c0       	rjmp	.+68     	; 0x29a <_GUI_blinkLoop+0x78>
			GUI_clear(g);
     256:	c1 2c       	mov	r12, r1
     258:	d1 2c       	mov	r13, r1
     25a:	0f 2e       	mov	r0, r31
     25c:	f4 e0       	ldi	r31, 0x04	; 4
     25e:	ef 2e       	mov	r14, r31
     260:	f1 e0       	ldi	r31, 0x01	; 1
     262:	ff 2e       	mov	r15, r31
     264:	f0 2d       	mov	r31, r0
     266:	8c 01       	movw	r16, r24
     268:	20 e0       	ldi	r18, 0x00	; 0
     26a:	30 e0       	ldi	r19, 0x00	; 0
     26c:	a9 01       	movw	r20, r18
     26e:	60 e0       	ldi	r22, 0x00	; 0
     270:	70 e0       	ldi	r23, 0x00	; 0
     272:	cb 01       	movw	r24, r22
     274:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
			AFTER(MSEC(300), g, _GUI_blinkLoop, arg+1);
     278:	65 01       	movw	r12, r10
     27a:	0f 2e       	mov	r0, r31
     27c:	f1 e1       	ldi	r31, 0x11	; 17
     27e:	ef 2e       	mov	r14, r31
     280:	f1 e0       	ldi	r31, 0x01	; 1
     282:	ff 2e       	mov	r15, r31
     284:	f0 2d       	mov	r31, r0
     286:	20 e0       	ldi	r18, 0x00	; 0
     288:	30 e0       	ldi	r19, 0x00	; 0
     28a:	a9 01       	movw	r20, r18
     28c:	6f e9       	ldi	r22, 0x9F	; 159
     28e:	74 e2       	ldi	r23, 0x24	; 36
     290:	80 e0       	ldi	r24, 0x00	; 0
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
     298:	22 c0       	rjmp	.+68     	; 0x2de <_GUI_blinkLoop+0xbc>
		}else{
			GUI_fprint(g);
     29a:	cc 24       	eor	r12, r12
     29c:	c3 94       	inc	r12
     29e:	d1 2c       	mov	r13, r1
     2a0:	0f 2e       	mov	r0, r31
     2a2:	f2 ee       	ldi	r31, 0xE2	; 226
     2a4:	ef 2e       	mov	r14, r31
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	ff 2e       	mov	r15, r31
     2aa:	f0 2d       	mov	r31, r0
     2ac:	8c 01       	movw	r16, r24
     2ae:	20 e0       	ldi	r18, 0x00	; 0
     2b0:	30 e0       	ldi	r19, 0x00	; 0
     2b2:	a9 01       	movw	r20, r18
     2b4:	60 e0       	ldi	r22, 0x00	; 0
     2b6:	70 e0       	ldi	r23, 0x00	; 0
     2b8:	cb 01       	movw	r24, r22
     2ba:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
			AFTER(MSEC(700), g, _GUI_blinkLoop, arg+1);
     2be:	65 01       	movw	r12, r10
     2c0:	0f 2e       	mov	r0, r31
     2c2:	f1 e1       	ldi	r31, 0x11	; 17
     2c4:	ef 2e       	mov	r14, r31
     2c6:	f1 e0       	ldi	r31, 0x01	; 1
     2c8:	ff 2e       	mov	r15, r31
     2ca:	f0 2d       	mov	r31, r0
     2cc:	20 e0       	ldi	r18, 0x00	; 0
     2ce:	30 e0       	ldi	r19, 0x00	; 0
     2d0:	a9 01       	movw	r20, r18
     2d2:	63 e7       	ldi	r22, 0x73	; 115
     2d4:	75 e5       	ldi	r23, 0x55	; 85
     2d6:	80 e0       	ldi	r24, 0x00	; 0
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
		}
	}
	return 0;
}
     2de:	80 e0       	ldi	r24, 0x00	; 0
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	df 91       	pop	r29
     2e4:	cf 91       	pop	r28
     2e6:	1f 91       	pop	r17
     2e8:	0f 91       	pop	r16
     2ea:	ff 90       	pop	r15
     2ec:	ef 90       	pop	r14
     2ee:	df 90       	pop	r13
     2f0:	cf 90       	pop	r12
     2f2:	bf 90       	pop	r11
     2f4:	af 90       	pop	r10
     2f6:	08 95       	ret

000002f8 <_GUI_getAltFreq>:

int _GUI_getAltFreq(GUI *g, int arg){
	return g->altFreq;
}
     2f8:	fc 01       	movw	r30, r24
     2fa:	81 89       	ldd	r24, Z+17	; 0x11
     2fc:	92 89       	ldd	r25, Z+18	; 0x12
     2fe:	08 95       	ret

00000300 <_GUI_setAltFreq>:

int _GUI_setAltFreq(GUI *g, int arg){
	g->altFreq = arg;
     300:	fc 01       	movw	r30, r24
     302:	72 8b       	std	Z+18, r23	; 0x12
     304:	61 8b       	std	Z+17, r22	; 0x11
	return 0;
     306:	80 e0       	ldi	r24, 0x00	; 0
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	08 95       	ret

0000030c <_KEY_allowEnter>:
	}
	return 0;
}

int _KEY_allowEnter(KEY *k, int arg){
	k->enterEn = 1;
     30c:	21 e0       	ldi	r18, 0x01	; 1
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	fc 01       	movw	r30, r24
     312:	35 87       	std	Z+13, r19	; 0x0d
     314:	24 87       	std	Z+12, r18	; 0x0c
	return 0;
}
     316:	80 e0       	ldi	r24, 0x00	; 0
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	08 95       	ret

0000031c <_KEY_loop>:
	}
	GUI_print(guin);
	return 0;
}

int _KEY_loop(KEY *k, int arg){
     31c:	8f 92       	push	r8
     31e:	9f 92       	push	r9
     320:	af 92       	push	r10
     322:	bf 92       	push	r11
     324:	cf 92       	push	r12
     326:	df 92       	push	r13
     328:	ef 92       	push	r14
     32a:	ff 92       	push	r15
     32c:	0f 93       	push	r16
     32e:	1f 93       	push	r17
     330:	cf 93       	push	r28
     332:	df 93       	push	r29
	if(k->keyCount == arg){
     334:	fc 01       	movw	r30, r24
     336:	c6 80       	ldd	r12, Z+6	; 0x06
     338:	d7 80       	ldd	r13, Z+7	; 0x07
     33a:	c6 16       	cp	r12, r22
     33c:	d7 06       	cpc	r13, r23
     33e:	09 f0       	breq	.+2      	; 0x342 <_KEY_loop+0x26>
     340:	6b c0       	rjmp	.+214    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     342:	ec 01       	movw	r28, r24
		arg++;
     344:	56 01       	movw	r10, r12
     346:	ff ef       	ldi	r31, 0xFF	; 255
     348:	af 1a       	sub	r10, r31
     34a:	bf 0a       	sbc	r11, r31
		k->keyCount = arg;
     34c:	bf 82       	std	Y+7, r11	; 0x07
     34e:	ae 82       	std	Y+6, r10	; 0x06
		GUI *guin = (k->guiSel);
     350:	8c 80       	ldd	r8, Y+4	; 0x04
     352:	9d 80       	ldd	r9, Y+5	; 0x05
		PWM *pwmn = &(guin->p);
     354:	84 01       	movw	r16, r8
     356:	0c 5f       	subi	r16, 0xFC	; 252
     358:	1f 4f       	sbci	r17, 0xFF	; 255
		int tfreq = PWM_getFreq(pwmn);
     35a:	40 e0       	ldi	r20, 0x00	; 0
     35c:	50 e0       	ldi	r21, 0x00	; 0
     35e:	63 ee       	ldi	r22, 0xE3	; 227
     360:	74 e0       	ldi	r23, 0x04	; 4
     362:	c8 01       	movw	r24, r16
     364:	0e 94 f8 0f 	call	0x1ff0	; 0x1ff0 <sync>
		if((tfreq == -1) || (k->dir == 0)){
     368:	8f 3f       	cpi	r24, 0xFF	; 255
     36a:	2f ef       	ldi	r18, 0xFF	; 255
     36c:	92 07       	cpc	r25, r18
     36e:	29 f0       	breq	.+10     	; 0x37a <_KEY_loop+0x5e>
     370:	2a 85       	ldd	r18, Y+10	; 0x0a
     372:	3b 85       	ldd	r19, Y+11	; 0x0b
     374:	21 15       	cp	r18, r1
     376:	31 05       	cpc	r19, r1
     378:	29 f4       	brne	.+10     	; 0x384 <_KEY_loop+0x68>
			k->dir = 0;
     37a:	1b 86       	std	Y+11, r1	; 0x0b
     37c:	1a 86       	std	Y+10, r1	; 0x0a
			k->keyCount = 0;
     37e:	1f 82       	std	Y+7, r1	; 0x07
     380:	1e 82       	std	Y+6, r1	; 0x06
     382:	4c c0       	rjmp	.+152    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
			return;
		}
		tfreq+= k->dir;
     384:	6c 01       	movw	r12, r24
     386:	c2 0e       	add	r12, r18
     388:	d3 1e       	adc	r13, r19
		PWM_setFreq(pwmn,tfreq);
     38a:	0f 2e       	mov	r0, r31
     38c:	f7 ee       	ldi	r31, 0xE7	; 231
     38e:	ef 2e       	mov	r14, r31
     390:	f4 e0       	ldi	r31, 0x04	; 4
     392:	ff 2e       	mov	r15, r31
     394:	f0 2d       	mov	r31, r0
     396:	20 e0       	ldi	r18, 0x00	; 0
     398:	30 e0       	ldi	r19, 0x00	; 0
     39a:	a9 01       	movw	r20, r18
     39c:	60 e0       	ldi	r22, 0x00	; 0
     39e:	70 e0       	ldi	r23, 0x00	; 0
     3a0:	cb 01       	movw	r24, r22
     3a2:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
		GUI_print(guin);
     3a6:	c1 2c       	mov	r12, r1
     3a8:	d1 2c       	mov	r13, r1
     3aa:	0f 2e       	mov	r0, r31
     3ac:	f2 ee       	ldi	r31, 0xE2	; 226
     3ae:	ef 2e       	mov	r14, r31
     3b0:	f0 e0       	ldi	r31, 0x00	; 0
     3b2:	ff 2e       	mov	r15, r31
     3b4:	f0 2d       	mov	r31, r0
     3b6:	84 01       	movw	r16, r8
     3b8:	20 e0       	ldi	r18, 0x00	; 0
     3ba:	30 e0       	ldi	r19, 0x00	; 0
     3bc:	a9 01       	movw	r20, r18
     3be:	60 e0       	ldi	r22, 0x00	; 0
     3c0:	70 e0       	ldi	r23, 0x00	; 0
     3c2:	cb 01       	movw	r24, r22
     3c4:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
		AFTER(MSEC(800+(200*arg)), k, _KEY_loop, arg);
     3c8:	28 ea       	ldi	r18, 0xA8	; 168
     3ca:	31 e6       	ldi	r19, 0x61	; 97
     3cc:	d5 01       	movw	r26, r10
     3ce:	0e 94 65 11 	call	0x22ca	; 0x22ca <__usmulhisi3>
     3d2:	ab 01       	movw	r20, r22
     3d4:	bc 01       	movw	r22, r24
     3d6:	40 56       	subi	r20, 0x60	; 96
     3d8:	59 47       	sbci	r21, 0x79	; 121
     3da:	6e 4f       	sbci	r22, 0xFE	; 254
     3dc:	7f 4f       	sbci	r23, 0xFF	; 255
     3de:	db 01       	movw	r26, r22
     3e0:	ca 01       	movw	r24, r20
     3e2:	1a f4       	brpl	.+6      	; 0x3ea <_KEY_loop+0xce>
     3e4:	03 96       	adiw	r24, 0x03	; 3
     3e6:	a1 1d       	adc	r26, r1
     3e8:	b1 1d       	adc	r27, r1
     3ea:	bc 01       	movw	r22, r24
     3ec:	cd 01       	movw	r24, r26
     3ee:	95 95       	asr	r25
     3f0:	87 95       	ror	r24
     3f2:	77 95       	ror	r23
     3f4:	67 95       	ror	r22
     3f6:	95 95       	asr	r25
     3f8:	87 95       	ror	r24
     3fa:	77 95       	ror	r23
     3fc:	67 95       	ror	r22
     3fe:	65 01       	movw	r12, r10
     400:	0f 2e       	mov	r0, r31
     402:	fe e8       	ldi	r31, 0x8E	; 142
     404:	ef 2e       	mov	r14, r31
     406:	f1 e0       	ldi	r31, 0x01	; 1
     408:	ff 2e       	mov	r15, r31
     40a:	f0 2d       	mov	r31, r0
     40c:	8e 01       	movw	r16, r28
     40e:	20 e0       	ldi	r18, 0x00	; 0
     410:	30 e0       	ldi	r19, 0x00	; 0
     412:	a9 01       	movw	r20, r18
     414:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
	}
	return 0;
     418:	80 e0       	ldi	r24, 0x00	; 0
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	df 91       	pop	r29
     41e:	cf 91       	pop	r28
     420:	1f 91       	pop	r17
     422:	0f 91       	pop	r16
     424:	ff 90       	pop	r15
     426:	ef 90       	pop	r14
     428:	df 90       	pop	r13
     42a:	cf 90       	pop	r12
     42c:	bf 90       	pop	r11
     42e:	af 90       	pop	r10
     430:	9f 90       	pop	r9
     432:	8f 90       	pop	r8
     434:	08 95       	ret

00000436 <KEY_pwmSel>:
 *  Author: Daniel
 */ 

#include "KEY.h"

int KEY_pwmSel(KEY *k, int arg){
     436:	cf 92       	push	r12
     438:	df 92       	push	r13
     43a:	ef 92       	push	r14
     43c:	ff 92       	push	r15
     43e:	0f 93       	push	r16
     440:	1f 93       	push	r17
     442:	cf 93       	push	r28
     444:	df 93       	push	r29
     446:	ec 01       	movw	r28, r24
	if(!(PINE & (1<<PINE3))){
     448:	63 99       	sbic	0x0c, 3	; 12
     44a:	4f c0       	rjmp	.+158    	; 0x4ea <KEY_pwmSel+0xb4>
		//RIGHT
		if(k->guiSel == k->GUI2){
     44c:	ec 81       	ldd	r30, Y+4	; 0x04
     44e:	fd 81       	ldd	r31, Y+5	; 0x05
     450:	88 89       	ldd	r24, Y+16	; 0x10
     452:	99 89       	ldd	r25, Y+17	; 0x11
     454:	e8 17       	cp	r30, r24
     456:	f9 07       	cpc	r31, r25
     458:	c1 f4       	brne	.+48     	; 0x48a <KEY_pwmSel+0x54>
			GUI_stopBlink(k->guiSel);
     45a:	14 8a       	std	Z+20, r1	; 0x14
     45c:	13 8a       	std	Z+19, r1	; 0x13
     45e:	0c 81       	ldd	r16, Y+4	; 0x04
     460:	1d 81       	ldd	r17, Y+5	; 0x05
     462:	cc 24       	eor	r12, r12
     464:	c3 94       	inc	r12
     466:	d1 2c       	mov	r13, r1
     468:	0f 2e       	mov	r0, r31
     46a:	f2 ee       	ldi	r31, 0xE2	; 226
     46c:	ef 2e       	mov	r14, r31
     46e:	f0 e0       	ldi	r31, 0x00	; 0
     470:	ff 2e       	mov	r15, r31
     472:	f0 2d       	mov	r31, r0
     474:	20 e0       	ldi	r18, 0x00	; 0
     476:	30 e0       	ldi	r19, 0x00	; 0
     478:	a9 01       	movw	r20, r18
     47a:	60 e0       	ldi	r22, 0x00	; 0
     47c:	70 e0       	ldi	r23, 0x00	; 0
     47e:	cb 01       	movw	r24, r22
     480:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
			k->guiSel = NULL;
     484:	1d 82       	std	Y+5, r1	; 0x05
     486:	1c 82       	std	Y+4, r1	; 0x04
     488:	80 c0       	rjmp	.+256    	; 0x58a <__stack+0x8b>
		}else{
			k->guiSel = k->GUI2;
     48a:	9d 83       	std	Y+5, r25	; 0x05
     48c:	8c 83       	std	Y+4, r24	; 0x04
			GUI_stopBlink(k->GUI1);
     48e:	ee 85       	ldd	r30, Y+14	; 0x0e
     490:	ff 85       	ldd	r31, Y+15	; 0x0f
     492:	14 8a       	std	Z+20, r1	; 0x14
     494:	13 8a       	std	Z+19, r1	; 0x13
     496:	0e 85       	ldd	r16, Y+14	; 0x0e
     498:	1f 85       	ldd	r17, Y+15	; 0x0f
     49a:	cc 24       	eor	r12, r12
     49c:	c3 94       	inc	r12
     49e:	d1 2c       	mov	r13, r1
     4a0:	0f 2e       	mov	r0, r31
     4a2:	f2 ee       	ldi	r31, 0xE2	; 226
     4a4:	ef 2e       	mov	r14, r31
     4a6:	f0 e0       	ldi	r31, 0x00	; 0
     4a8:	ff 2e       	mov	r15, r31
     4aa:	f0 2d       	mov	r31, r0
     4ac:	20 e0       	ldi	r18, 0x00	; 0
     4ae:	30 e0       	ldi	r19, 0x00	; 0
     4b0:	a9 01       	movw	r20, r18
     4b2:	60 e0       	ldi	r22, 0x00	; 0
     4b4:	70 e0       	ldi	r23, 0x00	; 0
     4b6:	cb 01       	movw	r24, r22
     4b8:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
			GUI_startBlink(k->guiSel);
     4bc:	ec 81       	ldd	r30, Y+4	; 0x04
     4be:	fd 81       	ldd	r31, Y+5	; 0x05
     4c0:	14 8a       	std	Z+20, r1	; 0x14
     4c2:	13 8a       	std	Z+19, r1	; 0x13
     4c4:	0c 81       	ldd	r16, Y+4	; 0x04
     4c6:	1d 81       	ldd	r17, Y+5	; 0x05
     4c8:	c1 2c       	mov	r12, r1
     4ca:	d1 2c       	mov	r13, r1
     4cc:	0f 2e       	mov	r0, r31
     4ce:	f1 e1       	ldi	r31, 0x11	; 17
     4d0:	ef 2e       	mov	r14, r31
     4d2:	f1 e0       	ldi	r31, 0x01	; 1
     4d4:	ff 2e       	mov	r15, r31
     4d6:	f0 2d       	mov	r31, r0
     4d8:	20 e0       	ldi	r18, 0x00	; 0
     4da:	30 e0       	ldi	r19, 0x00	; 0
     4dc:	a9 01       	movw	r20, r18
     4de:	60 e0       	ldi	r22, 0x00	; 0
     4e0:	70 e0       	ldi	r23, 0x00	; 0
     4e2:	cb 01       	movw	r24, r22
     4e4:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
     4e8:	50 c0       	rjmp	.+160    	; 0x58a <__stack+0x8b>
		}
	}else if(!(PINE & (1<<PINE2))){
     4ea:	62 99       	sbic	0x0c, 2	; 12
     4ec:	4e c0       	rjmp	.+156    	; 0x58a <__stack+0x8b>
		//LEFT
		if(k->guiSel == k->GUI1){
     4ee:	ec 81       	ldd	r30, Y+4	; 0x04
     4f0:	fd 81       	ldd	r31, Y+5	; 0x05
     4f2:	8e 85       	ldd	r24, Y+14	; 0x0e
     4f4:	9f 85       	ldd	r25, Y+15	; 0x0f
     4f6:	e8 17       	cp	r30, r24
     4f8:	f9 07       	cpc	r31, r25
     4fa:	c1 f4       	brne	.+48     	; 0x52c <__stack+0x2d>
			GUI_stopBlink(k->guiSel);
     4fc:	14 8a       	std	Z+20, r1	; 0x14
     4fe:	13 8a       	std	Z+19, r1	; 0x13
     500:	0c 81       	ldd	r16, Y+4	; 0x04
     502:	1d 81       	ldd	r17, Y+5	; 0x05
     504:	cc 24       	eor	r12, r12
     506:	c3 94       	inc	r12
     508:	d1 2c       	mov	r13, r1
     50a:	0f 2e       	mov	r0, r31
     50c:	f2 ee       	ldi	r31, 0xE2	; 226
     50e:	ef 2e       	mov	r14, r31
     510:	f0 e0       	ldi	r31, 0x00	; 0
     512:	ff 2e       	mov	r15, r31
     514:	f0 2d       	mov	r31, r0
     516:	20 e0       	ldi	r18, 0x00	; 0
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	a9 01       	movw	r20, r18
     51c:	60 e0       	ldi	r22, 0x00	; 0
     51e:	70 e0       	ldi	r23, 0x00	; 0
     520:	cb 01       	movw	r24, r22
     522:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
			k->guiSel = NULL;
     526:	1d 82       	std	Y+5, r1	; 0x05
     528:	1c 82       	std	Y+4, r1	; 0x04
     52a:	2f c0       	rjmp	.+94     	; 0x58a <__stack+0x8b>
		}else{
			k->guiSel = k->GUI1;
     52c:	9d 83       	std	Y+5, r25	; 0x05
     52e:	8c 83       	std	Y+4, r24	; 0x04
			GUI_stopBlink(k->GUI2);
     530:	e8 89       	ldd	r30, Y+16	; 0x10
     532:	f9 89       	ldd	r31, Y+17	; 0x11
     534:	14 8a       	std	Z+20, r1	; 0x14
     536:	13 8a       	std	Z+19, r1	; 0x13
     538:	08 89       	ldd	r16, Y+16	; 0x10
     53a:	19 89       	ldd	r17, Y+17	; 0x11
     53c:	cc 24       	eor	r12, r12
     53e:	c3 94       	inc	r12
     540:	d1 2c       	mov	r13, r1
     542:	0f 2e       	mov	r0, r31
     544:	f2 ee       	ldi	r31, 0xE2	; 226
     546:	ef 2e       	mov	r14, r31
     548:	f0 e0       	ldi	r31, 0x00	; 0
     54a:	ff 2e       	mov	r15, r31
     54c:	f0 2d       	mov	r31, r0
     54e:	20 e0       	ldi	r18, 0x00	; 0
     550:	30 e0       	ldi	r19, 0x00	; 0
     552:	a9 01       	movw	r20, r18
     554:	60 e0       	ldi	r22, 0x00	; 0
     556:	70 e0       	ldi	r23, 0x00	; 0
     558:	cb 01       	movw	r24, r22
     55a:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
			GUI_startBlink(k->guiSel);
     55e:	ec 81       	ldd	r30, Y+4	; 0x04
     560:	fd 81       	ldd	r31, Y+5	; 0x05
     562:	14 8a       	std	Z+20, r1	; 0x14
     564:	13 8a       	std	Z+19, r1	; 0x13
     566:	0c 81       	ldd	r16, Y+4	; 0x04
     568:	1d 81       	ldd	r17, Y+5	; 0x05
     56a:	c1 2c       	mov	r12, r1
     56c:	d1 2c       	mov	r13, r1
     56e:	0f 2e       	mov	r0, r31
     570:	f1 e1       	ldi	r31, 0x11	; 17
     572:	ef 2e       	mov	r14, r31
     574:	f1 e0       	ldi	r31, 0x01	; 1
     576:	ff 2e       	mov	r15, r31
     578:	f0 2d       	mov	r31, r0
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	a9 01       	movw	r20, r18
     580:	60 e0       	ldi	r22, 0x00	; 0
     582:	70 e0       	ldi	r23, 0x00	; 0
     584:	cb 01       	movw	r24, r22
     586:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
		}
	}
	return 0;
}
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	df 91       	pop	r29
     590:	cf 91       	pop	r28
     592:	1f 91       	pop	r17
     594:	0f 91       	pop	r16
     596:	ff 90       	pop	r15
     598:	ef 90       	pop	r14
     59a:	df 90       	pop	r13
     59c:	cf 90       	pop	r12
     59e:	08 95       	ret

000005a0 <KEY_pwmInc>:
int _KEY_allowEnter(KEY *k, int arg){
	k->enterEn = 1;
	return 0;
}

int KEY_pwmInc(KEY *k, int arg){
     5a0:	8f 92       	push	r8
     5a2:	9f 92       	push	r9
     5a4:	af 92       	push	r10
     5a6:	bf 92       	push	r11
     5a8:	cf 92       	push	r12
     5aa:	df 92       	push	r13
     5ac:	ef 92       	push	r14
     5ae:	ff 92       	push	r15
     5b0:	0f 93       	push	r16
     5b2:	1f 93       	push	r17
     5b4:	cf 93       	push	r28
     5b6:	df 93       	push	r29
	if(k->guiSel == NULL)
     5b8:	fc 01       	movw	r30, r24
     5ba:	a4 80       	ldd	r10, Z+4	; 0x04
     5bc:	b5 80       	ldd	r11, Z+5	; 0x05
     5be:	a1 14       	cp	r10, r1
     5c0:	b1 04       	cpc	r11, r1
     5c2:	09 f4       	brne	.+2      	; 0x5c6 <KEY_pwmInc+0x26>
     5c4:	fc c0       	rjmp	.+504    	; 0x7be <KEY_pwmInc+0x21e>
     5c6:	ec 01       	movw	r28, r24
	return;
	GUI *guin = (k->guiSel);
	PWM *pwmn = &(guin->p);
     5c8:	45 01       	movw	r8, r10
     5ca:	f4 e0       	ldi	r31, 0x04	; 4
     5cc:	8f 0e       	add	r8, r31
     5ce:	91 1c       	adc	r9, r1
	if(!(PINB & (1<<PINB7))){
     5d0:	1f 99       	sbic	0x03, 7	; 3
     5d2:	33 c0       	rjmp	.+102    	; 0x63a <KEY_pwmInc+0x9a>
		KEY_scrollDown(k);
     5d4:	cc 24       	eor	r12, r12
     5d6:	ca 94       	dec	r12
     5d8:	dc 2c       	mov	r13, r12
     5da:	0f 2e       	mov	r0, r31
     5dc:	f9 ec       	ldi	r31, 0xC9	; 201
     5de:	ef 2e       	mov	r14, r31
     5e0:	f4 e0       	ldi	r31, 0x04	; 4
     5e2:	ff 2e       	mov	r15, r31
     5e4:	f0 2d       	mov	r31, r0
     5e6:	84 01       	movw	r16, r8
     5e8:	20 e0       	ldi	r18, 0x00	; 0
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	a9 01       	movw	r20, r18
     5ee:	60 e0       	ldi	r22, 0x00	; 0
     5f0:	70 e0       	ldi	r23, 0x00	; 0
     5f2:	cb 01       	movw	r24, r22
     5f4:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
     5f8:	8f ef       	ldi	r24, 0xFF	; 255
     5fa:	9f ef       	ldi	r25, 0xFF	; 255
     5fc:	9b 87       	std	Y+11, r25	; 0x0b
     5fe:	8a 87       	std	Y+10, r24	; 0x0a
     600:	8e 81       	ldd	r24, Y+6	; 0x06
     602:	9f 81       	ldd	r25, Y+7	; 0x07
     604:	89 2b       	or	r24, r25
     606:	09 f0       	breq	.+2      	; 0x60a <KEY_pwmInc+0x6a>
     608:	c6 c0       	rjmp	.+396    	; 0x796 <KEY_pwmInc+0x1f6>
     60a:	81 e0       	ldi	r24, 0x01	; 1
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	9f 83       	std	Y+7, r25	; 0x07
     610:	8e 83       	std	Y+6, r24	; 0x06
     612:	cc 24       	eor	r12, r12
     614:	c3 94       	inc	r12
     616:	d1 2c       	mov	r13, r1
     618:	0f 2e       	mov	r0, r31
     61a:	fe e8       	ldi	r31, 0x8E	; 142
     61c:	ef 2e       	mov	r14, r31
     61e:	f1 e0       	ldi	r31, 0x01	; 1
     620:	ff 2e       	mov	r15, r31
     622:	f0 2d       	mov	r31, r0
     624:	8e 01       	movw	r16, r28
     626:	20 e0       	ldi	r18, 0x00	; 0
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	a9 01       	movw	r20, r18
     62c:	62 e1       	ldi	r22, 0x12	; 18
     62e:	7a e7       	ldi	r23, 0x7A	; 122
     630:	80 e0       	ldi	r24, 0x00	; 0
     632:	90 e0       	ldi	r25, 0x00	; 0
     634:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
     638:	ae c0       	rjmp	.+348    	; 0x796 <KEY_pwmInc+0x1f6>
		}else if(!(PINB & (1<<PINB6))){
     63a:	1e 99       	sbic	0x03, 6	; 3
     63c:	30 c0       	rjmp	.+96     	; 0x69e <KEY_pwmInc+0xfe>
		KEY_scrollUp(k);
     63e:	cc 24       	eor	r12, r12
     640:	c3 94       	inc	r12
     642:	d1 2c       	mov	r13, r1
     644:	0f 2e       	mov	r0, r31
     646:	f9 ec       	ldi	r31, 0xC9	; 201
     648:	ef 2e       	mov	r14, r31
     64a:	f4 e0       	ldi	r31, 0x04	; 4
     64c:	ff 2e       	mov	r15, r31
     64e:	f0 2d       	mov	r31, r0
     650:	84 01       	movw	r16, r8
     652:	20 e0       	ldi	r18, 0x00	; 0
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	a9 01       	movw	r20, r18
     658:	60 e0       	ldi	r22, 0x00	; 0
     65a:	70 e0       	ldi	r23, 0x00	; 0
     65c:	cb 01       	movw	r24, r22
     65e:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
     662:	81 e0       	ldi	r24, 0x01	; 1
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	9b 87       	std	Y+11, r25	; 0x0b
     668:	8a 87       	std	Y+10, r24	; 0x0a
     66a:	8e 81       	ldd	r24, Y+6	; 0x06
     66c:	9f 81       	ldd	r25, Y+7	; 0x07
     66e:	89 2b       	or	r24, r25
     670:	09 f0       	breq	.+2      	; 0x674 <KEY_pwmInc+0xd4>
     672:	91 c0       	rjmp	.+290    	; 0x796 <KEY_pwmInc+0x1f6>
     674:	81 e0       	ldi	r24, 0x01	; 1
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	9f 83       	std	Y+7, r25	; 0x07
     67a:	8e 83       	std	Y+6, r24	; 0x06
     67c:	0f 2e       	mov	r0, r31
     67e:	fe e8       	ldi	r31, 0x8E	; 142
     680:	ef 2e       	mov	r14, r31
     682:	f1 e0       	ldi	r31, 0x01	; 1
     684:	ff 2e       	mov	r15, r31
     686:	f0 2d       	mov	r31, r0
     688:	8e 01       	movw	r16, r28
     68a:	20 e0       	ldi	r18, 0x00	; 0
     68c:	30 e0       	ldi	r19, 0x00	; 0
     68e:	a9 01       	movw	r20, r18
     690:	62 e1       	ldi	r22, 0x12	; 18
     692:	7a e7       	ldi	r23, 0x7A	; 122
     694:	80 e0       	ldi	r24, 0x00	; 0
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
     69c:	7c c0       	rjmp	.+248    	; 0x796 <KEY_pwmInc+0x1f6>
		}else if(!(PINB & (1<<PINB4))){
     69e:	1c 99       	sbic	0x03, 4	; 3
     6a0:	74 c0       	rjmp	.+232    	; 0x78a <KEY_pwmInc+0x1ea>
		//ENTER
		if(!k->enterEn)
     6a2:	8c 85       	ldd	r24, Y+12	; 0x0c
     6a4:	9d 85       	ldd	r25, Y+13	; 0x0d
     6a6:	89 2b       	or	r24, r25
     6a8:	09 f4       	brne	.+2      	; 0x6ac <KEY_pwmInc+0x10c>
     6aa:	89 c0       	rjmp	.+274    	; 0x7be <KEY_pwmInc+0x21e>
		return;
		k->enterEn = 0;
     6ac:	1d 86       	std	Y+13, r1	; 0x0d
     6ae:	1c 86       	std	Y+12, r1	; 0x0c
		AFTER(MSEC(500), k, _KEY_allowEnter, 0);
     6b0:	c1 2c       	mov	r12, r1
     6b2:	d1 2c       	mov	r13, r1
     6b4:	0f 2e       	mov	r0, r31
     6b6:	f6 e8       	ldi	r31, 0x86	; 134
     6b8:	ef 2e       	mov	r14, r31
     6ba:	f1 e0       	ldi	r31, 0x01	; 1
     6bc:	ff 2e       	mov	r15, r31
     6be:	f0 2d       	mov	r31, r0
     6c0:	8e 01       	movw	r16, r28
     6c2:	20 e0       	ldi	r18, 0x00	; 0
     6c4:	30 e0       	ldi	r19, 0x00	; 0
     6c6:	a9 01       	movw	r20, r18
     6c8:	69 e0       	ldi	r22, 0x09	; 9
     6ca:	7d e3       	ldi	r23, 0x3D	; 61
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
		if(PWM_getFreq(pwmn) == 0){
     6d4:	40 e0       	ldi	r20, 0x00	; 0
     6d6:	50 e0       	ldi	r21, 0x00	; 0
     6d8:	63 ee       	ldi	r22, 0xE3	; 227
     6da:	74 e0       	ldi	r23, 0x04	; 4
     6dc:	c4 01       	movw	r24, r8
     6de:	0e 94 f8 0f 	call	0x1ff0	; 0x1ff0 <sync>
     6e2:	89 2b       	or	r24, r25
     6e4:	49 f5       	brne	.+82     	; 0x738 <KEY_pwmInc+0x198>
			PWM_setFreq(pwmn, GUI_getAltFreq(guin));
     6e6:	40 e0       	ldi	r20, 0x00	; 0
     6e8:	50 e0       	ldi	r21, 0x00	; 0
     6ea:	6c e7       	ldi	r22, 0x7C	; 124
     6ec:	71 e0       	ldi	r23, 0x01	; 1
     6ee:	c5 01       	movw	r24, r10
     6f0:	0e 94 f8 0f 	call	0x1ff0	; 0x1ff0 <sync>
     6f4:	6c 01       	movw	r12, r24
     6f6:	0f 2e       	mov	r0, r31
     6f8:	f7 ee       	ldi	r31, 0xE7	; 231
     6fa:	ef 2e       	mov	r14, r31
     6fc:	f4 e0       	ldi	r31, 0x04	; 4
     6fe:	ff 2e       	mov	r15, r31
     700:	f0 2d       	mov	r31, r0
     702:	84 01       	movw	r16, r8
     704:	20 e0       	ldi	r18, 0x00	; 0
     706:	30 e0       	ldi	r19, 0x00	; 0
     708:	a9 01       	movw	r20, r18
     70a:	60 e0       	ldi	r22, 0x00	; 0
     70c:	70 e0       	ldi	r23, 0x00	; 0
     70e:	cb 01       	movw	r24, r22
     710:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
			GUI_setAltFreq(guin, 0);
     714:	c1 2c       	mov	r12, r1
     716:	d1 2c       	mov	r13, r1
     718:	0f 2e       	mov	r0, r31
     71a:	f0 e8       	ldi	r31, 0x80	; 128
     71c:	ef 2e       	mov	r14, r31
     71e:	f1 e0       	ldi	r31, 0x01	; 1
     720:	ff 2e       	mov	r15, r31
     722:	f0 2d       	mov	r31, r0
     724:	85 01       	movw	r16, r10
     726:	20 e0       	ldi	r18, 0x00	; 0
     728:	30 e0       	ldi	r19, 0x00	; 0
     72a:	a9 01       	movw	r20, r18
     72c:	60 e0       	ldi	r22, 0x00	; 0
     72e:	70 e0       	ldi	r23, 0x00	; 0
     730:	cb 01       	movw	r24, r22
     732:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
     736:	2f c0       	rjmp	.+94     	; 0x796 <KEY_pwmInc+0x1f6>
			//pwmn->freq = guin->altFreq;
			//guin->altFreq = 0;
			}else{
			GUI_setAltFreq(guin, PWM_getFreq(pwmn));
     738:	40 e0       	ldi	r20, 0x00	; 0
     73a:	50 e0       	ldi	r21, 0x00	; 0
     73c:	63 ee       	ldi	r22, 0xE3	; 227
     73e:	74 e0       	ldi	r23, 0x04	; 4
     740:	c4 01       	movw	r24, r8
     742:	0e 94 f8 0f 	call	0x1ff0	; 0x1ff0 <sync>
     746:	6c 01       	movw	r12, r24
     748:	0f 2e       	mov	r0, r31
     74a:	f0 e8       	ldi	r31, 0x80	; 128
     74c:	ef 2e       	mov	r14, r31
     74e:	f1 e0       	ldi	r31, 0x01	; 1
     750:	ff 2e       	mov	r15, r31
     752:	f0 2d       	mov	r31, r0
     754:	85 01       	movw	r16, r10
     756:	20 e0       	ldi	r18, 0x00	; 0
     758:	30 e0       	ldi	r19, 0x00	; 0
     75a:	a9 01       	movw	r20, r18
     75c:	60 e0       	ldi	r22, 0x00	; 0
     75e:	70 e0       	ldi	r23, 0x00	; 0
     760:	cb 01       	movw	r24, r22
     762:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
			PWM_setFreq(pwmn, 0);
     766:	c1 2c       	mov	r12, r1
     768:	d1 2c       	mov	r13, r1
     76a:	0f 2e       	mov	r0, r31
     76c:	f7 ee       	ldi	r31, 0xE7	; 231
     76e:	ef 2e       	mov	r14, r31
     770:	f4 e0       	ldi	r31, 0x04	; 4
     772:	ff 2e       	mov	r15, r31
     774:	f0 2d       	mov	r31, r0
     776:	84 01       	movw	r16, r8
     778:	20 e0       	ldi	r18, 0x00	; 0
     77a:	30 e0       	ldi	r19, 0x00	; 0
     77c:	a9 01       	movw	r20, r18
     77e:	60 e0       	ldi	r22, 0x00	; 0
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	cb 01       	movw	r24, r22
     784:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
     788:	06 c0       	rjmp	.+12     	; 0x796 <KEY_pwmInc+0x1f6>
			//guin->altFreq = pwmn->freq;
			//pwmn->freq = 0;
		}
		
		}else if((PINB & (1<<PINB7)) && (PINB & (1<<PINB6))){
     78a:	1f 9b       	sbis	0x03, 7	; 3
     78c:	04 c0       	rjmp	.+8      	; 0x796 <KEY_pwmInc+0x1f6>
     78e:	1e 9b       	sbis	0x03, 6	; 3
     790:	02 c0       	rjmp	.+4      	; 0x796 <KEY_pwmInc+0x1f6>
		KEY_scrollStop(k);
     792:	1b 86       	std	Y+11, r1	; 0x0b
     794:	1a 86       	std	Y+10, r1	; 0x0a
	}
	GUI_print(guin);
     796:	c1 2c       	mov	r12, r1
     798:	d1 2c       	mov	r13, r1
     79a:	0f 2e       	mov	r0, r31
     79c:	f2 ee       	ldi	r31, 0xE2	; 226
     79e:	ef 2e       	mov	r14, r31
     7a0:	f0 e0       	ldi	r31, 0x00	; 0
     7a2:	ff 2e       	mov	r15, r31
     7a4:	f0 2d       	mov	r31, r0
     7a6:	85 01       	movw	r16, r10
     7a8:	20 e0       	ldi	r18, 0x00	; 0
     7aa:	30 e0       	ldi	r19, 0x00	; 0
     7ac:	a9 01       	movw	r20, r18
     7ae:	60 e0       	ldi	r22, 0x00	; 0
     7b0:	70 e0       	ldi	r23, 0x00	; 0
     7b2:	cb 01       	movw	r24, r22
     7b4:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
	return 0;
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	00 c0       	rjmp	.+0      	; 0x7be <KEY_pwmInc+0x21e>
}
     7be:	df 91       	pop	r29
     7c0:	cf 91       	pop	r28
     7c2:	1f 91       	pop	r17
     7c4:	0f 91       	pop	r16
     7c6:	ff 90       	pop	r15
     7c8:	ef 90       	pop	r14
     7ca:	df 90       	pop	r13
     7cc:	cf 90       	pop	r12
     7ce:	bf 90       	pop	r11
     7d0:	af 90       	pop	r10
     7d2:	9f 90       	pop	r9
     7d4:	8f 90       	pop	r8
     7d6:	08 95       	ret

000007d8 <launch>:

static GUI GUI1 = init_GUI(init_PWM(&PORTE, PINE4), 0);
static GUI GUI2 = init_GUI(init_PWM(&PORTE, PINE6), 4);
static KEY KEYN = init_KEY(&GUI1,&GUI2);

void launch(Object *o, int arg){
     7d8:	cf 92       	push	r12
     7da:	df 92       	push	r13
     7dc:	ef 92       	push	r14
     7de:	ff 92       	push	r15
     7e0:	0f 93       	push	r16
     7e2:	1f 93       	push	r17
	GUI_init(&GUI1);
     7e4:	cc 24       	eor	r12, r12
     7e6:	c3 94       	inc	r12
     7e8:	d1 2c       	mov	r13, r1
     7ea:	0f 2e       	mov	r0, r31
     7ec:	f2 ee       	ldi	r31, 0xE2	; 226
     7ee:	ef 2e       	mov	r14, r31
     7f0:	f0 e0       	ldi	r31, 0x00	; 0
     7f2:	ff 2e       	mov	r15, r31
     7f4:	f0 2d       	mov	r31, r0
     7f6:	07 e2       	ldi	r16, 0x27	; 39
     7f8:	11 e0       	ldi	r17, 0x01	; 1
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	30 e0       	ldi	r19, 0x00	; 0
     7fe:	a9 01       	movw	r20, r18
     800:	60 e0       	ldi	r22, 0x00	; 0
     802:	70 e0       	ldi	r23, 0x00	; 0
     804:	cb 01       	movw	r24, r22
     806:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
     80a:	c1 2c       	mov	r12, r1
     80c:	d1 2c       	mov	r13, r1
     80e:	0f 2e       	mov	r0, r31
     810:	fd e5       	ldi	r31, 0x5D	; 93
     812:	ef 2e       	mov	r14, r31
     814:	f4 e0       	ldi	r31, 0x04	; 4
     816:	ff 2e       	mov	r15, r31
     818:	f0 2d       	mov	r31, r0
     81a:	0b e2       	ldi	r16, 0x2B	; 43
     81c:	11 e0       	ldi	r17, 0x01	; 1
     81e:	20 e0       	ldi	r18, 0x00	; 0
     820:	30 e0       	ldi	r19, 0x00	; 0
     822:	a9 01       	movw	r20, r18
     824:	60 e0       	ldi	r22, 0x00	; 0
     826:	70 e0       	ldi	r23, 0x00	; 0
     828:	cb 01       	movw	r24, r22
     82a:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
	GUI_init(&GUI2);
     82e:	cc 24       	eor	r12, r12
     830:	c3 94       	inc	r12
     832:	d1 2c       	mov	r13, r1
     834:	0f 2e       	mov	r0, r31
     836:	f2 ee       	ldi	r31, 0xE2	; 226
     838:	ef 2e       	mov	r14, r31
     83a:	f0 e0       	ldi	r31, 0x00	; 0
     83c:	ff 2e       	mov	r15, r31
     83e:	f0 2d       	mov	r31, r0
     840:	02 e1       	ldi	r16, 0x12	; 18
     842:	11 e0       	ldi	r17, 0x01	; 1
     844:	20 e0       	ldi	r18, 0x00	; 0
     846:	30 e0       	ldi	r19, 0x00	; 0
     848:	a9 01       	movw	r20, r18
     84a:	60 e0       	ldi	r22, 0x00	; 0
     84c:	70 e0       	ldi	r23, 0x00	; 0
     84e:	cb 01       	movw	r24, r22
     850:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
     854:	c1 2c       	mov	r12, r1
     856:	d1 2c       	mov	r13, r1
     858:	0f 2e       	mov	r0, r31
     85a:	fd e5       	ldi	r31, 0x5D	; 93
     85c:	ef 2e       	mov	r14, r31
     85e:	f4 e0       	ldi	r31, 0x04	; 4
     860:	ff 2e       	mov	r15, r31
     862:	f0 2d       	mov	r31, r0
     864:	06 e1       	ldi	r16, 0x16	; 22
     866:	11 e0       	ldi	r17, 0x01	; 1
     868:	20 e0       	ldi	r18, 0x00	; 0
     86a:	30 e0       	ldi	r19, 0x00	; 0
     86c:	a9 01       	movw	r20, r18
     86e:	60 e0       	ldi	r22, 0x00	; 0
     870:	70 e0       	ldi	r23, 0x00	; 0
     872:	cb 01       	movw	r24, r22
     874:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
}
     878:	1f 91       	pop	r17
     87a:	0f 91       	pop	r16
     87c:	ff 90       	pop	r15
     87e:	ef 90       	pop	r14
     880:	df 90       	pop	r13
     882:	cf 90       	pop	r12
     884:	08 95       	ret

00000886 <main>:

int main() {
	sei();
     886:	78 94       	sei
	
	LCD_init();
     888:	06 dc       	rcall	.-2036   	; 0x96 <LCD_init>
	BTN_init();
     88a:	12 dc       	rcall	.-2012   	; 0xb0 <BTN_init>
	
	INSTALL(&KEYN, KEY_pwmInc, IRQ_PCINT1);
     88c:	42 e0       	ldi	r20, 0x02	; 2
     88e:	60 ed       	ldi	r22, 0xD0	; 208
     890:	72 e0       	ldi	r23, 0x02	; 2
     892:	80 e0       	ldi	r24, 0x00	; 0
     894:	91 e0       	ldi	r25, 0x01	; 1
     896:	0e 94 05 11 	call	0x220a	; 0x220a <install>
	INSTALL(&KEYN, KEY_pwmSel, IRQ_PCINT0);
     89a:	41 e0       	ldi	r20, 0x01	; 1
     89c:	6b e1       	ldi	r22, 0x1B	; 27
     89e:	72 e0       	ldi	r23, 0x02	; 2
     8a0:	80 e0       	ldi	r24, 0x00	; 0
     8a2:	91 e0       	ldi	r25, 0x01	; 1
     8a4:	0e 94 05 11 	call	0x220a	; 0x220a <install>
	
	return TINYTIMBER(NULL,launch,0);
     8a8:	40 e0       	ldi	r20, 0x00	; 0
     8aa:	50 e0       	ldi	r21, 0x00	; 0
     8ac:	6c ee       	ldi	r22, 0xEC	; 236
     8ae:	73 e0       	ldi	r23, 0x03	; 3
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	0c 94 1f 11 	jmp	0x223e	; 0x223e <tinytimber>
     8b8:	08 95       	ret

000008ba <PWM_init_pulseLoop>:
 *  Author: Daniel
 */ 

#include "PWM.h"

int PWM_init_pulseLoop(PWM *p, int arg){
     8ba:	cf 92       	push	r12
     8bc:	df 92       	push	r13
     8be:	ef 92       	push	r14
     8c0:	ff 92       	push	r15
     8c2:	0f 93       	push	r16
     8c4:	1f 93       	push	r17
     8c6:	cf 93       	push	r28
     8c8:	df 93       	push	r29
     8ca:	ec 01       	movw	r28, r24
	if(p->freq){
     8cc:	8c 81       	ldd	r24, Y+4	; 0x04
     8ce:	9d 81       	ldd	r25, Y+5	; 0x05
     8d0:	89 2b       	or	r24, r25
     8d2:	a1 f1       	breq	.+104    	; 0x93c <PWM_init_pulseLoop+0x82>
		*(p->reg)^= (1 << p->toggle);
     8d4:	ee 81       	ldd	r30, Y+6	; 0x06
     8d6:	ff 81       	ldd	r31, Y+7	; 0x07
     8d8:	81 e0       	ldi	r24, 0x01	; 1
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	08 84       	ldd	r0, Y+8	; 0x08
     8de:	02 c0       	rjmp	.+4      	; 0x8e4 <PWM_init_pulseLoop+0x2a>
     8e0:	88 0f       	add	r24, r24
     8e2:	99 1f       	adc	r25, r25
     8e4:	0a 94       	dec	r0
     8e6:	e2 f7       	brpl	.-8      	; 0x8e0 <PWM_init_pulseLoop+0x26>
     8e8:	90 81       	ld	r25, Z
     8ea:	89 27       	eor	r24, r25
     8ec:	80 83       	st	Z, r24
		AFTER(USEC(500000/(p->freq)), p, PWM_init_pulseLoop, 0);
     8ee:	2c 81       	ldd	r18, Y+4	; 0x04
     8f0:	3d 81       	ldd	r19, Y+5	; 0x05
     8f2:	03 2e       	mov	r0, r19
     8f4:	00 0c       	add	r0, r0
     8f6:	44 0b       	sbc	r20, r20
     8f8:	55 0b       	sbc	r21, r21
     8fa:	60 e2       	ldi	r22, 0x20	; 32
     8fc:	71 ea       	ldi	r23, 0xA1	; 161
     8fe:	87 e0       	ldi	r24, 0x07	; 7
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	0e 94 49 11 	call	0x2292	; 0x2292 <__divmodsi4>
     906:	ad e7       	ldi	r26, 0x7D	; 125
     908:	b0 e0       	ldi	r27, 0x00	; 0
     90a:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <__muluhisi3>
     90e:	20 ea       	ldi	r18, 0xA0	; 160
     910:	3f e0       	ldi	r19, 0x0F	; 15
     912:	40 e0       	ldi	r20, 0x00	; 0
     914:	50 e0       	ldi	r21, 0x00	; 0
     916:	0e 94 49 11 	call	0x2292	; 0x2292 <__divmodsi4>
     91a:	ca 01       	movw	r24, r20
     91c:	b9 01       	movw	r22, r18
     91e:	c1 2c       	mov	r12, r1
     920:	d1 2c       	mov	r13, r1
     922:	0f 2e       	mov	r0, r31
     924:	fd e5       	ldi	r31, 0x5D	; 93
     926:	ef 2e       	mov	r14, r31
     928:	f4 e0       	ldi	r31, 0x04	; 4
     92a:	ff 2e       	mov	r15, r31
     92c:	f0 2d       	mov	r31, r0
     92e:	8e 01       	movw	r16, r28
     930:	20 e0       	ldi	r18, 0x00	; 0
     932:	30 e0       	ldi	r19, 0x00	; 0
     934:	a9 01       	movw	r20, r18
     936:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
     93a:	20 c0       	rjmp	.+64     	; 0x97c <PWM_init_pulseLoop+0xc2>
	}else{
		*(p->reg)&= ~(1 << p->toggle);
     93c:	ee 81       	ldd	r30, Y+6	; 0x06
     93e:	ff 81       	ldd	r31, Y+7	; 0x07
     940:	81 e0       	ldi	r24, 0x01	; 1
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	08 84       	ldd	r0, Y+8	; 0x08
     946:	02 c0       	rjmp	.+4      	; 0x94c <PWM_init_pulseLoop+0x92>
     948:	88 0f       	add	r24, r24
     94a:	99 1f       	adc	r25, r25
     94c:	0a 94       	dec	r0
     94e:	e2 f7       	brpl	.-8      	; 0x948 <PWM_init_pulseLoop+0x8e>
     950:	80 95       	com	r24
     952:	90 81       	ld	r25, Z
     954:	89 23       	and	r24, r25
     956:	80 83       	st	Z, r24
		AFTER(SEC(1), p, PWM_init_pulseLoop,0);
     958:	c1 2c       	mov	r12, r1
     95a:	d1 2c       	mov	r13, r1
     95c:	0f 2e       	mov	r0, r31
     95e:	fd e5       	ldi	r31, 0x5D	; 93
     960:	ef 2e       	mov	r14, r31
     962:	f4 e0       	ldi	r31, 0x04	; 4
     964:	ff 2e       	mov	r15, r31
     966:	f0 2d       	mov	r31, r0
     968:	8e 01       	movw	r16, r28
     96a:	20 e0       	ldi	r18, 0x00	; 0
     96c:	30 e0       	ldi	r19, 0x00	; 0
     96e:	a9 01       	movw	r20, r18
     970:	62 e1       	ldi	r22, 0x12	; 18
     972:	7a e7       	ldi	r23, 0x7A	; 122
     974:	80 e0       	ldi	r24, 0x00	; 0
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <async>
	}
	return 0;
}
     97c:	80 e0       	ldi	r24, 0x00	; 0
     97e:	90 e0       	ldi	r25, 0x00	; 0
     980:	df 91       	pop	r29
     982:	cf 91       	pop	r28
     984:	1f 91       	pop	r17
     986:	0f 91       	pop	r16
     988:	ff 90       	pop	r15
     98a:	ef 90       	pop	r14
     98c:	df 90       	pop	r13
     98e:	cf 90       	pop	r12
     990:	08 95       	ret

00000992 <_PWM_deltaFreq>:

int _PWM_deltaFreq(PWM *p, int arg){
	arg+= p->freq;
     992:	fc 01       	movw	r30, r24
     994:	24 81       	ldd	r18, Z+4	; 0x04
     996:	35 81       	ldd	r19, Z+5	; 0x05
     998:	62 0f       	add	r22, r18
     99a:	73 1f       	adc	r23, r19
	if(arg <= 0)
     99c:	16 16       	cp	r1, r22
     99e:	17 06       	cpc	r1, r23
     9a0:	1c f0       	brlt	.+6      	; 0x9a8 <_PWM_deltaFreq+0x16>
		p->freq = 0;
     9a2:	15 82       	std	Z+5, r1	; 0x05
     9a4:	14 82       	std	Z+4, r1	; 0x04
     9a6:	0c c0       	rjmp	.+24     	; 0x9c0 <_PWM_deltaFreq+0x2e>
	else if(arg > 99)
     9a8:	64 36       	cpi	r22, 0x64	; 100
     9aa:	71 05       	cpc	r23, r1
     9ac:	34 f0       	brlt	.+12     	; 0x9ba <_PWM_deltaFreq+0x28>
		p->freq = 99;
     9ae:	23 e6       	ldi	r18, 0x63	; 99
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	fc 01       	movw	r30, r24
     9b4:	35 83       	std	Z+5, r19	; 0x05
     9b6:	24 83       	std	Z+4, r18	; 0x04
     9b8:	03 c0       	rjmp	.+6      	; 0x9c0 <_PWM_deltaFreq+0x2e>
	else
		p->freq = arg;
     9ba:	fc 01       	movw	r30, r24
     9bc:	75 83       	std	Z+5, r23	; 0x05
     9be:	64 83       	std	Z+4, r22	; 0x04
	return 0;
}
     9c0:	80 e0       	ldi	r24, 0x00	; 0
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	08 95       	ret

000009c6 <_PWM_getFreq>:

int _PWM_getFreq(PWM *p, int arg){
	return p->freq;
}
     9c6:	fc 01       	movw	r30, r24
     9c8:	84 81       	ldd	r24, Z+4	; 0x04
     9ca:	95 81       	ldd	r25, Z+5	; 0x05
     9cc:	08 95       	ret

000009ce <_PWM_setFreq>:

int _PWM_setFreq(PWM *p, int arg){
	if(arg > 99)
     9ce:	64 36       	cpi	r22, 0x64	; 100
     9d0:	71 05       	cpc	r23, r1
     9d2:	34 f0       	brlt	.+12     	; 0x9e0 <_PWM_setFreq+0x12>
		p->freq = 99;
     9d4:	23 e6       	ldi	r18, 0x63	; 99
     9d6:	30 e0       	ldi	r19, 0x00	; 0
     9d8:	fc 01       	movw	r30, r24
     9da:	35 83       	std	Z+5, r19	; 0x05
     9dc:	24 83       	std	Z+4, r18	; 0x04
     9de:	0a c0       	rjmp	.+20     	; 0x9f4 <_PWM_setFreq+0x26>
	else if(arg <= 0)
     9e0:	16 16       	cp	r1, r22
     9e2:	17 06       	cpc	r1, r23
     9e4:	24 f0       	brlt	.+8      	; 0x9ee <_PWM_setFreq+0x20>
		p->freq = 0;
     9e6:	fc 01       	movw	r30, r24
     9e8:	15 82       	std	Z+5, r1	; 0x05
     9ea:	14 82       	std	Z+4, r1	; 0x04
     9ec:	03 c0       	rjmp	.+6      	; 0x9f4 <_PWM_setFreq+0x26>
	else
		p->freq = arg;
     9ee:	fc 01       	movw	r30, r24
     9f0:	75 83       	std	Z+5, r23	; 0x05
     9f2:	64 83       	std	Z+4, r22	; 0x04
	return 0;
     9f4:	80 e0       	ldi	r24, 0x00	; 0
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	08 95       	ret

000009fa <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     9fa:	cf 93       	push	r28
     9fc:	df 93       	push	r29
     9fe:	00 d0       	rcall	.+0      	; 0xa00 <initialize+0x6>
     a00:	00 d0       	rcall	.+0      	; 0xa02 <initialize+0x8>
     a02:	cd b7       	in	r28, 0x3d	; 61
     a04:	de b7       	in	r29, 0x3e	; 62
     a06:	8b e4       	ldi	r24, 0x4B	; 75
     a08:	92 e0       	ldi	r25, 0x02	; 2
     a0a:	2b e2       	ldi	r18, 0x2B	; 43
     a0c:	33 e0       	ldi	r19, 0x03	; 3
     a0e:	fc 01       	movw	r30, r24
     a10:	70 97       	sbiw	r30, 0x10	; 16
     a12:	91 83       	std	Z+1, r25	; 0x01
     a14:	80 83       	st	Z, r24
     a16:	40 96       	adiw	r24, 0x10	; 16
     a18:	82 17       	cp	r24, r18
     a1a:	93 07       	cpc	r25, r19
     a1c:	c1 f7       	brne	.-16     	; 0xa0e <initialize+0x14>
     a1e:	10 92 1c 03 	sts	0x031C, r1	; 0x80031c <messages+0xe1>
     a22:	10 92 1b 03 	sts	0x031B, r1	; 0x80031b <messages+0xe0>
     a26:	e6 e8       	ldi	r30, 0x86	; 134
     a28:	f1 e0       	ldi	r31, 0x01	; 1
     a2a:	83 ea       	ldi	r24, 0xA3	; 163
     a2c:	91 e0       	ldi	r25, 0x01	; 1
     a2e:	91 83       	std	Z+1, r25	; 0x01
     a30:	80 83       	st	Z, r24
     a32:	80 ec       	ldi	r24, 0xC0	; 192
     a34:	91 e0       	ldi	r25, 0x01	; 1
     a36:	96 8f       	std	Z+30, r25	; 0x1e
     a38:	85 8f       	std	Z+29, r24	; 0x1d
     a3a:	ad ed       	ldi	r26, 0xDD	; 221
     a3c:	b1 e0       	ldi	r27, 0x01	; 1
     a3e:	b3 af       	std	Z+59, r27	; 0x3b
     a40:	a2 af       	std	Z+58, r26	; 0x3a
     a42:	1d 92       	st	X+, r1
     a44:	1c 92       	st	X, r1
     a46:	fa 83       	std	Y+2, r31	; 0x02
     a48:	e9 83       	std	Y+1, r30	; 0x01
     a4a:	e7 e8       	ldi	r30, 0x87	; 135
     a4c:	f3 e0       	ldi	r31, 0x03	; 3
     a4e:	fc 83       	std	Y+4, r31	; 0x04
     a50:	eb 83       	std	Y+3, r30	; 0x03
     a52:	89 81       	ldd	r24, Y+1	; 0x01
     a54:	9a 81       	ldd	r25, Y+2	; 0x02
     a56:	06 96       	adiw	r24, 0x06	; 6
     a58:	0e 94 ba 11 	call	0x2374	; 0x2374 <setjmp>
     a5c:	8b 81       	ldd	r24, Y+3	; 0x03
     a5e:	9c 81       	ldd	r25, Y+4	; 0x04
     a60:	e9 81       	ldd	r30, Y+1	; 0x01
     a62:	fa 81       	ldd	r31, Y+2	; 0x02
     a64:	97 8b       	std	Z+23, r25	; 0x17
     a66:	86 8b       	std	Z+22, r24	; 0x16
     a68:	91 8f       	std	Z+25, r25	; 0x19
     a6a:	80 8f       	std	Z+24, r24	; 0x18
     a6c:	89 e9       	ldi	r24, 0x99	; 153
     a6e:	90 e1       	ldi	r25, 0x10	; 16
     a70:	94 8f       	std	Z+28, r25	; 0x1c
     a72:	83 8f       	std	Z+27, r24	; 0x1b
     a74:	15 82       	std	Z+5, r1	; 0x05
     a76:	14 82       	std	Z+4, r1	; 0x04
     a78:	7d 96       	adiw	r30, 0x1d	; 29
     a7a:	fa 83       	std	Y+2, r31	; 0x02
     a7c:	e9 83       	std	Y+1, r30	; 0x01
     a7e:	eb 81       	ldd	r30, Y+3	; 0x03
     a80:	fc 81       	ldd	r31, Y+4	; 0x04
     a82:	e0 5a       	subi	r30, 0xA0	; 160
     a84:	ff 4f       	sbci	r31, 0xFF	; 255
     a86:	fc 83       	std	Y+4, r31	; 0x04
     a88:	eb 83       	std	Y+3, r30	; 0x03
     a8a:	89 81       	ldd	r24, Y+1	; 0x01
     a8c:	9a 81       	ldd	r25, Y+2	; 0x02
     a8e:	8a 5f       	subi	r24, 0xFA	; 250
     a90:	91 40       	sbci	r25, 0x01	; 1
     a92:	f9 f6       	brne	.-66     	; 0xa52 <initialize+0x58>
     a94:	ee e1       	ldi	r30, 0x1E	; 30
     a96:	f2 e0       	ldi	r31, 0x02	; 2
     a98:	11 82       	std	Z+1, r1	; 0x01
     a9a:	10 82       	st	Z, r1
     a9c:	15 82       	std	Z+5, r1	; 0x05
     a9e:	14 82       	std	Z+4, r1	; 0x04
     aa0:	13 82       	std	Z+3, r1	; 0x03
     aa2:	12 82       	std	Z+2, r1	; 0x02
     aa4:	e1 e6       	ldi	r30, 0x61	; 97
     aa6:	f0 e0       	ldi	r31, 0x00	; 0
     aa8:	80 e8       	ldi	r24, 0x80	; 128
     aaa:	80 83       	st	Z, r24
     aac:	10 82       	st	Z, r1
     aae:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     ab2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     ab6:	84 e0       	ldi	r24, 0x04	; 4
     ab8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     abc:	81 e0       	ldi	r24, 0x01	; 1
     abe:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     ac2:	0f 90       	pop	r0
     ac4:	0f 90       	pop	r0
     ac6:	0f 90       	pop	r0
     ac8:	0f 90       	pop	r0
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	08 95       	ret

00000ad0 <dispatch>:
     ad0:	cf 93       	push	r28
     ad2:	df 93       	push	r29
     ad4:	00 d0       	rcall	.+0      	; 0xad6 <dispatch+0x6>
     ad6:	cd b7       	in	r28, 0x3d	; 61
     ad8:	de b7       	in	r29, 0x3e	; 62
     ada:	9a 83       	std	Y+2, r25	; 0x02
     adc:	89 83       	std	Y+1, r24	; 0x01
     ade:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <current>
     ae2:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <current+0x1>
     ae6:	06 96       	adiw	r24, 0x06	; 6
     ae8:	0e 94 ba 11 	call	0x2374	; 0x2374 <setjmp>
     aec:	89 2b       	or	r24, r25
     aee:	59 f4       	brne	.+22     	; 0xb06 <dispatch+0x36>
     af0:	89 81       	ldd	r24, Y+1	; 0x01
     af2:	9a 81       	ldd	r25, Y+2	; 0x02
     af4:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <current+0x1>
     af8:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <current>
     afc:	61 e0       	ldi	r22, 0x01	; 1
     afe:	70 e0       	ldi	r23, 0x00	; 0
     b00:	06 96       	adiw	r24, 0x06	; 6
     b02:	0e 94 da 11 	call	0x23b4	; 0x23b4 <longjmp>
     b06:	0f 90       	pop	r0
     b08:	0f 90       	pop	r0
     b0a:	df 91       	pop	r29
     b0c:	cf 91       	pop	r28
     b0e:	08 95       	ret

00000b10 <schedule>:
     b10:	0f 93       	push	r16
     b12:	1f 93       	push	r17
     b14:	cf 93       	push	r28
     b16:	df 93       	push	r29
     b18:	c0 91 3e 01 	lds	r28, 0x013E	; 0x80013e <activeStack>
     b1c:	d0 91 3f 01 	lds	r29, 0x013F	; 0x80013f <activeStack+0x1>
     b20:	aa 81       	ldd	r26, Y+2	; 0x02
     b22:	bb 81       	ldd	r27, Y+3	; 0x03
     b24:	e0 91 60 01 	lds	r30, 0x0160	; 0x800160 <msgQ>
     b28:	f0 91 61 01 	lds	r31, 0x0161	; 0x800161 <msgQ+0x1>
     b2c:	30 97       	sbiw	r30, 0x00	; 0
     b2e:	29 f1       	breq	.+74     	; 0xb7a <schedule+0x6a>
     b30:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <threadPool>
     b34:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <threadPool+0x1>
     b38:	00 97       	sbiw	r24, 0x00	; 0
     b3a:	f9 f0       	breq	.+62     	; 0xb7a <schedule+0x6a>
     b3c:	10 97       	sbiw	r26, 0x00	; 0
     b3e:	79 f0       	breq	.+30     	; 0xb5e <schedule+0x4e>
     b40:	46 81       	ldd	r20, Z+6	; 0x06
     b42:	57 81       	ldd	r21, Z+7	; 0x07
     b44:	60 85       	ldd	r22, Z+8	; 0x08
     b46:	71 85       	ldd	r23, Z+9	; 0x09
     b48:	16 96       	adiw	r26, 0x06	; 6
     b4a:	0d 91       	ld	r16, X+
     b4c:	1d 91       	ld	r17, X+
     b4e:	2d 91       	ld	r18, X+
     b50:	3c 91       	ld	r19, X
     b52:	19 97       	sbiw	r26, 0x09	; 9
     b54:	40 1b       	sub	r20, r16
     b56:	51 0b       	sbc	r21, r17
     b58:	62 0b       	sbc	r22, r18
     b5a:	73 0b       	sbc	r23, r19
     b5c:	72 f4       	brpl	.+28     	; 0xb7a <schedule+0x6a>
     b5e:	fc 01       	movw	r30, r24
     b60:	20 81       	ld	r18, Z
     b62:	31 81       	ldd	r19, Z+1	; 0x01
     b64:	30 93 41 01 	sts	0x0141, r19	; 0x800141 <threadPool+0x1>
     b68:	20 93 40 01 	sts	0x0140, r18	; 0x800140 <threadPool>
     b6c:	d1 83       	std	Z+1, r29	; 0x01
     b6e:	c0 83       	st	Z, r28
     b70:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <activeStack+0x1>
     b74:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <activeStack>
     b78:	ab df       	rcall	.-170    	; 0xad0 <dispatch>
     b7a:	df 91       	pop	r29
     b7c:	cf 91       	pop	r28
     b7e:	1f 91       	pop	r17
     b80:	0f 91       	pop	r16
     b82:	08 95       	ret

00000b84 <__vector_1>:
     b84:	1f 92       	push	r1
     b86:	0f 92       	push	r0
     b88:	0f b6       	in	r0, 0x3f	; 63
     b8a:	0f 92       	push	r0
     b8c:	11 24       	eor	r1, r1
     b8e:	2f 93       	push	r18
     b90:	3f 93       	push	r19
     b92:	4f 93       	push	r20
     b94:	5f 93       	push	r21
     b96:	6f 93       	push	r22
     b98:	7f 93       	push	r23
     b9a:	8f 93       	push	r24
     b9c:	9f 93       	push	r25
     b9e:	af 93       	push	r26
     ba0:	bf 93       	push	r27
     ba2:	ef 93       	push	r30
     ba4:	ff 93       	push	r31
     ba6:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
     baa:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
     bae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     bb2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     bb6:	c9 01       	movw	r24, r18
     bb8:	03 2e       	mov	r0, r19
     bba:	00 0c       	add	r0, r0
     bbc:	aa 0b       	sbc	r26, r26
     bbe:	bb 0b       	sbc	r27, r27
     bc0:	dc 01       	movw	r26, r24
     bc2:	99 27       	eor	r25, r25
     bc4:	88 27       	eor	r24, r24
     bc6:	60 e0       	ldi	r22, 0x00	; 0
     bc8:	70 e0       	ldi	r23, 0x00	; 0
     bca:	84 2b       	or	r24, r20
     bcc:	95 2b       	or	r25, r21
     bce:	a6 2b       	or	r26, r22
     bd0:	b7 2b       	or	r27, r23
     bd2:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
     bd6:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
     bda:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
     bde:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
     be2:	b0 9b       	sbis	0x16, 0	; 22
     be4:	1b c0       	rjmp	.+54     	; 0xc1c <__vector_1+0x98>
     be6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     bea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     bee:	c9 01       	movw	r24, r18
     bf0:	01 96       	adiw	r24, 0x01	; 1
     bf2:	09 2e       	mov	r0, r25
     bf4:	00 0c       	add	r0, r0
     bf6:	aa 0b       	sbc	r26, r26
     bf8:	bb 0b       	sbc	r27, r27
     bfa:	dc 01       	movw	r26, r24
     bfc:	99 27       	eor	r25, r25
     bfe:	88 27       	eor	r24, r24
     c00:	60 e0       	ldi	r22, 0x00	; 0
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	84 2b       	or	r24, r20
     c06:	95 2b       	or	r25, r21
     c08:	a6 2b       	or	r26, r22
     c0a:	b7 2b       	or	r27, r23
     c0c:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
     c10:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
     c14:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
     c18:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
     c1c:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable>
     c20:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x1>
     c24:	30 97       	sbiw	r30, 0x00	; 0
     c26:	39 f0       	breq	.+14     	; 0xc36 <__vector_1+0xb2>
     c28:	60 e0       	ldi	r22, 0x00	; 0
     c2a:	70 e0       	ldi	r23, 0x00	; 0
     c2c:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable>
     c30:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x1>
     c34:	09 95       	icall
     c36:	6c df       	rcall	.-296    	; 0xb10 <schedule>
     c38:	ff 91       	pop	r31
     c3a:	ef 91       	pop	r30
     c3c:	bf 91       	pop	r27
     c3e:	af 91       	pop	r26
     c40:	9f 91       	pop	r25
     c42:	8f 91       	pop	r24
     c44:	7f 91       	pop	r23
     c46:	6f 91       	pop	r22
     c48:	5f 91       	pop	r21
     c4a:	4f 91       	pop	r20
     c4c:	3f 91       	pop	r19
     c4e:	2f 91       	pop	r18
     c50:	0f 90       	pop	r0
     c52:	0f be       	out	0x3f, r0	; 63
     c54:	0f 90       	pop	r0
     c56:	1f 90       	pop	r1
     c58:	18 95       	reti

00000c5a <__vector_2>:
     c5a:	1f 92       	push	r1
     c5c:	0f 92       	push	r0
     c5e:	0f b6       	in	r0, 0x3f	; 63
     c60:	0f 92       	push	r0
     c62:	11 24       	eor	r1, r1
     c64:	2f 93       	push	r18
     c66:	3f 93       	push	r19
     c68:	4f 93       	push	r20
     c6a:	5f 93       	push	r21
     c6c:	6f 93       	push	r22
     c6e:	7f 93       	push	r23
     c70:	8f 93       	push	r24
     c72:	9f 93       	push	r25
     c74:	af 93       	push	r26
     c76:	bf 93       	push	r27
     c78:	ef 93       	push	r30
     c7a:	ff 93       	push	r31
     c7c:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
     c80:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
     c84:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c88:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c8c:	c9 01       	movw	r24, r18
     c8e:	03 2e       	mov	r0, r19
     c90:	00 0c       	add	r0, r0
     c92:	aa 0b       	sbc	r26, r26
     c94:	bb 0b       	sbc	r27, r27
     c96:	dc 01       	movw	r26, r24
     c98:	99 27       	eor	r25, r25
     c9a:	88 27       	eor	r24, r24
     c9c:	60 e0       	ldi	r22, 0x00	; 0
     c9e:	70 e0       	ldi	r23, 0x00	; 0
     ca0:	84 2b       	or	r24, r20
     ca2:	95 2b       	or	r25, r21
     ca4:	a6 2b       	or	r26, r22
     ca6:	b7 2b       	or	r27, r23
     ca8:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
     cac:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
     cb0:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
     cb4:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
     cb8:	b0 9b       	sbis	0x16, 0	; 22
     cba:	1b c0       	rjmp	.+54     	; 0xcf2 <__vector_2+0x98>
     cbc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     cc0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     cc4:	c9 01       	movw	r24, r18
     cc6:	01 96       	adiw	r24, 0x01	; 1
     cc8:	09 2e       	mov	r0, r25
     cca:	00 0c       	add	r0, r0
     ccc:	aa 0b       	sbc	r26, r26
     cce:	bb 0b       	sbc	r27, r27
     cd0:	dc 01       	movw	r26, r24
     cd2:	99 27       	eor	r25, r25
     cd4:	88 27       	eor	r24, r24
     cd6:	60 e0       	ldi	r22, 0x00	; 0
     cd8:	70 e0       	ldi	r23, 0x00	; 0
     cda:	84 2b       	or	r24, r20
     cdc:	95 2b       	or	r25, r21
     cde:	a6 2b       	or	r26, r22
     ce0:	b7 2b       	or	r27, r23
     ce2:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
     ce6:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
     cea:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
     cee:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
     cf2:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x2>
     cf6:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x3>
     cfa:	30 97       	sbiw	r30, 0x00	; 0
     cfc:	39 f0       	breq	.+14     	; 0xd0c <__vector_2+0xb2>
     cfe:	61 e0       	ldi	r22, 0x01	; 1
     d00:	70 e0       	ldi	r23, 0x00	; 0
     d02:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x2>
     d06:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x3>
     d0a:	09 95       	icall
     d0c:	01 df       	rcall	.-510    	; 0xb10 <schedule>
     d0e:	ff 91       	pop	r31
     d10:	ef 91       	pop	r30
     d12:	bf 91       	pop	r27
     d14:	af 91       	pop	r26
     d16:	9f 91       	pop	r25
     d18:	8f 91       	pop	r24
     d1a:	7f 91       	pop	r23
     d1c:	6f 91       	pop	r22
     d1e:	5f 91       	pop	r21
     d20:	4f 91       	pop	r20
     d22:	3f 91       	pop	r19
     d24:	2f 91       	pop	r18
     d26:	0f 90       	pop	r0
     d28:	0f be       	out	0x3f, r0	; 63
     d2a:	0f 90       	pop	r0
     d2c:	1f 90       	pop	r1
     d2e:	18 95       	reti

00000d30 <__vector_3>:
     d30:	1f 92       	push	r1
     d32:	0f 92       	push	r0
     d34:	0f b6       	in	r0, 0x3f	; 63
     d36:	0f 92       	push	r0
     d38:	11 24       	eor	r1, r1
     d3a:	2f 93       	push	r18
     d3c:	3f 93       	push	r19
     d3e:	4f 93       	push	r20
     d40:	5f 93       	push	r21
     d42:	6f 93       	push	r22
     d44:	7f 93       	push	r23
     d46:	8f 93       	push	r24
     d48:	9f 93       	push	r25
     d4a:	af 93       	push	r26
     d4c:	bf 93       	push	r27
     d4e:	ef 93       	push	r30
     d50:	ff 93       	push	r31
     d52:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
     d56:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
     d5a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     d5e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     d62:	c9 01       	movw	r24, r18
     d64:	03 2e       	mov	r0, r19
     d66:	00 0c       	add	r0, r0
     d68:	aa 0b       	sbc	r26, r26
     d6a:	bb 0b       	sbc	r27, r27
     d6c:	dc 01       	movw	r26, r24
     d6e:	99 27       	eor	r25, r25
     d70:	88 27       	eor	r24, r24
     d72:	60 e0       	ldi	r22, 0x00	; 0
     d74:	70 e0       	ldi	r23, 0x00	; 0
     d76:	84 2b       	or	r24, r20
     d78:	95 2b       	or	r25, r21
     d7a:	a6 2b       	or	r26, r22
     d7c:	b7 2b       	or	r27, r23
     d7e:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
     d82:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
     d86:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
     d8a:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
     d8e:	b0 9b       	sbis	0x16, 0	; 22
     d90:	1b c0       	rjmp	.+54     	; 0xdc8 <__vector_3+0x98>
     d92:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     d96:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     d9a:	c9 01       	movw	r24, r18
     d9c:	01 96       	adiw	r24, 0x01	; 1
     d9e:	09 2e       	mov	r0, r25
     da0:	00 0c       	add	r0, r0
     da2:	aa 0b       	sbc	r26, r26
     da4:	bb 0b       	sbc	r27, r27
     da6:	dc 01       	movw	r26, r24
     da8:	99 27       	eor	r25, r25
     daa:	88 27       	eor	r24, r24
     dac:	60 e0       	ldi	r22, 0x00	; 0
     dae:	70 e0       	ldi	r23, 0x00	; 0
     db0:	84 2b       	or	r24, r20
     db2:	95 2b       	or	r25, r21
     db4:	a6 2b       	or	r26, r22
     db6:	b7 2b       	or	r27, r23
     db8:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
     dbc:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
     dc0:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
     dc4:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
     dc8:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0x4>
     dcc:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0x5>
     dd0:	30 97       	sbiw	r30, 0x00	; 0
     dd2:	39 f0       	breq	.+14     	; 0xde2 <__vector_3+0xb2>
     dd4:	62 e0       	ldi	r22, 0x02	; 2
     dd6:	70 e0       	ldi	r23, 0x00	; 0
     dd8:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0x4>
     ddc:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0x5>
     de0:	09 95       	icall
     de2:	96 de       	rcall	.-724    	; 0xb10 <schedule>
     de4:	ff 91       	pop	r31
     de6:	ef 91       	pop	r30
     de8:	bf 91       	pop	r27
     dea:	af 91       	pop	r26
     dec:	9f 91       	pop	r25
     dee:	8f 91       	pop	r24
     df0:	7f 91       	pop	r23
     df2:	6f 91       	pop	r22
     df4:	5f 91       	pop	r21
     df6:	4f 91       	pop	r20
     df8:	3f 91       	pop	r19
     dfa:	2f 91       	pop	r18
     dfc:	0f 90       	pop	r0
     dfe:	0f be       	out	0x3f, r0	; 63
     e00:	0f 90       	pop	r0
     e02:	1f 90       	pop	r1
     e04:	18 95       	reti

00000e06 <__vector_4>:
     e06:	1f 92       	push	r1
     e08:	0f 92       	push	r0
     e0a:	0f b6       	in	r0, 0x3f	; 63
     e0c:	0f 92       	push	r0
     e0e:	11 24       	eor	r1, r1
     e10:	2f 93       	push	r18
     e12:	3f 93       	push	r19
     e14:	4f 93       	push	r20
     e16:	5f 93       	push	r21
     e18:	6f 93       	push	r22
     e1a:	7f 93       	push	r23
     e1c:	8f 93       	push	r24
     e1e:	9f 93       	push	r25
     e20:	af 93       	push	r26
     e22:	bf 93       	push	r27
     e24:	ef 93       	push	r30
     e26:	ff 93       	push	r31
     e28:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
     e2c:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
     e30:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     e34:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     e38:	c9 01       	movw	r24, r18
     e3a:	03 2e       	mov	r0, r19
     e3c:	00 0c       	add	r0, r0
     e3e:	aa 0b       	sbc	r26, r26
     e40:	bb 0b       	sbc	r27, r27
     e42:	dc 01       	movw	r26, r24
     e44:	99 27       	eor	r25, r25
     e46:	88 27       	eor	r24, r24
     e48:	60 e0       	ldi	r22, 0x00	; 0
     e4a:	70 e0       	ldi	r23, 0x00	; 0
     e4c:	84 2b       	or	r24, r20
     e4e:	95 2b       	or	r25, r21
     e50:	a6 2b       	or	r26, r22
     e52:	b7 2b       	or	r27, r23
     e54:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
     e58:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
     e5c:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
     e60:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
     e64:	b0 9b       	sbis	0x16, 0	; 22
     e66:	1b c0       	rjmp	.+54     	; 0xe9e <__vector_4+0x98>
     e68:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     e6c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     e70:	c9 01       	movw	r24, r18
     e72:	01 96       	adiw	r24, 0x01	; 1
     e74:	09 2e       	mov	r0, r25
     e76:	00 0c       	add	r0, r0
     e78:	aa 0b       	sbc	r26, r26
     e7a:	bb 0b       	sbc	r27, r27
     e7c:	dc 01       	movw	r26, r24
     e7e:	99 27       	eor	r25, r25
     e80:	88 27       	eor	r24, r24
     e82:	60 e0       	ldi	r22, 0x00	; 0
     e84:	70 e0       	ldi	r23, 0x00	; 0
     e86:	84 2b       	or	r24, r20
     e88:	95 2b       	or	r25, r21
     e8a:	a6 2b       	or	r26, r22
     e8c:	b7 2b       	or	r27, r23
     e8e:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
     e92:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
     e96:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
     e9a:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
     e9e:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable+0x6>
     ea2:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0x7>
     ea6:	30 97       	sbiw	r30, 0x00	; 0
     ea8:	39 f0       	breq	.+14     	; 0xeb8 <__vector_4+0xb2>
     eaa:	63 e0       	ldi	r22, 0x03	; 3
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable+0x6>
     eb2:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0x7>
     eb6:	09 95       	icall
     eb8:	2b de       	rcall	.-938    	; 0xb10 <schedule>
     eba:	ff 91       	pop	r31
     ebc:	ef 91       	pop	r30
     ebe:	bf 91       	pop	r27
     ec0:	af 91       	pop	r26
     ec2:	9f 91       	pop	r25
     ec4:	8f 91       	pop	r24
     ec6:	7f 91       	pop	r23
     ec8:	6f 91       	pop	r22
     eca:	5f 91       	pop	r21
     ecc:	4f 91       	pop	r20
     ece:	3f 91       	pop	r19
     ed0:	2f 91       	pop	r18
     ed2:	0f 90       	pop	r0
     ed4:	0f be       	out	0x3f, r0	; 63
     ed6:	0f 90       	pop	r0
     ed8:	1f 90       	pop	r1
     eda:	18 95       	reti

00000edc <__vector_5>:
     edc:	1f 92       	push	r1
     ede:	0f 92       	push	r0
     ee0:	0f b6       	in	r0, 0x3f	; 63
     ee2:	0f 92       	push	r0
     ee4:	11 24       	eor	r1, r1
     ee6:	2f 93       	push	r18
     ee8:	3f 93       	push	r19
     eea:	4f 93       	push	r20
     eec:	5f 93       	push	r21
     eee:	6f 93       	push	r22
     ef0:	7f 93       	push	r23
     ef2:	8f 93       	push	r24
     ef4:	9f 93       	push	r25
     ef6:	af 93       	push	r26
     ef8:	bf 93       	push	r27
     efa:	ef 93       	push	r30
     efc:	ff 93       	push	r31
     efe:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
     f02:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
     f06:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f0a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f0e:	c9 01       	movw	r24, r18
     f10:	03 2e       	mov	r0, r19
     f12:	00 0c       	add	r0, r0
     f14:	aa 0b       	sbc	r26, r26
     f16:	bb 0b       	sbc	r27, r27
     f18:	dc 01       	movw	r26, r24
     f1a:	99 27       	eor	r25, r25
     f1c:	88 27       	eor	r24, r24
     f1e:	60 e0       	ldi	r22, 0x00	; 0
     f20:	70 e0       	ldi	r23, 0x00	; 0
     f22:	84 2b       	or	r24, r20
     f24:	95 2b       	or	r25, r21
     f26:	a6 2b       	or	r26, r22
     f28:	b7 2b       	or	r27, r23
     f2a:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
     f2e:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
     f32:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
     f36:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
     f3a:	b0 9b       	sbis	0x16, 0	; 22
     f3c:	1b c0       	rjmp	.+54     	; 0xf74 <__vector_5+0x98>
     f3e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f42:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f46:	c9 01       	movw	r24, r18
     f48:	01 96       	adiw	r24, 0x01	; 1
     f4a:	09 2e       	mov	r0, r25
     f4c:	00 0c       	add	r0, r0
     f4e:	aa 0b       	sbc	r26, r26
     f50:	bb 0b       	sbc	r27, r27
     f52:	dc 01       	movw	r26, r24
     f54:	99 27       	eor	r25, r25
     f56:	88 27       	eor	r24, r24
     f58:	60 e0       	ldi	r22, 0x00	; 0
     f5a:	70 e0       	ldi	r23, 0x00	; 0
     f5c:	84 2b       	or	r24, r20
     f5e:	95 2b       	or	r25, r21
     f60:	a6 2b       	or	r26, r22
     f62:	b7 2b       	or	r27, r23
     f64:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
     f68:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
     f6c:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
     f70:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
     f74:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0x8>
     f78:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0x9>
     f7c:	30 97       	sbiw	r30, 0x00	; 0
     f7e:	39 f0       	breq	.+14     	; 0xf8e <__vector_5+0xb2>
     f80:	64 e0       	ldi	r22, 0x04	; 4
     f82:	70 e0       	ldi	r23, 0x00	; 0
     f84:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0x8>
     f88:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0x9>
     f8c:	09 95       	icall
     f8e:	c0 dd       	rcall	.-1152   	; 0xb10 <schedule>
     f90:	ff 91       	pop	r31
     f92:	ef 91       	pop	r30
     f94:	bf 91       	pop	r27
     f96:	af 91       	pop	r26
     f98:	9f 91       	pop	r25
     f9a:	8f 91       	pop	r24
     f9c:	7f 91       	pop	r23
     f9e:	6f 91       	pop	r22
     fa0:	5f 91       	pop	r21
     fa2:	4f 91       	pop	r20
     fa4:	3f 91       	pop	r19
     fa6:	2f 91       	pop	r18
     fa8:	0f 90       	pop	r0
     faa:	0f be       	out	0x3f, r0	; 63
     fac:	0f 90       	pop	r0
     fae:	1f 90       	pop	r1
     fb0:	18 95       	reti

00000fb2 <__vector_10>:
     fb2:	1f 92       	push	r1
     fb4:	0f 92       	push	r0
     fb6:	0f b6       	in	r0, 0x3f	; 63
     fb8:	0f 92       	push	r0
     fba:	11 24       	eor	r1, r1
     fbc:	2f 93       	push	r18
     fbe:	3f 93       	push	r19
     fc0:	4f 93       	push	r20
     fc2:	5f 93       	push	r21
     fc4:	6f 93       	push	r22
     fc6:	7f 93       	push	r23
     fc8:	8f 93       	push	r24
     fca:	9f 93       	push	r25
     fcc:	af 93       	push	r26
     fce:	bf 93       	push	r27
     fd0:	ef 93       	push	r30
     fd2:	ff 93       	push	r31
     fd4:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
     fd8:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
     fdc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     fe0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     fe4:	c9 01       	movw	r24, r18
     fe6:	03 2e       	mov	r0, r19
     fe8:	00 0c       	add	r0, r0
     fea:	aa 0b       	sbc	r26, r26
     fec:	bb 0b       	sbc	r27, r27
     fee:	dc 01       	movw	r26, r24
     ff0:	99 27       	eor	r25, r25
     ff2:	88 27       	eor	r24, r24
     ff4:	60 e0       	ldi	r22, 0x00	; 0
     ff6:	70 e0       	ldi	r23, 0x00	; 0
     ff8:	84 2b       	or	r24, r20
     ffa:	95 2b       	or	r25, r21
     ffc:	a6 2b       	or	r26, r22
     ffe:	b7 2b       	or	r27, r23
    1000:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1004:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    1008:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    100c:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    1010:	b0 9b       	sbis	0x16, 0	; 22
    1012:	1b c0       	rjmp	.+54     	; 0x104a <__vector_10+0x98>
    1014:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1018:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    101c:	c9 01       	movw	r24, r18
    101e:	01 96       	adiw	r24, 0x01	; 1
    1020:	09 2e       	mov	r0, r25
    1022:	00 0c       	add	r0, r0
    1024:	aa 0b       	sbc	r26, r26
    1026:	bb 0b       	sbc	r27, r27
    1028:	dc 01       	movw	r26, r24
    102a:	99 27       	eor	r25, r25
    102c:	88 27       	eor	r24, r24
    102e:	60 e0       	ldi	r22, 0x00	; 0
    1030:	70 e0       	ldi	r23, 0x00	; 0
    1032:	84 2b       	or	r24, r20
    1034:	95 2b       	or	r25, r21
    1036:	a6 2b       	or	r26, r22
    1038:	b7 2b       	or	r27, r23
    103a:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    103e:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    1042:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    1046:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    104a:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <mtable+0xa>
    104e:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <mtable+0xb>
    1052:	30 97       	sbiw	r30, 0x00	; 0
    1054:	39 f0       	breq	.+14     	; 0x1064 <__vector_10+0xb2>
    1056:	65 e0       	ldi	r22, 0x05	; 5
    1058:	70 e0       	ldi	r23, 0x00	; 0
    105a:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <otable+0xa>
    105e:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <otable+0xb>
    1062:	09 95       	icall
    1064:	55 dd       	rcall	.-1366   	; 0xb10 <schedule>
    1066:	ff 91       	pop	r31
    1068:	ef 91       	pop	r30
    106a:	bf 91       	pop	r27
    106c:	af 91       	pop	r26
    106e:	9f 91       	pop	r25
    1070:	8f 91       	pop	r24
    1072:	7f 91       	pop	r23
    1074:	6f 91       	pop	r22
    1076:	5f 91       	pop	r21
    1078:	4f 91       	pop	r20
    107a:	3f 91       	pop	r19
    107c:	2f 91       	pop	r18
    107e:	0f 90       	pop	r0
    1080:	0f be       	out	0x3f, r0	; 63
    1082:	0f 90       	pop	r0
    1084:	1f 90       	pop	r1
    1086:	18 95       	reti

00001088 <__vector_11>:
    1088:	1f 92       	push	r1
    108a:	0f 92       	push	r0
    108c:	0f b6       	in	r0, 0x3f	; 63
    108e:	0f 92       	push	r0
    1090:	11 24       	eor	r1, r1
    1092:	2f 93       	push	r18
    1094:	3f 93       	push	r19
    1096:	4f 93       	push	r20
    1098:	5f 93       	push	r21
    109a:	6f 93       	push	r22
    109c:	7f 93       	push	r23
    109e:	8f 93       	push	r24
    10a0:	9f 93       	push	r25
    10a2:	af 93       	push	r26
    10a4:	bf 93       	push	r27
    10a6:	ef 93       	push	r30
    10a8:	ff 93       	push	r31
    10aa:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    10ae:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    10b2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10b6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10ba:	c9 01       	movw	r24, r18
    10bc:	03 2e       	mov	r0, r19
    10be:	00 0c       	add	r0, r0
    10c0:	aa 0b       	sbc	r26, r26
    10c2:	bb 0b       	sbc	r27, r27
    10c4:	dc 01       	movw	r26, r24
    10c6:	99 27       	eor	r25, r25
    10c8:	88 27       	eor	r24, r24
    10ca:	60 e0       	ldi	r22, 0x00	; 0
    10cc:	70 e0       	ldi	r23, 0x00	; 0
    10ce:	84 2b       	or	r24, r20
    10d0:	95 2b       	or	r25, r21
    10d2:	a6 2b       	or	r26, r22
    10d4:	b7 2b       	or	r27, r23
    10d6:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    10da:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    10de:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    10e2:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    10e6:	b0 9b       	sbis	0x16, 0	; 22
    10e8:	1b c0       	rjmp	.+54     	; 0x1120 <__vector_11+0x98>
    10ea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10ee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10f2:	c9 01       	movw	r24, r18
    10f4:	01 96       	adiw	r24, 0x01	; 1
    10f6:	09 2e       	mov	r0, r25
    10f8:	00 0c       	add	r0, r0
    10fa:	aa 0b       	sbc	r26, r26
    10fc:	bb 0b       	sbc	r27, r27
    10fe:	dc 01       	movw	r26, r24
    1100:	99 27       	eor	r25, r25
    1102:	88 27       	eor	r24, r24
    1104:	60 e0       	ldi	r22, 0x00	; 0
    1106:	70 e0       	ldi	r23, 0x00	; 0
    1108:	84 2b       	or	r24, r20
    110a:	95 2b       	or	r25, r21
    110c:	a6 2b       	or	r26, r22
    110e:	b7 2b       	or	r27, r23
    1110:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1114:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    1118:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    111c:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    1120:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <mtable+0xc>
    1124:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <mtable+0xd>
    1128:	30 97       	sbiw	r30, 0x00	; 0
    112a:	39 f0       	breq	.+14     	; 0x113a <__vector_11+0xb2>
    112c:	66 e0       	ldi	r22, 0x06	; 6
    112e:	70 e0       	ldi	r23, 0x00	; 0
    1130:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <otable+0xc>
    1134:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <otable+0xd>
    1138:	09 95       	icall
    113a:	ea dc       	rcall	.-1580   	; 0xb10 <schedule>
    113c:	ff 91       	pop	r31
    113e:	ef 91       	pop	r30
    1140:	bf 91       	pop	r27
    1142:	af 91       	pop	r26
    1144:	9f 91       	pop	r25
    1146:	8f 91       	pop	r24
    1148:	7f 91       	pop	r23
    114a:	6f 91       	pop	r22
    114c:	5f 91       	pop	r21
    114e:	4f 91       	pop	r20
    1150:	3f 91       	pop	r19
    1152:	2f 91       	pop	r18
    1154:	0f 90       	pop	r0
    1156:	0f be       	out	0x3f, r0	; 63
    1158:	0f 90       	pop	r0
    115a:	1f 90       	pop	r1
    115c:	18 95       	reti

0000115e <__vector_12>:
    115e:	1f 92       	push	r1
    1160:	0f 92       	push	r0
    1162:	0f b6       	in	r0, 0x3f	; 63
    1164:	0f 92       	push	r0
    1166:	11 24       	eor	r1, r1
    1168:	2f 93       	push	r18
    116a:	3f 93       	push	r19
    116c:	4f 93       	push	r20
    116e:	5f 93       	push	r21
    1170:	6f 93       	push	r22
    1172:	7f 93       	push	r23
    1174:	8f 93       	push	r24
    1176:	9f 93       	push	r25
    1178:	af 93       	push	r26
    117a:	bf 93       	push	r27
    117c:	ef 93       	push	r30
    117e:	ff 93       	push	r31
    1180:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    1184:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    1188:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    118c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1190:	c9 01       	movw	r24, r18
    1192:	03 2e       	mov	r0, r19
    1194:	00 0c       	add	r0, r0
    1196:	aa 0b       	sbc	r26, r26
    1198:	bb 0b       	sbc	r27, r27
    119a:	dc 01       	movw	r26, r24
    119c:	99 27       	eor	r25, r25
    119e:	88 27       	eor	r24, r24
    11a0:	60 e0       	ldi	r22, 0x00	; 0
    11a2:	70 e0       	ldi	r23, 0x00	; 0
    11a4:	84 2b       	or	r24, r20
    11a6:	95 2b       	or	r25, r21
    11a8:	a6 2b       	or	r26, r22
    11aa:	b7 2b       	or	r27, r23
    11ac:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    11b0:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    11b4:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    11b8:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    11bc:	b0 9b       	sbis	0x16, 0	; 22
    11be:	1b c0       	rjmp	.+54     	; 0x11f6 <__vector_12+0x98>
    11c0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11c4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11c8:	c9 01       	movw	r24, r18
    11ca:	01 96       	adiw	r24, 0x01	; 1
    11cc:	09 2e       	mov	r0, r25
    11ce:	00 0c       	add	r0, r0
    11d0:	aa 0b       	sbc	r26, r26
    11d2:	bb 0b       	sbc	r27, r27
    11d4:	dc 01       	movw	r26, r24
    11d6:	99 27       	eor	r25, r25
    11d8:	88 27       	eor	r24, r24
    11da:	60 e0       	ldi	r22, 0x00	; 0
    11dc:	70 e0       	ldi	r23, 0x00	; 0
    11de:	84 2b       	or	r24, r20
    11e0:	95 2b       	or	r25, r21
    11e2:	a6 2b       	or	r26, r22
    11e4:	b7 2b       	or	r27, r23
    11e6:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    11ea:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    11ee:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    11f2:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    11f6:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <mtable+0xe>
    11fa:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <mtable+0xf>
    11fe:	30 97       	sbiw	r30, 0x00	; 0
    1200:	39 f0       	breq	.+14     	; 0x1210 <__vector_12+0xb2>
    1202:	67 e0       	ldi	r22, 0x07	; 7
    1204:	70 e0       	ldi	r23, 0x00	; 0
    1206:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <otable+0xe>
    120a:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <otable+0xf>
    120e:	09 95       	icall
    1210:	7f dc       	rcall	.-1794   	; 0xb10 <schedule>
    1212:	ff 91       	pop	r31
    1214:	ef 91       	pop	r30
    1216:	bf 91       	pop	r27
    1218:	af 91       	pop	r26
    121a:	9f 91       	pop	r25
    121c:	8f 91       	pop	r24
    121e:	7f 91       	pop	r23
    1220:	6f 91       	pop	r22
    1222:	5f 91       	pop	r21
    1224:	4f 91       	pop	r20
    1226:	3f 91       	pop	r19
    1228:	2f 91       	pop	r18
    122a:	0f 90       	pop	r0
    122c:	0f be       	out	0x3f, r0	; 63
    122e:	0f 90       	pop	r0
    1230:	1f 90       	pop	r1
    1232:	18 95       	reti

00001234 <__vector_13>:
    1234:	1f 92       	push	r1
    1236:	0f 92       	push	r0
    1238:	0f b6       	in	r0, 0x3f	; 63
    123a:	0f 92       	push	r0
    123c:	11 24       	eor	r1, r1
    123e:	2f 93       	push	r18
    1240:	3f 93       	push	r19
    1242:	4f 93       	push	r20
    1244:	5f 93       	push	r21
    1246:	6f 93       	push	r22
    1248:	7f 93       	push	r23
    124a:	8f 93       	push	r24
    124c:	9f 93       	push	r25
    124e:	af 93       	push	r26
    1250:	bf 93       	push	r27
    1252:	ef 93       	push	r30
    1254:	ff 93       	push	r31
    1256:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    125a:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    125e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1262:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1266:	c9 01       	movw	r24, r18
    1268:	03 2e       	mov	r0, r19
    126a:	00 0c       	add	r0, r0
    126c:	aa 0b       	sbc	r26, r26
    126e:	bb 0b       	sbc	r27, r27
    1270:	dc 01       	movw	r26, r24
    1272:	99 27       	eor	r25, r25
    1274:	88 27       	eor	r24, r24
    1276:	60 e0       	ldi	r22, 0x00	; 0
    1278:	70 e0       	ldi	r23, 0x00	; 0
    127a:	84 2b       	or	r24, r20
    127c:	95 2b       	or	r25, r21
    127e:	a6 2b       	or	r26, r22
    1280:	b7 2b       	or	r27, r23
    1282:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1286:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    128a:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    128e:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    1292:	b0 9b       	sbis	0x16, 0	; 22
    1294:	1b c0       	rjmp	.+54     	; 0x12cc <__vector_13+0x98>
    1296:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    129a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    129e:	c9 01       	movw	r24, r18
    12a0:	01 96       	adiw	r24, 0x01	; 1
    12a2:	09 2e       	mov	r0, r25
    12a4:	00 0c       	add	r0, r0
    12a6:	aa 0b       	sbc	r26, r26
    12a8:	bb 0b       	sbc	r27, r27
    12aa:	dc 01       	movw	r26, r24
    12ac:	99 27       	eor	r25, r25
    12ae:	88 27       	eor	r24, r24
    12b0:	60 e0       	ldi	r22, 0x00	; 0
    12b2:	70 e0       	ldi	r23, 0x00	; 0
    12b4:	84 2b       	or	r24, r20
    12b6:	95 2b       	or	r25, r21
    12b8:	a6 2b       	or	r26, r22
    12ba:	b7 2b       	or	r27, r23
    12bc:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    12c0:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    12c4:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    12c8:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    12cc:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <mtable+0x10>
    12d0:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <mtable+0x11>
    12d4:	30 97       	sbiw	r30, 0x00	; 0
    12d6:	39 f0       	breq	.+14     	; 0x12e6 <__vector_13+0xb2>
    12d8:	68 e0       	ldi	r22, 0x08	; 8
    12da:	70 e0       	ldi	r23, 0x00	; 0
    12dc:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <otable+0x10>
    12e0:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <otable+0x11>
    12e4:	09 95       	icall
    12e6:	14 dc       	rcall	.-2008   	; 0xb10 <schedule>
    12e8:	ff 91       	pop	r31
    12ea:	ef 91       	pop	r30
    12ec:	bf 91       	pop	r27
    12ee:	af 91       	pop	r26
    12f0:	9f 91       	pop	r25
    12f2:	8f 91       	pop	r24
    12f4:	7f 91       	pop	r23
    12f6:	6f 91       	pop	r22
    12f8:	5f 91       	pop	r21
    12fa:	4f 91       	pop	r20
    12fc:	3f 91       	pop	r19
    12fe:	2f 91       	pop	r18
    1300:	0f 90       	pop	r0
    1302:	0f be       	out	0x3f, r0	; 63
    1304:	0f 90       	pop	r0
    1306:	1f 90       	pop	r1
    1308:	18 95       	reti

0000130a <__vector_14>:
    130a:	1f 92       	push	r1
    130c:	0f 92       	push	r0
    130e:	0f b6       	in	r0, 0x3f	; 63
    1310:	0f 92       	push	r0
    1312:	11 24       	eor	r1, r1
    1314:	2f 93       	push	r18
    1316:	3f 93       	push	r19
    1318:	4f 93       	push	r20
    131a:	5f 93       	push	r21
    131c:	6f 93       	push	r22
    131e:	7f 93       	push	r23
    1320:	8f 93       	push	r24
    1322:	9f 93       	push	r25
    1324:	af 93       	push	r26
    1326:	bf 93       	push	r27
    1328:	ef 93       	push	r30
    132a:	ff 93       	push	r31
    132c:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    1330:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    1334:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1338:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    133c:	c9 01       	movw	r24, r18
    133e:	03 2e       	mov	r0, r19
    1340:	00 0c       	add	r0, r0
    1342:	aa 0b       	sbc	r26, r26
    1344:	bb 0b       	sbc	r27, r27
    1346:	dc 01       	movw	r26, r24
    1348:	99 27       	eor	r25, r25
    134a:	88 27       	eor	r24, r24
    134c:	60 e0       	ldi	r22, 0x00	; 0
    134e:	70 e0       	ldi	r23, 0x00	; 0
    1350:	84 2b       	or	r24, r20
    1352:	95 2b       	or	r25, r21
    1354:	a6 2b       	or	r26, r22
    1356:	b7 2b       	or	r27, r23
    1358:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    135c:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    1360:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    1364:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    1368:	b0 9b       	sbis	0x16, 0	; 22
    136a:	1b c0       	rjmp	.+54     	; 0x13a2 <__vector_14+0x98>
    136c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1370:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1374:	c9 01       	movw	r24, r18
    1376:	01 96       	adiw	r24, 0x01	; 1
    1378:	09 2e       	mov	r0, r25
    137a:	00 0c       	add	r0, r0
    137c:	aa 0b       	sbc	r26, r26
    137e:	bb 0b       	sbc	r27, r27
    1380:	dc 01       	movw	r26, r24
    1382:	99 27       	eor	r25, r25
    1384:	88 27       	eor	r24, r24
    1386:	60 e0       	ldi	r22, 0x00	; 0
    1388:	70 e0       	ldi	r23, 0x00	; 0
    138a:	84 2b       	or	r24, r20
    138c:	95 2b       	or	r25, r21
    138e:	a6 2b       	or	r26, r22
    1390:	b7 2b       	or	r27, r23
    1392:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1396:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    139a:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    139e:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    13a2:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <mtable+0x12>
    13a6:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <mtable+0x13>
    13aa:	30 97       	sbiw	r30, 0x00	; 0
    13ac:	39 f0       	breq	.+14     	; 0x13bc <__vector_14+0xb2>
    13ae:	69 e0       	ldi	r22, 0x09	; 9
    13b0:	70 e0       	ldi	r23, 0x00	; 0
    13b2:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <otable+0x12>
    13b6:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <otable+0x13>
    13ba:	09 95       	icall
    13bc:	a9 db       	rcall	.-2222   	; 0xb10 <schedule>
    13be:	ff 91       	pop	r31
    13c0:	ef 91       	pop	r30
    13c2:	bf 91       	pop	r27
    13c4:	af 91       	pop	r26
    13c6:	9f 91       	pop	r25
    13c8:	8f 91       	pop	r24
    13ca:	7f 91       	pop	r23
    13cc:	6f 91       	pop	r22
    13ce:	5f 91       	pop	r21
    13d0:	4f 91       	pop	r20
    13d2:	3f 91       	pop	r19
    13d4:	2f 91       	pop	r18
    13d6:	0f 90       	pop	r0
    13d8:	0f be       	out	0x3f, r0	; 63
    13da:	0f 90       	pop	r0
    13dc:	1f 90       	pop	r1
    13de:	18 95       	reti

000013e0 <__vector_15>:
    13e0:	1f 92       	push	r1
    13e2:	0f 92       	push	r0
    13e4:	0f b6       	in	r0, 0x3f	; 63
    13e6:	0f 92       	push	r0
    13e8:	11 24       	eor	r1, r1
    13ea:	2f 93       	push	r18
    13ec:	3f 93       	push	r19
    13ee:	4f 93       	push	r20
    13f0:	5f 93       	push	r21
    13f2:	6f 93       	push	r22
    13f4:	7f 93       	push	r23
    13f6:	8f 93       	push	r24
    13f8:	9f 93       	push	r25
    13fa:	af 93       	push	r26
    13fc:	bf 93       	push	r27
    13fe:	ef 93       	push	r30
    1400:	ff 93       	push	r31
    1402:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    1406:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    140a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    140e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1412:	c9 01       	movw	r24, r18
    1414:	03 2e       	mov	r0, r19
    1416:	00 0c       	add	r0, r0
    1418:	aa 0b       	sbc	r26, r26
    141a:	bb 0b       	sbc	r27, r27
    141c:	dc 01       	movw	r26, r24
    141e:	99 27       	eor	r25, r25
    1420:	88 27       	eor	r24, r24
    1422:	60 e0       	ldi	r22, 0x00	; 0
    1424:	70 e0       	ldi	r23, 0x00	; 0
    1426:	84 2b       	or	r24, r20
    1428:	95 2b       	or	r25, r21
    142a:	a6 2b       	or	r26, r22
    142c:	b7 2b       	or	r27, r23
    142e:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1432:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    1436:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    143a:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    143e:	b0 9b       	sbis	0x16, 0	; 22
    1440:	1b c0       	rjmp	.+54     	; 0x1478 <__vector_15+0x98>
    1442:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1446:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    144a:	c9 01       	movw	r24, r18
    144c:	01 96       	adiw	r24, 0x01	; 1
    144e:	09 2e       	mov	r0, r25
    1450:	00 0c       	add	r0, r0
    1452:	aa 0b       	sbc	r26, r26
    1454:	bb 0b       	sbc	r27, r27
    1456:	dc 01       	movw	r26, r24
    1458:	99 27       	eor	r25, r25
    145a:	88 27       	eor	r24, r24
    145c:	60 e0       	ldi	r22, 0x00	; 0
    145e:	70 e0       	ldi	r23, 0x00	; 0
    1460:	84 2b       	or	r24, r20
    1462:	95 2b       	or	r25, r21
    1464:	a6 2b       	or	r26, r22
    1466:	b7 2b       	or	r27, r23
    1468:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    146c:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    1470:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    1474:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    1478:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <mtable+0x14>
    147c:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <mtable+0x15>
    1480:	30 97       	sbiw	r30, 0x00	; 0
    1482:	39 f0       	breq	.+14     	; 0x1492 <__vector_15+0xb2>
    1484:	6a e0       	ldi	r22, 0x0A	; 10
    1486:	70 e0       	ldi	r23, 0x00	; 0
    1488:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <otable+0x14>
    148c:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <otable+0x15>
    1490:	09 95       	icall
    1492:	3e db       	rcall	.-2436   	; 0xb10 <schedule>
    1494:	ff 91       	pop	r31
    1496:	ef 91       	pop	r30
    1498:	bf 91       	pop	r27
    149a:	af 91       	pop	r26
    149c:	9f 91       	pop	r25
    149e:	8f 91       	pop	r24
    14a0:	7f 91       	pop	r23
    14a2:	6f 91       	pop	r22
    14a4:	5f 91       	pop	r21
    14a6:	4f 91       	pop	r20
    14a8:	3f 91       	pop	r19
    14aa:	2f 91       	pop	r18
    14ac:	0f 90       	pop	r0
    14ae:	0f be       	out	0x3f, r0	; 63
    14b0:	0f 90       	pop	r0
    14b2:	1f 90       	pop	r1
    14b4:	18 95       	reti

000014b6 <__vector_16>:
    14b6:	1f 92       	push	r1
    14b8:	0f 92       	push	r0
    14ba:	0f b6       	in	r0, 0x3f	; 63
    14bc:	0f 92       	push	r0
    14be:	11 24       	eor	r1, r1
    14c0:	2f 93       	push	r18
    14c2:	3f 93       	push	r19
    14c4:	4f 93       	push	r20
    14c6:	5f 93       	push	r21
    14c8:	6f 93       	push	r22
    14ca:	7f 93       	push	r23
    14cc:	8f 93       	push	r24
    14ce:	9f 93       	push	r25
    14d0:	af 93       	push	r26
    14d2:	bf 93       	push	r27
    14d4:	ef 93       	push	r30
    14d6:	ff 93       	push	r31
    14d8:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    14dc:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    14e0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    14e4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    14e8:	c9 01       	movw	r24, r18
    14ea:	03 2e       	mov	r0, r19
    14ec:	00 0c       	add	r0, r0
    14ee:	aa 0b       	sbc	r26, r26
    14f0:	bb 0b       	sbc	r27, r27
    14f2:	dc 01       	movw	r26, r24
    14f4:	99 27       	eor	r25, r25
    14f6:	88 27       	eor	r24, r24
    14f8:	60 e0       	ldi	r22, 0x00	; 0
    14fa:	70 e0       	ldi	r23, 0x00	; 0
    14fc:	84 2b       	or	r24, r20
    14fe:	95 2b       	or	r25, r21
    1500:	a6 2b       	or	r26, r22
    1502:	b7 2b       	or	r27, r23
    1504:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1508:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    150c:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    1510:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    1514:	b0 9b       	sbis	0x16, 0	; 22
    1516:	1b c0       	rjmp	.+54     	; 0x154e <__vector_16+0x98>
    1518:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    151c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1520:	c9 01       	movw	r24, r18
    1522:	01 96       	adiw	r24, 0x01	; 1
    1524:	09 2e       	mov	r0, r25
    1526:	00 0c       	add	r0, r0
    1528:	aa 0b       	sbc	r26, r26
    152a:	bb 0b       	sbc	r27, r27
    152c:	dc 01       	movw	r26, r24
    152e:	99 27       	eor	r25, r25
    1530:	88 27       	eor	r24, r24
    1532:	60 e0       	ldi	r22, 0x00	; 0
    1534:	70 e0       	ldi	r23, 0x00	; 0
    1536:	84 2b       	or	r24, r20
    1538:	95 2b       	or	r25, r21
    153a:	a6 2b       	or	r26, r22
    153c:	b7 2b       	or	r27, r23
    153e:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1542:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    1546:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    154a:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    154e:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <mtable+0x16>
    1552:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <mtable+0x17>
    1556:	30 97       	sbiw	r30, 0x00	; 0
    1558:	39 f0       	breq	.+14     	; 0x1568 <__vector_16+0xb2>
    155a:	6b e0       	ldi	r22, 0x0B	; 11
    155c:	70 e0       	ldi	r23, 0x00	; 0
    155e:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <otable+0x16>
    1562:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <otable+0x17>
    1566:	09 95       	icall
    1568:	d3 da       	rcall	.-2650   	; 0xb10 <schedule>
    156a:	ff 91       	pop	r31
    156c:	ef 91       	pop	r30
    156e:	bf 91       	pop	r27
    1570:	af 91       	pop	r26
    1572:	9f 91       	pop	r25
    1574:	8f 91       	pop	r24
    1576:	7f 91       	pop	r23
    1578:	6f 91       	pop	r22
    157a:	5f 91       	pop	r21
    157c:	4f 91       	pop	r20
    157e:	3f 91       	pop	r19
    1580:	2f 91       	pop	r18
    1582:	0f 90       	pop	r0
    1584:	0f be       	out	0x3f, r0	; 63
    1586:	0f 90       	pop	r0
    1588:	1f 90       	pop	r1
    158a:	18 95       	reti

0000158c <__vector_17>:
    158c:	1f 92       	push	r1
    158e:	0f 92       	push	r0
    1590:	0f b6       	in	r0, 0x3f	; 63
    1592:	0f 92       	push	r0
    1594:	11 24       	eor	r1, r1
    1596:	2f 93       	push	r18
    1598:	3f 93       	push	r19
    159a:	4f 93       	push	r20
    159c:	5f 93       	push	r21
    159e:	6f 93       	push	r22
    15a0:	7f 93       	push	r23
    15a2:	8f 93       	push	r24
    15a4:	9f 93       	push	r25
    15a6:	af 93       	push	r26
    15a8:	bf 93       	push	r27
    15aa:	ef 93       	push	r30
    15ac:	ff 93       	push	r31
    15ae:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    15b2:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    15b6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    15ba:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    15be:	c9 01       	movw	r24, r18
    15c0:	03 2e       	mov	r0, r19
    15c2:	00 0c       	add	r0, r0
    15c4:	aa 0b       	sbc	r26, r26
    15c6:	bb 0b       	sbc	r27, r27
    15c8:	dc 01       	movw	r26, r24
    15ca:	99 27       	eor	r25, r25
    15cc:	88 27       	eor	r24, r24
    15ce:	60 e0       	ldi	r22, 0x00	; 0
    15d0:	70 e0       	ldi	r23, 0x00	; 0
    15d2:	84 2b       	or	r24, r20
    15d4:	95 2b       	or	r25, r21
    15d6:	a6 2b       	or	r26, r22
    15d8:	b7 2b       	or	r27, r23
    15da:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    15de:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    15e2:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    15e6:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    15ea:	b0 9b       	sbis	0x16, 0	; 22
    15ec:	1b c0       	rjmp	.+54     	; 0x1624 <__vector_17+0x98>
    15ee:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    15f2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    15f6:	c9 01       	movw	r24, r18
    15f8:	01 96       	adiw	r24, 0x01	; 1
    15fa:	09 2e       	mov	r0, r25
    15fc:	00 0c       	add	r0, r0
    15fe:	aa 0b       	sbc	r26, r26
    1600:	bb 0b       	sbc	r27, r27
    1602:	dc 01       	movw	r26, r24
    1604:	99 27       	eor	r25, r25
    1606:	88 27       	eor	r24, r24
    1608:	60 e0       	ldi	r22, 0x00	; 0
    160a:	70 e0       	ldi	r23, 0x00	; 0
    160c:	84 2b       	or	r24, r20
    160e:	95 2b       	or	r25, r21
    1610:	a6 2b       	or	r26, r22
    1612:	b7 2b       	or	r27, r23
    1614:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1618:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    161c:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    1620:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    1624:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <mtable+0x18>
    1628:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <mtable+0x19>
    162c:	30 97       	sbiw	r30, 0x00	; 0
    162e:	39 f0       	breq	.+14     	; 0x163e <__vector_17+0xb2>
    1630:	6c e0       	ldi	r22, 0x0C	; 12
    1632:	70 e0       	ldi	r23, 0x00	; 0
    1634:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <otable+0x18>
    1638:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <otable+0x19>
    163c:	09 95       	icall
    163e:	68 da       	rcall	.-2864   	; 0xb10 <schedule>
    1640:	ff 91       	pop	r31
    1642:	ef 91       	pop	r30
    1644:	bf 91       	pop	r27
    1646:	af 91       	pop	r26
    1648:	9f 91       	pop	r25
    164a:	8f 91       	pop	r24
    164c:	7f 91       	pop	r23
    164e:	6f 91       	pop	r22
    1650:	5f 91       	pop	r21
    1652:	4f 91       	pop	r20
    1654:	3f 91       	pop	r19
    1656:	2f 91       	pop	r18
    1658:	0f 90       	pop	r0
    165a:	0f be       	out	0x3f, r0	; 63
    165c:	0f 90       	pop	r0
    165e:	1f 90       	pop	r1
    1660:	18 95       	reti

00001662 <__vector_18>:
    1662:	1f 92       	push	r1
    1664:	0f 92       	push	r0
    1666:	0f b6       	in	r0, 0x3f	; 63
    1668:	0f 92       	push	r0
    166a:	11 24       	eor	r1, r1
    166c:	2f 93       	push	r18
    166e:	3f 93       	push	r19
    1670:	4f 93       	push	r20
    1672:	5f 93       	push	r21
    1674:	6f 93       	push	r22
    1676:	7f 93       	push	r23
    1678:	8f 93       	push	r24
    167a:	9f 93       	push	r25
    167c:	af 93       	push	r26
    167e:	bf 93       	push	r27
    1680:	ef 93       	push	r30
    1682:	ff 93       	push	r31
    1684:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    1688:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    168c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1690:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1694:	c9 01       	movw	r24, r18
    1696:	03 2e       	mov	r0, r19
    1698:	00 0c       	add	r0, r0
    169a:	aa 0b       	sbc	r26, r26
    169c:	bb 0b       	sbc	r27, r27
    169e:	dc 01       	movw	r26, r24
    16a0:	99 27       	eor	r25, r25
    16a2:	88 27       	eor	r24, r24
    16a4:	60 e0       	ldi	r22, 0x00	; 0
    16a6:	70 e0       	ldi	r23, 0x00	; 0
    16a8:	84 2b       	or	r24, r20
    16aa:	95 2b       	or	r25, r21
    16ac:	a6 2b       	or	r26, r22
    16ae:	b7 2b       	or	r27, r23
    16b0:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    16b4:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    16b8:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    16bc:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    16c0:	b0 9b       	sbis	0x16, 0	; 22
    16c2:	1b c0       	rjmp	.+54     	; 0x16fa <__vector_18+0x98>
    16c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    16c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    16cc:	c9 01       	movw	r24, r18
    16ce:	01 96       	adiw	r24, 0x01	; 1
    16d0:	09 2e       	mov	r0, r25
    16d2:	00 0c       	add	r0, r0
    16d4:	aa 0b       	sbc	r26, r26
    16d6:	bb 0b       	sbc	r27, r27
    16d8:	dc 01       	movw	r26, r24
    16da:	99 27       	eor	r25, r25
    16dc:	88 27       	eor	r24, r24
    16de:	60 e0       	ldi	r22, 0x00	; 0
    16e0:	70 e0       	ldi	r23, 0x00	; 0
    16e2:	84 2b       	or	r24, r20
    16e4:	95 2b       	or	r25, r21
    16e6:	a6 2b       	or	r26, r22
    16e8:	b7 2b       	or	r27, r23
    16ea:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    16ee:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    16f2:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    16f6:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    16fa:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <mtable+0x1a>
    16fe:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <mtable+0x1b>
    1702:	30 97       	sbiw	r30, 0x00	; 0
    1704:	39 f0       	breq	.+14     	; 0x1714 <__vector_18+0xb2>
    1706:	6d e0       	ldi	r22, 0x0D	; 13
    1708:	70 e0       	ldi	r23, 0x00	; 0
    170a:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <otable+0x1a>
    170e:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <otable+0x1b>
    1712:	09 95       	icall
    1714:	fd d9       	rcall	.-3078   	; 0xb10 <schedule>
    1716:	ff 91       	pop	r31
    1718:	ef 91       	pop	r30
    171a:	bf 91       	pop	r27
    171c:	af 91       	pop	r26
    171e:	9f 91       	pop	r25
    1720:	8f 91       	pop	r24
    1722:	7f 91       	pop	r23
    1724:	6f 91       	pop	r22
    1726:	5f 91       	pop	r21
    1728:	4f 91       	pop	r20
    172a:	3f 91       	pop	r19
    172c:	2f 91       	pop	r18
    172e:	0f 90       	pop	r0
    1730:	0f be       	out	0x3f, r0	; 63
    1732:	0f 90       	pop	r0
    1734:	1f 90       	pop	r1
    1736:	18 95       	reti

00001738 <__vector_19>:
    1738:	1f 92       	push	r1
    173a:	0f 92       	push	r0
    173c:	0f b6       	in	r0, 0x3f	; 63
    173e:	0f 92       	push	r0
    1740:	11 24       	eor	r1, r1
    1742:	2f 93       	push	r18
    1744:	3f 93       	push	r19
    1746:	4f 93       	push	r20
    1748:	5f 93       	push	r21
    174a:	6f 93       	push	r22
    174c:	7f 93       	push	r23
    174e:	8f 93       	push	r24
    1750:	9f 93       	push	r25
    1752:	af 93       	push	r26
    1754:	bf 93       	push	r27
    1756:	ef 93       	push	r30
    1758:	ff 93       	push	r31
    175a:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    175e:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    1762:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1766:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    176a:	c9 01       	movw	r24, r18
    176c:	03 2e       	mov	r0, r19
    176e:	00 0c       	add	r0, r0
    1770:	aa 0b       	sbc	r26, r26
    1772:	bb 0b       	sbc	r27, r27
    1774:	dc 01       	movw	r26, r24
    1776:	99 27       	eor	r25, r25
    1778:	88 27       	eor	r24, r24
    177a:	60 e0       	ldi	r22, 0x00	; 0
    177c:	70 e0       	ldi	r23, 0x00	; 0
    177e:	84 2b       	or	r24, r20
    1780:	95 2b       	or	r25, r21
    1782:	a6 2b       	or	r26, r22
    1784:	b7 2b       	or	r27, r23
    1786:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    178a:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    178e:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    1792:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    1796:	b0 9b       	sbis	0x16, 0	; 22
    1798:	1b c0       	rjmp	.+54     	; 0x17d0 <__vector_19+0x98>
    179a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    179e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    17a2:	c9 01       	movw	r24, r18
    17a4:	01 96       	adiw	r24, 0x01	; 1
    17a6:	09 2e       	mov	r0, r25
    17a8:	00 0c       	add	r0, r0
    17aa:	aa 0b       	sbc	r26, r26
    17ac:	bb 0b       	sbc	r27, r27
    17ae:	dc 01       	movw	r26, r24
    17b0:	99 27       	eor	r25, r25
    17b2:	88 27       	eor	r24, r24
    17b4:	60 e0       	ldi	r22, 0x00	; 0
    17b6:	70 e0       	ldi	r23, 0x00	; 0
    17b8:	84 2b       	or	r24, r20
    17ba:	95 2b       	or	r25, r21
    17bc:	a6 2b       	or	r26, r22
    17be:	b7 2b       	or	r27, r23
    17c0:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    17c4:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    17c8:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    17cc:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    17d0:	e0 91 16 02 	lds	r30, 0x0216	; 0x800216 <mtable+0x1c>
    17d4:	f0 91 17 02 	lds	r31, 0x0217	; 0x800217 <mtable+0x1d>
    17d8:	30 97       	sbiw	r30, 0x00	; 0
    17da:	39 f0       	breq	.+14     	; 0x17ea <__vector_19+0xb2>
    17dc:	6e e0       	ldi	r22, 0x0E	; 14
    17de:	70 e0       	ldi	r23, 0x00	; 0
    17e0:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <otable+0x1c>
    17e4:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <otable+0x1d>
    17e8:	09 95       	icall
    17ea:	92 d9       	rcall	.-3292   	; 0xb10 <schedule>
    17ec:	ff 91       	pop	r31
    17ee:	ef 91       	pop	r30
    17f0:	bf 91       	pop	r27
    17f2:	af 91       	pop	r26
    17f4:	9f 91       	pop	r25
    17f6:	8f 91       	pop	r24
    17f8:	7f 91       	pop	r23
    17fa:	6f 91       	pop	r22
    17fc:	5f 91       	pop	r21
    17fe:	4f 91       	pop	r20
    1800:	3f 91       	pop	r19
    1802:	2f 91       	pop	r18
    1804:	0f 90       	pop	r0
    1806:	0f be       	out	0x3f, r0	; 63
    1808:	0f 90       	pop	r0
    180a:	1f 90       	pop	r1
    180c:	18 95       	reti

0000180e <__vector_20>:
    180e:	1f 92       	push	r1
    1810:	0f 92       	push	r0
    1812:	0f b6       	in	r0, 0x3f	; 63
    1814:	0f 92       	push	r0
    1816:	11 24       	eor	r1, r1
    1818:	2f 93       	push	r18
    181a:	3f 93       	push	r19
    181c:	4f 93       	push	r20
    181e:	5f 93       	push	r21
    1820:	6f 93       	push	r22
    1822:	7f 93       	push	r23
    1824:	8f 93       	push	r24
    1826:	9f 93       	push	r25
    1828:	af 93       	push	r26
    182a:	bf 93       	push	r27
    182c:	ef 93       	push	r30
    182e:	ff 93       	push	r31
    1830:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    1834:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    1838:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    183c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1840:	c9 01       	movw	r24, r18
    1842:	03 2e       	mov	r0, r19
    1844:	00 0c       	add	r0, r0
    1846:	aa 0b       	sbc	r26, r26
    1848:	bb 0b       	sbc	r27, r27
    184a:	dc 01       	movw	r26, r24
    184c:	99 27       	eor	r25, r25
    184e:	88 27       	eor	r24, r24
    1850:	60 e0       	ldi	r22, 0x00	; 0
    1852:	70 e0       	ldi	r23, 0x00	; 0
    1854:	84 2b       	or	r24, r20
    1856:	95 2b       	or	r25, r21
    1858:	a6 2b       	or	r26, r22
    185a:	b7 2b       	or	r27, r23
    185c:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1860:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    1864:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    1868:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    186c:	b0 9b       	sbis	0x16, 0	; 22
    186e:	1b c0       	rjmp	.+54     	; 0x18a6 <__vector_20+0x98>
    1870:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1874:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1878:	c9 01       	movw	r24, r18
    187a:	01 96       	adiw	r24, 0x01	; 1
    187c:	09 2e       	mov	r0, r25
    187e:	00 0c       	add	r0, r0
    1880:	aa 0b       	sbc	r26, r26
    1882:	bb 0b       	sbc	r27, r27
    1884:	dc 01       	movw	r26, r24
    1886:	99 27       	eor	r25, r25
    1888:	88 27       	eor	r24, r24
    188a:	60 e0       	ldi	r22, 0x00	; 0
    188c:	70 e0       	ldi	r23, 0x00	; 0
    188e:	84 2b       	or	r24, r20
    1890:	95 2b       	or	r25, r21
    1892:	a6 2b       	or	r26, r22
    1894:	b7 2b       	or	r27, r23
    1896:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    189a:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    189e:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    18a2:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    18a6:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <mtable+0x1e>
    18aa:	f0 91 19 02 	lds	r31, 0x0219	; 0x800219 <mtable+0x1f>
    18ae:	30 97       	sbiw	r30, 0x00	; 0
    18b0:	39 f0       	breq	.+14     	; 0x18c0 <__vector_20+0xb2>
    18b2:	6f e0       	ldi	r22, 0x0F	; 15
    18b4:	70 e0       	ldi	r23, 0x00	; 0
    18b6:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <otable+0x1e>
    18ba:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <otable+0x1f>
    18be:	09 95       	icall
    18c0:	27 d9       	rcall	.-3506   	; 0xb10 <schedule>
    18c2:	ff 91       	pop	r31
    18c4:	ef 91       	pop	r30
    18c6:	bf 91       	pop	r27
    18c8:	af 91       	pop	r26
    18ca:	9f 91       	pop	r25
    18cc:	8f 91       	pop	r24
    18ce:	7f 91       	pop	r23
    18d0:	6f 91       	pop	r22
    18d2:	5f 91       	pop	r21
    18d4:	4f 91       	pop	r20
    18d6:	3f 91       	pop	r19
    18d8:	2f 91       	pop	r18
    18da:	0f 90       	pop	r0
    18dc:	0f be       	out	0x3f, r0	; 63
    18de:	0f 90       	pop	r0
    18e0:	1f 90       	pop	r1
    18e2:	18 95       	reti

000018e4 <__vector_21>:
    18e4:	1f 92       	push	r1
    18e6:	0f 92       	push	r0
    18e8:	0f b6       	in	r0, 0x3f	; 63
    18ea:	0f 92       	push	r0
    18ec:	11 24       	eor	r1, r1
    18ee:	2f 93       	push	r18
    18f0:	3f 93       	push	r19
    18f2:	4f 93       	push	r20
    18f4:	5f 93       	push	r21
    18f6:	6f 93       	push	r22
    18f8:	7f 93       	push	r23
    18fa:	8f 93       	push	r24
    18fc:	9f 93       	push	r25
    18fe:	af 93       	push	r26
    1900:	bf 93       	push	r27
    1902:	ef 93       	push	r30
    1904:	ff 93       	push	r31
    1906:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    190a:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    190e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1912:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1916:	c9 01       	movw	r24, r18
    1918:	03 2e       	mov	r0, r19
    191a:	00 0c       	add	r0, r0
    191c:	aa 0b       	sbc	r26, r26
    191e:	bb 0b       	sbc	r27, r27
    1920:	dc 01       	movw	r26, r24
    1922:	99 27       	eor	r25, r25
    1924:	88 27       	eor	r24, r24
    1926:	60 e0       	ldi	r22, 0x00	; 0
    1928:	70 e0       	ldi	r23, 0x00	; 0
    192a:	84 2b       	or	r24, r20
    192c:	95 2b       	or	r25, r21
    192e:	a6 2b       	or	r26, r22
    1930:	b7 2b       	or	r27, r23
    1932:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1936:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    193a:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    193e:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    1942:	b0 9b       	sbis	0x16, 0	; 22
    1944:	1b c0       	rjmp	.+54     	; 0x197c <__vector_21+0x98>
    1946:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    194a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    194e:	c9 01       	movw	r24, r18
    1950:	01 96       	adiw	r24, 0x01	; 1
    1952:	09 2e       	mov	r0, r25
    1954:	00 0c       	add	r0, r0
    1956:	aa 0b       	sbc	r26, r26
    1958:	bb 0b       	sbc	r27, r27
    195a:	dc 01       	movw	r26, r24
    195c:	99 27       	eor	r25, r25
    195e:	88 27       	eor	r24, r24
    1960:	60 e0       	ldi	r22, 0x00	; 0
    1962:	70 e0       	ldi	r23, 0x00	; 0
    1964:	84 2b       	or	r24, r20
    1966:	95 2b       	or	r25, r21
    1968:	a6 2b       	or	r26, r22
    196a:	b7 2b       	or	r27, r23
    196c:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1970:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    1974:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    1978:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    197c:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <mtable+0x20>
    1980:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <mtable+0x21>
    1984:	30 97       	sbiw	r30, 0x00	; 0
    1986:	39 f0       	breq	.+14     	; 0x1996 <__vector_21+0xb2>
    1988:	60 e1       	ldi	r22, 0x10	; 16
    198a:	70 e0       	ldi	r23, 0x00	; 0
    198c:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <otable+0x20>
    1990:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <otable+0x21>
    1994:	09 95       	icall
    1996:	bc d8       	rcall	.-3720   	; 0xb10 <schedule>
    1998:	ff 91       	pop	r31
    199a:	ef 91       	pop	r30
    199c:	bf 91       	pop	r27
    199e:	af 91       	pop	r26
    19a0:	9f 91       	pop	r25
    19a2:	8f 91       	pop	r24
    19a4:	7f 91       	pop	r23
    19a6:	6f 91       	pop	r22
    19a8:	5f 91       	pop	r21
    19aa:	4f 91       	pop	r20
    19ac:	3f 91       	pop	r19
    19ae:	2f 91       	pop	r18
    19b0:	0f 90       	pop	r0
    19b2:	0f be       	out	0x3f, r0	; 63
    19b4:	0f 90       	pop	r0
    19b6:	1f 90       	pop	r1
    19b8:	18 95       	reti

000019ba <__vector_22>:
    19ba:	1f 92       	push	r1
    19bc:	0f 92       	push	r0
    19be:	0f b6       	in	r0, 0x3f	; 63
    19c0:	0f 92       	push	r0
    19c2:	11 24       	eor	r1, r1
    19c4:	2f 93       	push	r18
    19c6:	3f 93       	push	r19
    19c8:	4f 93       	push	r20
    19ca:	5f 93       	push	r21
    19cc:	6f 93       	push	r22
    19ce:	7f 93       	push	r23
    19d0:	8f 93       	push	r24
    19d2:	9f 93       	push	r25
    19d4:	af 93       	push	r26
    19d6:	bf 93       	push	r27
    19d8:	ef 93       	push	r30
    19da:	ff 93       	push	r31
    19dc:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    19e0:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    19e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    19e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    19ec:	c9 01       	movw	r24, r18
    19ee:	03 2e       	mov	r0, r19
    19f0:	00 0c       	add	r0, r0
    19f2:	aa 0b       	sbc	r26, r26
    19f4:	bb 0b       	sbc	r27, r27
    19f6:	dc 01       	movw	r26, r24
    19f8:	99 27       	eor	r25, r25
    19fa:	88 27       	eor	r24, r24
    19fc:	60 e0       	ldi	r22, 0x00	; 0
    19fe:	70 e0       	ldi	r23, 0x00	; 0
    1a00:	84 2b       	or	r24, r20
    1a02:	95 2b       	or	r25, r21
    1a04:	a6 2b       	or	r26, r22
    1a06:	b7 2b       	or	r27, r23
    1a08:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1a0c:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    1a10:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    1a14:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    1a18:	b0 9b       	sbis	0x16, 0	; 22
    1a1a:	1b c0       	rjmp	.+54     	; 0x1a52 <__vector_22+0x98>
    1a1c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a20:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a24:	c9 01       	movw	r24, r18
    1a26:	01 96       	adiw	r24, 0x01	; 1
    1a28:	09 2e       	mov	r0, r25
    1a2a:	00 0c       	add	r0, r0
    1a2c:	aa 0b       	sbc	r26, r26
    1a2e:	bb 0b       	sbc	r27, r27
    1a30:	dc 01       	movw	r26, r24
    1a32:	99 27       	eor	r25, r25
    1a34:	88 27       	eor	r24, r24
    1a36:	60 e0       	ldi	r22, 0x00	; 0
    1a38:	70 e0       	ldi	r23, 0x00	; 0
    1a3a:	84 2b       	or	r24, r20
    1a3c:	95 2b       	or	r25, r21
    1a3e:	a6 2b       	or	r26, r22
    1a40:	b7 2b       	or	r27, r23
    1a42:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <timestamp>
    1a46:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <timestamp+0x1>
    1a4a:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <timestamp+0x2>
    1a4e:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <timestamp+0x3>
    1a52:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <mtable+0x22>
    1a56:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <mtable+0x23>
    1a5a:	30 97       	sbiw	r30, 0x00	; 0
    1a5c:	39 f0       	breq	.+14     	; 0x1a6c <__vector_22+0xb2>
    1a5e:	61 e1       	ldi	r22, 0x11	; 17
    1a60:	70 e0       	ldi	r23, 0x00	; 0
    1a62:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <otable+0x22>
    1a66:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <otable+0x23>
    1a6a:	09 95       	icall
    1a6c:	51 d8       	rcall	.-3934   	; 0xb10 <schedule>
    1a6e:	ff 91       	pop	r31
    1a70:	ef 91       	pop	r30
    1a72:	bf 91       	pop	r27
    1a74:	af 91       	pop	r26
    1a76:	9f 91       	pop	r25
    1a78:	8f 91       	pop	r24
    1a7a:	7f 91       	pop	r23
    1a7c:	6f 91       	pop	r22
    1a7e:	5f 91       	pop	r21
    1a80:	4f 91       	pop	r20
    1a82:	3f 91       	pop	r19
    1a84:	2f 91       	pop	r18
    1a86:	0f 90       	pop	r0
    1a88:	0f be       	out	0x3f, r0	; 63
    1a8a:	0f 90       	pop	r0
    1a8c:	1f 90       	pop	r1
    1a8e:	18 95       	reti

00001a90 <enqueueByDeadline>:
    1a90:	ef 92       	push	r14
    1a92:	ff 92       	push	r15
    1a94:	0f 93       	push	r16
    1a96:	1f 93       	push	r17
    1a98:	cf 93       	push	r28
    1a9a:	df 93       	push	r29
    1a9c:	7b 01       	movw	r14, r22
    1a9e:	eb 01       	movw	r28, r22
    1aa0:	a8 81       	ld	r26, Y
    1aa2:	b9 81       	ldd	r27, Y+1	; 0x01
    1aa4:	10 97       	sbiw	r26, 0x00	; 0
    1aa6:	61 f1       	breq	.+88     	; 0x1b00 <enqueueByDeadline+0x70>
    1aa8:	fc 01       	movw	r30, r24
    1aaa:	06 81       	ldd	r16, Z+6	; 0x06
    1aac:	17 81       	ldd	r17, Z+7	; 0x07
    1aae:	20 85       	ldd	r18, Z+8	; 0x08
    1ab0:	31 85       	ldd	r19, Z+9	; 0x09
    1ab2:	16 96       	adiw	r26, 0x06	; 6
    1ab4:	4d 91       	ld	r20, X+
    1ab6:	5d 91       	ld	r21, X+
    1ab8:	6d 91       	ld	r22, X+
    1aba:	7c 91       	ld	r23, X
    1abc:	19 97       	sbiw	r26, 0x09	; 9
    1abe:	04 17       	cp	r16, r20
    1ac0:	15 07       	cpc	r17, r21
    1ac2:	26 07       	cpc	r18, r22
    1ac4:	37 07       	cpc	r19, r23
    1ac6:	14 f4       	brge	.+4      	; 0x1acc <enqueueByDeadline+0x3c>
    1ac8:	1b c0       	rjmp	.+54     	; 0x1b00 <enqueueByDeadline+0x70>
    1aca:	df 01       	movw	r26, r30
    1acc:	ed 91       	ld	r30, X+
    1ace:	fc 91       	ld	r31, X
    1ad0:	11 97       	sbiw	r26, 0x01	; 1
    1ad2:	30 97       	sbiw	r30, 0x00	; 0
    1ad4:	49 f0       	breq	.+18     	; 0x1ae8 <enqueueByDeadline+0x58>
    1ad6:	46 81       	ldd	r20, Z+6	; 0x06
    1ad8:	57 81       	ldd	r21, Z+7	; 0x07
    1ada:	60 85       	ldd	r22, Z+8	; 0x08
    1adc:	71 85       	ldd	r23, Z+9	; 0x09
    1ade:	04 17       	cp	r16, r20
    1ae0:	15 07       	cpc	r17, r21
    1ae2:	26 07       	cpc	r18, r22
    1ae4:	37 07       	cpc	r19, r23
    1ae6:	8c f7       	brge	.-30     	; 0x1aca <enqueueByDeadline+0x3a>
    1ae8:	ec 01       	movw	r28, r24
    1aea:	f9 83       	std	Y+1, r31	; 0x01
    1aec:	e8 83       	st	Y, r30
    1aee:	10 97       	sbiw	r26, 0x00	; 0
    1af0:	21 f4       	brne	.+8      	; 0x1afa <enqueueByDeadline+0x6a>
    1af2:	f7 01       	movw	r30, r14
    1af4:	91 83       	std	Z+1, r25	; 0x01
    1af6:	80 83       	st	Z, r24
    1af8:	07 c0       	rjmp	.+14     	; 0x1b08 <enqueueByDeadline+0x78>
    1afa:	8d 93       	st	X+, r24
    1afc:	9c 93       	st	X, r25
    1afe:	04 c0       	rjmp	.+8      	; 0x1b08 <enqueueByDeadline+0x78>
    1b00:	ec 01       	movw	r28, r24
    1b02:	b9 83       	std	Y+1, r27	; 0x01
    1b04:	a8 83       	st	Y, r26
    1b06:	f5 cf       	rjmp	.-22     	; 0x1af2 <enqueueByDeadline+0x62>
    1b08:	df 91       	pop	r29
    1b0a:	cf 91       	pop	r28
    1b0c:	1f 91       	pop	r17
    1b0e:	0f 91       	pop	r16
    1b10:	ff 90       	pop	r15
    1b12:	ef 90       	pop	r14
    1b14:	08 95       	ret

00001b16 <enqueueByBaseline>:
    1b16:	ef 92       	push	r14
    1b18:	ff 92       	push	r15
    1b1a:	0f 93       	push	r16
    1b1c:	1f 93       	push	r17
    1b1e:	cf 93       	push	r28
    1b20:	df 93       	push	r29
    1b22:	7b 01       	movw	r14, r22
    1b24:	eb 01       	movw	r28, r22
    1b26:	a8 81       	ld	r26, Y
    1b28:	b9 81       	ldd	r27, Y+1	; 0x01
    1b2a:	10 97       	sbiw	r26, 0x00	; 0
    1b2c:	61 f1       	breq	.+88     	; 0x1b86 <enqueueByBaseline+0x70>
    1b2e:	fc 01       	movw	r30, r24
    1b30:	02 81       	ldd	r16, Z+2	; 0x02
    1b32:	13 81       	ldd	r17, Z+3	; 0x03
    1b34:	24 81       	ldd	r18, Z+4	; 0x04
    1b36:	35 81       	ldd	r19, Z+5	; 0x05
    1b38:	12 96       	adiw	r26, 0x02	; 2
    1b3a:	4d 91       	ld	r20, X+
    1b3c:	5d 91       	ld	r21, X+
    1b3e:	6d 91       	ld	r22, X+
    1b40:	7c 91       	ld	r23, X
    1b42:	15 97       	sbiw	r26, 0x05	; 5
    1b44:	04 17       	cp	r16, r20
    1b46:	15 07       	cpc	r17, r21
    1b48:	26 07       	cpc	r18, r22
    1b4a:	37 07       	cpc	r19, r23
    1b4c:	14 f4       	brge	.+4      	; 0x1b52 <enqueueByBaseline+0x3c>
    1b4e:	1b c0       	rjmp	.+54     	; 0x1b86 <enqueueByBaseline+0x70>
    1b50:	df 01       	movw	r26, r30
    1b52:	ed 91       	ld	r30, X+
    1b54:	fc 91       	ld	r31, X
    1b56:	11 97       	sbiw	r26, 0x01	; 1
    1b58:	30 97       	sbiw	r30, 0x00	; 0
    1b5a:	49 f0       	breq	.+18     	; 0x1b6e <enqueueByBaseline+0x58>
    1b5c:	42 81       	ldd	r20, Z+2	; 0x02
    1b5e:	53 81       	ldd	r21, Z+3	; 0x03
    1b60:	64 81       	ldd	r22, Z+4	; 0x04
    1b62:	75 81       	ldd	r23, Z+5	; 0x05
    1b64:	04 17       	cp	r16, r20
    1b66:	15 07       	cpc	r17, r21
    1b68:	26 07       	cpc	r18, r22
    1b6a:	37 07       	cpc	r19, r23
    1b6c:	8c f7       	brge	.-30     	; 0x1b50 <enqueueByBaseline+0x3a>
    1b6e:	ec 01       	movw	r28, r24
    1b70:	f9 83       	std	Y+1, r31	; 0x01
    1b72:	e8 83       	st	Y, r30
    1b74:	10 97       	sbiw	r26, 0x00	; 0
    1b76:	21 f4       	brne	.+8      	; 0x1b80 <enqueueByBaseline+0x6a>
    1b78:	f7 01       	movw	r30, r14
    1b7a:	91 83       	std	Z+1, r25	; 0x01
    1b7c:	80 83       	st	Z, r24
    1b7e:	07 c0       	rjmp	.+14     	; 0x1b8e <enqueueByBaseline+0x78>
    1b80:	8d 93       	st	X+, r24
    1b82:	9c 93       	st	X, r25
    1b84:	04 c0       	rjmp	.+8      	; 0x1b8e <enqueueByBaseline+0x78>
    1b86:	ec 01       	movw	r28, r24
    1b88:	b9 83       	std	Y+1, r27	; 0x01
    1b8a:	a8 83       	st	Y, r26
    1b8c:	f5 cf       	rjmp	.-22     	; 0x1b78 <enqueueByBaseline+0x62>
    1b8e:	df 91       	pop	r29
    1b90:	cf 91       	pop	r28
    1b92:	1f 91       	pop	r17
    1b94:	0f 91       	pop	r16
    1b96:	ff 90       	pop	r15
    1b98:	ef 90       	pop	r14
    1b9a:	08 95       	ret

00001b9c <dequeue>:
    1b9c:	dc 01       	movw	r26, r24
    1b9e:	ed 91       	ld	r30, X+
    1ba0:	fc 91       	ld	r31, X
    1ba2:	11 97       	sbiw	r26, 0x01	; 1
    1ba4:	30 97       	sbiw	r30, 0x00	; 0
    1ba6:	59 f4       	brne	.+22     	; 0x1bbe <dequeue+0x22>
    1ba8:	8f ef       	ldi	r24, 0xFF	; 255
    1baa:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    1bae:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    1bb2:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    1bb6:	81 e0       	ldi	r24, 0x01	; 1
    1bb8:	83 bf       	out	0x33, r24	; 51
    1bba:	88 95       	sleep
    1bbc:	fd cf       	rjmp	.-6      	; 0x1bb8 <dequeue+0x1c>
    1bbe:	20 81       	ld	r18, Z
    1bc0:	31 81       	ldd	r19, Z+1	; 0x01
    1bc2:	2d 93       	st	X+, r18
    1bc4:	3c 93       	st	X, r19
    1bc6:	cf 01       	movw	r24, r30
    1bc8:	08 95       	ret

00001bca <__vector_9>:
    1bca:	1f 92       	push	r1
    1bcc:	0f 92       	push	r0
    1bce:	0f b6       	in	r0, 0x3f	; 63
    1bd0:	0f 92       	push	r0
    1bd2:	11 24       	eor	r1, r1
    1bd4:	2f 93       	push	r18
    1bd6:	3f 93       	push	r19
    1bd8:	4f 93       	push	r20
    1bda:	5f 93       	push	r21
    1bdc:	6f 93       	push	r22
    1bde:	7f 93       	push	r23
    1be0:	8f 93       	push	r24
    1be2:	9f 93       	push	r25
    1be4:	ef 93       	push	r30
    1be6:	ff 93       	push	r31
    1be8:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <__data_end>
    1bec:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <__data_end+0x1>
    1bf0:	01 96       	adiw	r24, 0x01	; 1
    1bf2:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <__data_end+0x1>
    1bf6:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <__data_end>
    1bfa:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <timerQ>
    1bfe:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <timerQ+0x1>
    1c02:	30 97       	sbiw	r30, 0x00	; 0
    1c04:	01 f1       	breq	.+64     	; 0x1c46 <__vector_9+0x7c>
    1c06:	42 81       	ldd	r20, Z+2	; 0x02
    1c08:	53 81       	ldd	r21, Z+3	; 0x03
    1c0a:	64 81       	ldd	r22, Z+4	; 0x04
    1c0c:	75 81       	ldd	r23, Z+5	; 0x05
    1c0e:	86 17       	cp	r24, r22
    1c10:	97 07       	cpc	r25, r23
    1c12:	c9 f4       	brne	.+50     	; 0x1c46 <__vector_9+0x7c>
    1c14:	ca 01       	movw	r24, r20
    1c16:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c1a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c1e:	42 1b       	sub	r20, r18
    1c20:	53 0b       	sbc	r21, r19
    1c22:	41 30       	cpi	r20, 0x01	; 1
    1c24:	51 05       	cpc	r21, r1
    1c26:	29 f4       	brne	.+10     	; 0x1c32 <__vector_9+0x68>
    1c28:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c2c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c30:	01 96       	adiw	r24, 0x01	; 1
    1c32:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1c36:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1c3a:	ef e6       	ldi	r30, 0x6F	; 111
    1c3c:	f0 e0       	ldi	r31, 0x00	; 0
    1c3e:	80 81       	ld	r24, Z
    1c40:	82 60       	ori	r24, 0x02	; 2
    1c42:	80 83       	st	Z, r24
    1c44:	05 c0       	rjmp	.+10     	; 0x1c50 <__vector_9+0x86>
    1c46:	ef e6       	ldi	r30, 0x6F	; 111
    1c48:	f0 e0       	ldi	r31, 0x00	; 0
    1c4a:	80 81       	ld	r24, Z
    1c4c:	8d 7f       	andi	r24, 0xFD	; 253
    1c4e:	80 83       	st	Z, r24
    1c50:	ff 91       	pop	r31
    1c52:	ef 91       	pop	r30
    1c54:	9f 91       	pop	r25
    1c56:	8f 91       	pop	r24
    1c58:	7f 91       	pop	r23
    1c5a:	6f 91       	pop	r22
    1c5c:	5f 91       	pop	r21
    1c5e:	4f 91       	pop	r20
    1c60:	3f 91       	pop	r19
    1c62:	2f 91       	pop	r18
    1c64:	0f 90       	pop	r0
    1c66:	0f be       	out	0x3f, r0	; 63
    1c68:	0f 90       	pop	r0
    1c6a:	1f 90       	pop	r1
    1c6c:	18 95       	reti

00001c6e <__vector_7>:
    1c6e:	1f 92       	push	r1
    1c70:	0f 92       	push	r0
    1c72:	0f b6       	in	r0, 0x3f	; 63
    1c74:	0f 92       	push	r0
    1c76:	11 24       	eor	r1, r1
    1c78:	cf 92       	push	r12
    1c7a:	df 92       	push	r13
    1c7c:	ef 92       	push	r14
    1c7e:	ff 92       	push	r15
    1c80:	2f 93       	push	r18
    1c82:	3f 93       	push	r19
    1c84:	4f 93       	push	r20
    1c86:	5f 93       	push	r21
    1c88:	6f 93       	push	r22
    1c8a:	7f 93       	push	r23
    1c8c:	8f 93       	push	r24
    1c8e:	9f 93       	push	r25
    1c90:	af 93       	push	r26
    1c92:	bf 93       	push	r27
    1c94:	ef 93       	push	r30
    1c96:	ff 93       	push	r31
    1c98:	c0 90 58 01 	lds	r12, 0x0158	; 0x800158 <__data_end>
    1c9c:	d0 90 59 01 	lds	r13, 0x0159	; 0x800159 <__data_end+0x1>
    1ca0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1ca4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1ca8:	b0 99       	sbic	0x16, 0	; 22
    1caa:	0f c0       	rjmp	.+30     	; 0x1cca <__vector_7+0x5c>
    1cac:	0d 2c       	mov	r0, r13
    1cae:	00 0c       	add	r0, r0
    1cb0:	ee 08       	sbc	r14, r14
    1cb2:	ff 08       	sbc	r15, r15
    1cb4:	d6 01       	movw	r26, r12
    1cb6:	99 27       	eor	r25, r25
    1cb8:	88 27       	eor	r24, r24
    1cba:	69 01       	movw	r12, r18
    1cbc:	e1 2c       	mov	r14, r1
    1cbe:	f1 2c       	mov	r15, r1
    1cc0:	c8 2a       	or	r12, r24
    1cc2:	d9 2a       	or	r13, r25
    1cc4:	ea 2a       	or	r14, r26
    1cc6:	fb 2a       	or	r15, r27
    1cc8:	15 c0       	rjmp	.+42     	; 0x1cf4 <__vector_7+0x86>
    1cca:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1cce:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1cd2:	8f ef       	ldi	r24, 0xFF	; 255
    1cd4:	c8 1a       	sub	r12, r24
    1cd6:	d8 0a       	sbc	r13, r24
    1cd8:	0d 2c       	mov	r0, r13
    1cda:	00 0c       	add	r0, r0
    1cdc:	ee 08       	sbc	r14, r14
    1cde:	ff 08       	sbc	r15, r15
    1ce0:	d6 01       	movw	r26, r12
    1ce2:	99 27       	eor	r25, r25
    1ce4:	88 27       	eor	r24, r24
    1ce6:	69 01       	movw	r12, r18
    1ce8:	e1 2c       	mov	r14, r1
    1cea:	f1 2c       	mov	r15, r1
    1cec:	c8 2a       	or	r12, r24
    1cee:	d9 2a       	or	r13, r25
    1cf0:	ea 2a       	or	r14, r26
    1cf2:	fb 2a       	or	r15, r27
    1cf4:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <timerQ>
    1cf8:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <timerQ+0x1>
    1cfc:	30 97       	sbiw	r30, 0x00	; 0
    1cfe:	09 f4       	brne	.+2      	; 0x1d02 <__vector_7+0x94>
    1d00:	40 c0       	rjmp	.+128    	; 0x1d82 <__vector_7+0x114>
    1d02:	82 81       	ldd	r24, Z+2	; 0x02
    1d04:	93 81       	ldd	r25, Z+3	; 0x03
    1d06:	a4 81       	ldd	r26, Z+4	; 0x04
    1d08:	b5 81       	ldd	r27, Z+5	; 0x05
    1d0a:	8c 19       	sub	r24, r12
    1d0c:	9d 09       	sbc	r25, r13
    1d0e:	ae 09       	sbc	r26, r14
    1d10:	bf 09       	sbc	r27, r15
    1d12:	18 16       	cp	r1, r24
    1d14:	19 06       	cpc	r1, r25
    1d16:	1a 06       	cpc	r1, r26
    1d18:	1b 06       	cpc	r1, r27
    1d1a:	dc f1       	brlt	.+118    	; 0x1d92 <__vector_7+0x124>
    1d1c:	8e e5       	ldi	r24, 0x5E	; 94
    1d1e:	91 e0       	ldi	r25, 0x01	; 1
    1d20:	3d df       	rcall	.-390    	; 0x1b9c <dequeue>
    1d22:	60 e6       	ldi	r22, 0x60	; 96
    1d24:	71 e0       	ldi	r23, 0x01	; 1
    1d26:	b4 de       	rcall	.-664    	; 0x1a90 <enqueueByDeadline>
    1d28:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <timerQ>
    1d2c:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <timerQ+0x1>
    1d30:	30 97       	sbiw	r30, 0x00	; 0
    1d32:	39 f1       	breq	.+78     	; 0x1d82 <__vector_7+0x114>
    1d34:	82 81       	ldd	r24, Z+2	; 0x02
    1d36:	93 81       	ldd	r25, Z+3	; 0x03
    1d38:	a4 81       	ldd	r26, Z+4	; 0x04
    1d3a:	b5 81       	ldd	r27, Z+5	; 0x05
    1d3c:	8c 19       	sub	r24, r12
    1d3e:	9d 09       	sbc	r25, r13
    1d40:	ae 09       	sbc	r26, r14
    1d42:	bf 09       	sbc	r27, r15
    1d44:	18 16       	cp	r1, r24
    1d46:	19 06       	cpc	r1, r25
    1d48:	1a 06       	cpc	r1, r26
    1d4a:	1b 06       	cpc	r1, r27
    1d4c:	3c f7       	brge	.-50     	; 0x1d1c <__vector_7+0xae>
    1d4e:	21 c0       	rjmp	.+66     	; 0x1d92 <__vector_7+0x124>
    1d50:	9c 01       	movw	r18, r24
    1d52:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1d56:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1d5a:	84 1b       	sub	r24, r20
    1d5c:	95 0b       	sbc	r25, r21
    1d5e:	01 97       	sbiw	r24, 0x01	; 1
    1d60:	31 f4       	brne	.+12     	; 0x1d6e <__vector_7+0x100>
    1d62:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1d66:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1d6a:	2f 5f       	subi	r18, 0xFF	; 255
    1d6c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d6e:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1d72:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1d76:	ef e6       	ldi	r30, 0x6F	; 111
    1d78:	f0 e0       	ldi	r31, 0x00	; 0
    1d7a:	80 81       	ld	r24, Z
    1d7c:	82 60       	ori	r24, 0x02	; 2
    1d7e:	80 83       	st	Z, r24
    1d80:	05 c0       	rjmp	.+10     	; 0x1d8c <__vector_7+0x11e>
    1d82:	ef e6       	ldi	r30, 0x6F	; 111
    1d84:	f0 e0       	ldi	r31, 0x00	; 0
    1d86:	80 81       	ld	r24, Z
    1d88:	8d 7f       	andi	r24, 0xFD	; 253
    1d8a:	80 83       	st	Z, r24
    1d8c:	0e 94 88 05 	call	0xb10	; 0xb10 <schedule>
    1d90:	0c c0       	rjmp	.+24     	; 0x1daa <__vector_7+0x13c>
    1d92:	82 81       	ldd	r24, Z+2	; 0x02
    1d94:	93 81       	ldd	r25, Z+3	; 0x03
    1d96:	a4 81       	ldd	r26, Z+4	; 0x04
    1d98:	b5 81       	ldd	r27, Z+5	; 0x05
    1d9a:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    1d9e:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    1da2:	2a 17       	cp	r18, r26
    1da4:	3b 07       	cpc	r19, r27
    1da6:	69 f7       	brne	.-38     	; 0x1d82 <__vector_7+0x114>
    1da8:	d3 cf       	rjmp	.-90     	; 0x1d50 <__vector_7+0xe2>
    1daa:	ff 91       	pop	r31
    1dac:	ef 91       	pop	r30
    1dae:	bf 91       	pop	r27
    1db0:	af 91       	pop	r26
    1db2:	9f 91       	pop	r25
    1db4:	8f 91       	pop	r24
    1db6:	7f 91       	pop	r23
    1db8:	6f 91       	pop	r22
    1dba:	5f 91       	pop	r21
    1dbc:	4f 91       	pop	r20
    1dbe:	3f 91       	pop	r19
    1dc0:	2f 91       	pop	r18
    1dc2:	ff 90       	pop	r15
    1dc4:	ef 90       	pop	r14
    1dc6:	df 90       	pop	r13
    1dc8:	cf 90       	pop	r12
    1dca:	0f 90       	pop	r0
    1dcc:	0f be       	out	0x3f, r0	; 63
    1dce:	0f 90       	pop	r0
    1dd0:	1f 90       	pop	r1
    1dd2:	18 95       	reti

00001dd4 <async>:
    1dd4:	3f 92       	push	r3
    1dd6:	4f 92       	push	r4
    1dd8:	5f 92       	push	r5
    1dda:	6f 92       	push	r6
    1ddc:	7f 92       	push	r7
    1dde:	8f 92       	push	r8
    1de0:	9f 92       	push	r9
    1de2:	af 92       	push	r10
    1de4:	bf 92       	push	r11
    1de6:	cf 92       	push	r12
    1de8:	df 92       	push	r13
    1dea:	ef 92       	push	r14
    1dec:	ff 92       	push	r15
    1dee:	0f 93       	push	r16
    1df0:	1f 93       	push	r17
    1df2:	cf 93       	push	r28
    1df4:	df 93       	push	r29
    1df6:	2b 01       	movw	r4, r22
    1df8:	3c 01       	movw	r6, r24
    1dfa:	49 01       	movw	r8, r18
    1dfc:	5a 01       	movw	r10, r20
    1dfe:	8f b7       	in	r24, 0x3f	; 63
    1e00:	80 78       	andi	r24, 0x80	; 128
    1e02:	38 2e       	mov	r3, r24
    1e04:	f8 94       	cli
    1e06:	82 e4       	ldi	r24, 0x42	; 66
    1e08:	91 e0       	ldi	r25, 0x01	; 1
    1e0a:	c8 de       	rcall	.-624    	; 0x1b9c <dequeue>
    1e0c:	ec 01       	movw	r28, r24
    1e0e:	1b 87       	std	Y+11, r17	; 0x0b
    1e10:	0a 87       	std	Y+10, r16	; 0x0a
    1e12:	fd 86       	std	Y+13, r15	; 0x0d
    1e14:	ec 86       	std	Y+12, r14	; 0x0c
    1e16:	df 86       	std	Y+15, r13	; 0x0f
    1e18:	ce 86       	std	Y+14, r12	; 0x0e
    1e1a:	33 20       	and	r3, r3
    1e1c:	61 f0       	breq	.+24     	; 0x1e36 <async+0x62>
    1e1e:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <current>
    1e22:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <current+0x1>
    1e26:	02 80       	ldd	r0, Z+2	; 0x02
    1e28:	f3 81       	ldd	r31, Z+3	; 0x03
    1e2a:	e0 2d       	mov	r30, r0
    1e2c:	82 81       	ldd	r24, Z+2	; 0x02
    1e2e:	93 81       	ldd	r25, Z+3	; 0x03
    1e30:	a4 81       	ldd	r26, Z+4	; 0x04
    1e32:	b5 81       	ldd	r27, Z+5	; 0x05
    1e34:	08 c0       	rjmp	.+16     	; 0x1e46 <async+0x72>
    1e36:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <timestamp>
    1e3a:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <timestamp+0x1>
    1e3e:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <timestamp+0x2>
    1e42:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <timestamp+0x3>
    1e46:	48 0e       	add	r4, r24
    1e48:	59 1e       	adc	r5, r25
    1e4a:	6a 1e       	adc	r6, r26
    1e4c:	7b 1e       	adc	r7, r27
    1e4e:	4a 82       	std	Y+2, r4	; 0x02
    1e50:	5b 82       	std	Y+3, r5	; 0x03
    1e52:	6c 82       	std	Y+4, r6	; 0x04
    1e54:	7d 82       	std	Y+5, r7	; 0x05
    1e56:	18 14       	cp	r1, r8
    1e58:	19 04       	cpc	r1, r9
    1e5a:	1a 04       	cpc	r1, r10
    1e5c:	1b 04       	cpc	r1, r11
    1e5e:	44 f0       	brlt	.+16     	; 0x1e70 <async+0x9c>
    1e60:	0f 2e       	mov	r0, r31
    1e62:	88 24       	eor	r8, r8
    1e64:	8a 94       	dec	r8
    1e66:	98 2c       	mov	r9, r8
    1e68:	a8 2c       	mov	r10, r8
    1e6a:	ff e7       	ldi	r31, 0x7F	; 127
    1e6c:	bf 2e       	mov	r11, r31
    1e6e:	f0 2d       	mov	r31, r0
    1e70:	84 0c       	add	r8, r4
    1e72:	95 1c       	adc	r9, r5
    1e74:	a6 1c       	adc	r10, r6
    1e76:	b7 1c       	adc	r11, r7
    1e78:	8e 82       	std	Y+6, r8	; 0x06
    1e7a:	9f 82       	std	Y+7, r9	; 0x07
    1e7c:	a8 86       	std	Y+8, r10	; 0x08
    1e7e:	b9 86       	std	Y+9, r11	; 0x09
    1e80:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <__data_end>
    1e84:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <__data_end+0x1>
    1e88:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1e8c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1e90:	b0 99       	sbic	0x16, 0	; 22
    1e92:	0e c0       	rjmp	.+28     	; 0x1eb0 <async+0xdc>
    1e94:	09 2e       	mov	r0, r25
    1e96:	00 0c       	add	r0, r0
    1e98:	aa 0b       	sbc	r26, r26
    1e9a:	bb 0b       	sbc	r27, r27
    1e9c:	dc 01       	movw	r26, r24
    1e9e:	99 27       	eor	r25, r25
    1ea0:	88 27       	eor	r24, r24
    1ea2:	60 e0       	ldi	r22, 0x00	; 0
    1ea4:	70 e0       	ldi	r23, 0x00	; 0
    1ea6:	84 2b       	or	r24, r20
    1ea8:	95 2b       	or	r25, r21
    1eaa:	a6 2b       	or	r26, r22
    1eac:	b7 2b       	or	r27, r23
    1eae:	13 c0       	rjmp	.+38     	; 0x1ed6 <async+0x102>
    1eb0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1eb4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1eb8:	01 96       	adiw	r24, 0x01	; 1
    1eba:	09 2e       	mov	r0, r25
    1ebc:	00 0c       	add	r0, r0
    1ebe:	aa 0b       	sbc	r26, r26
    1ec0:	bb 0b       	sbc	r27, r27
    1ec2:	dc 01       	movw	r26, r24
    1ec4:	99 27       	eor	r25, r25
    1ec6:	88 27       	eor	r24, r24
    1ec8:	a9 01       	movw	r20, r18
    1eca:	60 e0       	ldi	r22, 0x00	; 0
    1ecc:	70 e0       	ldi	r23, 0x00	; 0
    1ece:	84 2b       	or	r24, r20
    1ed0:	95 2b       	or	r25, r21
    1ed2:	a6 2b       	or	r26, r22
    1ed4:	b7 2b       	or	r27, r23
    1ed6:	48 1a       	sub	r4, r24
    1ed8:	59 0a       	sbc	r5, r25
    1eda:	6a 0a       	sbc	r6, r26
    1edc:	7b 0a       	sbc	r7, r27
    1ede:	14 14       	cp	r1, r4
    1ee0:	15 04       	cpc	r1, r5
    1ee2:	16 04       	cpc	r1, r6
    1ee4:	17 04       	cpc	r1, r7
    1ee6:	a4 f5       	brge	.+104    	; 0x1f50 <async+0x17c>
    1ee8:	6e e5       	ldi	r22, 0x5E	; 94
    1eea:	71 e0       	ldi	r23, 0x01	; 1
    1eec:	ce 01       	movw	r24, r28
    1eee:	13 de       	rcall	.-986    	; 0x1b16 <enqueueByBaseline>
    1ef0:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <timerQ>
    1ef4:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <timerQ+0x1>
    1ef8:	30 97       	sbiw	r30, 0x00	; 0
    1efa:	21 f1       	breq	.+72     	; 0x1f44 <async+0x170>
    1efc:	82 81       	ldd	r24, Z+2	; 0x02
    1efe:	93 81       	ldd	r25, Z+3	; 0x03
    1f00:	a4 81       	ldd	r26, Z+4	; 0x04
    1f02:	b5 81       	ldd	r27, Z+5	; 0x05
    1f04:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <__data_end>
    1f08:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <__data_end+0x1>
    1f0c:	2a 17       	cp	r18, r26
    1f0e:	3b 07       	cpc	r19, r27
    1f10:	c9 f4       	brne	.+50     	; 0x1f44 <async+0x170>
    1f12:	9c 01       	movw	r18, r24
    1f14:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1f18:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1f1c:	84 1b       	sub	r24, r20
    1f1e:	95 0b       	sbc	r25, r21
    1f20:	01 97       	sbiw	r24, 0x01	; 1
    1f22:	31 f4       	brne	.+12     	; 0x1f30 <async+0x15c>
    1f24:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1f28:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1f2c:	2f 5f       	subi	r18, 0xFF	; 255
    1f2e:	3f 4f       	sbci	r19, 0xFF	; 255
    1f30:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1f34:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1f38:	ef e6       	ldi	r30, 0x6F	; 111
    1f3a:	f0 e0       	ldi	r31, 0x00	; 0
    1f3c:	80 81       	ld	r24, Z
    1f3e:	82 60       	ori	r24, 0x02	; 2
    1f40:	80 83       	st	Z, r24
    1f42:	40 c0       	rjmp	.+128    	; 0x1fc4 <async+0x1f0>
    1f44:	ef e6       	ldi	r30, 0x6F	; 111
    1f46:	f0 e0       	ldi	r31, 0x00	; 0
    1f48:	80 81       	ld	r24, Z
    1f4a:	8d 7f       	andi	r24, 0xFD	; 253
    1f4c:	80 83       	st	Z, r24
    1f4e:	3a c0       	rjmp	.+116    	; 0x1fc4 <async+0x1f0>
    1f50:	60 e6       	ldi	r22, 0x60	; 96
    1f52:	71 e0       	ldi	r23, 0x01	; 1
    1f54:	ce 01       	movw	r24, r28
    1f56:	9c dd       	rcall	.-1224   	; 0x1a90 <enqueueByDeadline>
    1f58:	33 20       	and	r3, r3
    1f5a:	b9 f1       	breq	.+110    	; 0x1fca <async+0x1f6>
    1f5c:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <threadPool>
    1f60:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <threadPool+0x1>
    1f64:	00 97       	sbiw	r24, 0x00	; 0
    1f66:	81 f1       	breq	.+96     	; 0x1fc8 <async+0x1f4>
    1f68:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <activeStack>
    1f6c:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <activeStack+0x1>
    1f70:	20 91 60 01 	lds	r18, 0x0160	; 0x800160 <msgQ>
    1f74:	30 91 61 01 	lds	r19, 0x0161	; 0x800161 <msgQ+0x1>
    1f78:	02 81       	ldd	r16, Z+2	; 0x02
    1f7a:	13 81       	ldd	r17, Z+3	; 0x03
    1f7c:	d9 01       	movw	r26, r18
    1f7e:	16 96       	adiw	r26, 0x06	; 6
    1f80:	4d 91       	ld	r20, X+
    1f82:	5d 91       	ld	r21, X+
    1f84:	6d 91       	ld	r22, X+
    1f86:	7c 91       	ld	r23, X
    1f88:	19 97       	sbiw	r26, 0x09	; 9
    1f8a:	d8 01       	movw	r26, r16
    1f8c:	16 96       	adiw	r26, 0x06	; 6
    1f8e:	0d 91       	ld	r16, X+
    1f90:	1d 91       	ld	r17, X+
    1f92:	2d 91       	ld	r18, X+
    1f94:	3c 91       	ld	r19, X
    1f96:	19 97       	sbiw	r26, 0x09	; 9
    1f98:	40 1b       	sub	r20, r16
    1f9a:	51 0b       	sbc	r21, r17
    1f9c:	62 0b       	sbc	r22, r18
    1f9e:	73 0b       	sbc	r23, r19
    1fa0:	9a f4       	brpl	.+38     	; 0x1fc8 <async+0x1f4>
    1fa2:	dc 01       	movw	r26, r24
    1fa4:	2d 91       	ld	r18, X+
    1fa6:	3c 91       	ld	r19, X
    1fa8:	11 97       	sbiw	r26, 0x01	; 1
    1faa:	30 93 41 01 	sts	0x0141, r19	; 0x800141 <threadPool+0x1>
    1fae:	20 93 40 01 	sts	0x0140, r18	; 0x800140 <threadPool>
    1fb2:	ed 93       	st	X+, r30
    1fb4:	fc 93       	st	X, r31
    1fb6:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <activeStack+0x1>
    1fba:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <activeStack>
    1fbe:	0e 94 68 05 	call	0xad0	; 0xad0 <dispatch>
    1fc2:	02 c0       	rjmp	.+4      	; 0x1fc8 <async+0x1f4>
    1fc4:	33 20       	and	r3, r3
    1fc6:	09 f0       	breq	.+2      	; 0x1fca <async+0x1f6>
    1fc8:	78 94       	sei
    1fca:	ce 01       	movw	r24, r28
    1fcc:	df 91       	pop	r29
    1fce:	cf 91       	pop	r28
    1fd0:	1f 91       	pop	r17
    1fd2:	0f 91       	pop	r16
    1fd4:	ff 90       	pop	r15
    1fd6:	ef 90       	pop	r14
    1fd8:	df 90       	pop	r13
    1fda:	cf 90       	pop	r12
    1fdc:	bf 90       	pop	r11
    1fde:	af 90       	pop	r10
    1fe0:	9f 90       	pop	r9
    1fe2:	8f 90       	pop	r8
    1fe4:	7f 90       	pop	r7
    1fe6:	6f 90       	pop	r6
    1fe8:	5f 90       	pop	r5
    1fea:	4f 90       	pop	r4
    1fec:	3f 90       	pop	r3
    1fee:	08 95       	ret

00001ff0 <sync>:
    1ff0:	af 92       	push	r10
    1ff2:	bf 92       	push	r11
    1ff4:	cf 92       	push	r12
    1ff6:	df 92       	push	r13
    1ff8:	ff 92       	push	r15
    1ffa:	0f 93       	push	r16
    1ffc:	1f 93       	push	r17
    1ffe:	cf 93       	push	r28
    2000:	df 93       	push	r29
    2002:	8c 01       	movw	r16, r24
    2004:	6b 01       	movw	r12, r22
    2006:	5a 01       	movw	r10, r20
    2008:	8f b7       	in	r24, 0x3f	; 63
    200a:	80 78       	andi	r24, 0x80	; 128
    200c:	f8 2e       	mov	r15, r24
    200e:	f8 94       	cli
    2010:	d8 01       	movw	r26, r16
    2012:	cd 91       	ld	r28, X+
    2014:	dc 91       	ld	r29, X
    2016:	20 97       	sbiw	r28, 0x00	; 0
    2018:	71 f1       	breq	.+92     	; 0x2076 <sync+0x86>
    201a:	ac 81       	ldd	r26, Y+4	; 0x04
    201c:	bd 81       	ldd	r27, Y+5	; 0x05
    201e:	10 97       	sbiw	r26, 0x00	; 0
    2020:	31 f0       	breq	.+12     	; 0x202e <sync+0x3e>
    2022:	cd 91       	ld	r28, X+
    2024:	dc 91       	ld	r29, X
    2026:	ac 81       	ldd	r26, Y+4	; 0x04
    2028:	bd 81       	ldd	r27, Y+5	; 0x05
    202a:	10 97       	sbiw	r26, 0x00	; 0
    202c:	d1 f7       	brne	.-12     	; 0x2022 <sync+0x32>
    202e:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <current>
    2032:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <current+0x1>
    2036:	ce 17       	cp	r28, r30
    2038:	df 07       	cpc	r29, r31
    203a:	21 f0       	breq	.+8      	; 0x2044 <sync+0x54>
    203c:	ff 20       	and	r15, r15
    203e:	09 f4       	brne	.+2      	; 0x2042 <sync+0x52>
    2040:	4d c0       	rjmp	.+154    	; 0x20dc <sync+0xec>
    2042:	07 c0       	rjmp	.+14     	; 0x2052 <sync+0x62>
    2044:	ff 20       	and	r15, r15
    2046:	09 f4       	brne	.+2      	; 0x204a <sync+0x5a>
    2048:	4c c0       	rjmp	.+152    	; 0x20e2 <sync+0xf2>
    204a:	78 94       	sei
    204c:	8f ef       	ldi	r24, 0xFF	; 255
    204e:	9f ef       	ldi	r25, 0xFF	; 255
    2050:	66 c0       	rjmp	.+204    	; 0x211e <sync+0x12e>
    2052:	d8 01       	movw	r26, r16
    2054:	12 96       	adiw	r26, 0x02	; 2
    2056:	8d 91       	ld	r24, X+
    2058:	9c 91       	ld	r25, X
    205a:	13 97       	sbiw	r26, 0x03	; 3
    205c:	00 97       	sbiw	r24, 0x00	; 0
    205e:	09 f4       	brne	.+2      	; 0x2062 <sync+0x72>
    2060:	46 c0       	rjmp	.+140    	; 0x20ee <sync+0xfe>
    2062:	dc 01       	movw	r26, r24
    2064:	15 96       	adiw	r26, 0x05	; 5
    2066:	1c 92       	st	X, r1
    2068:	1e 92       	st	-X, r1
    206a:	14 97       	sbiw	r26, 0x04	; 4
    206c:	40 c0       	rjmp	.+128    	; 0x20ee <sync+0xfe>
    206e:	78 94       	sei
    2070:	80 e0       	ldi	r24, 0x00	; 0
    2072:	90 e0       	ldi	r25, 0x00	; 0
    2074:	54 c0       	rjmp	.+168    	; 0x211e <sync+0x12e>
    2076:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <current>
    207a:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <current+0x1>
    207e:	f8 01       	movw	r30, r16
    2080:	91 83       	std	Z+1, r25	; 0x01
    2082:	80 83       	st	Z, r24
    2084:	ff 20       	and	r15, r15
    2086:	41 f0       	breq	.+16     	; 0x2098 <sync+0xa8>
    2088:	d8 01       	movw	r26, r16
    208a:	12 96       	adiw	r26, 0x02	; 2
    208c:	8d 91       	ld	r24, X+
    208e:	9c 91       	ld	r25, X
    2090:	13 97       	sbiw	r26, 0x03	; 3
    2092:	01 97       	sbiw	r24, 0x01	; 1
    2094:	09 f0       	breq	.+2      	; 0x2098 <sync+0xa8>
    2096:	78 94       	sei
    2098:	b5 01       	movw	r22, r10
    209a:	c8 01       	movw	r24, r16
    209c:	f6 01       	movw	r30, r12
    209e:	09 95       	icall
    20a0:	d8 2f       	mov	r29, r24
    20a2:	c9 2f       	mov	r28, r25
    20a4:	8f b7       	in	r24, 0x3f	; 63
    20a6:	f8 94       	cli
    20a8:	d8 01       	movw	r26, r16
    20aa:	11 96       	adiw	r26, 0x01	; 1
    20ac:	1c 92       	st	X, r1
    20ae:	1e 92       	st	-X, r1
    20b0:	12 96       	adiw	r26, 0x02	; 2
    20b2:	8d 91       	ld	r24, X+
    20b4:	9c 91       	ld	r25, X
    20b6:	13 97       	sbiw	r26, 0x03	; 3
    20b8:	82 30       	cpi	r24, 0x02	; 2
    20ba:	91 05       	cpc	r25, r1
    20bc:	48 f0       	brcs	.+18     	; 0x20d0 <sync+0xe0>
    20be:	13 96       	adiw	r26, 0x03	; 3
    20c0:	1c 92       	st	X, r1
    20c2:	1e 92       	st	-X, r1
    20c4:	12 97       	sbiw	r26, 0x02	; 2
    20c6:	fc 01       	movw	r30, r24
    20c8:	15 82       	std	Z+5, r1	; 0x05
    20ca:	14 82       	std	Z+4, r1	; 0x04
    20cc:	0e 94 68 05 	call	0xad0	; 0xad0 <dispatch>
    20d0:	ff 20       	and	r15, r15
    20d2:	51 f0       	breq	.+20     	; 0x20e8 <sync+0xf8>
    20d4:	78 94       	sei
    20d6:	8d 2f       	mov	r24, r29
    20d8:	9c 2f       	mov	r25, r28
    20da:	21 c0       	rjmp	.+66     	; 0x211e <sync+0x12e>
    20dc:	8f ef       	ldi	r24, 0xFF	; 255
    20de:	9f ef       	ldi	r25, 0xFF	; 255
    20e0:	1e c0       	rjmp	.+60     	; 0x211e <sync+0x12e>
    20e2:	8f ef       	ldi	r24, 0xFF	; 255
    20e4:	9f ef       	ldi	r25, 0xFF	; 255
    20e6:	1b c0       	rjmp	.+54     	; 0x211e <sync+0x12e>
    20e8:	8d 2f       	mov	r24, r29
    20ea:	9c 2f       	mov	r25, r28
    20ec:	18 c0       	rjmp	.+48     	; 0x211e <sync+0x12e>
    20ee:	d8 01       	movw	r26, r16
    20f0:	13 96       	adiw	r26, 0x03	; 3
    20f2:	fc 93       	st	X, r31
    20f4:	ee 93       	st	-X, r30
    20f6:	12 97       	sbiw	r26, 0x02	; 2
    20f8:	15 83       	std	Z+5, r17	; 0x05
    20fa:	04 83       	std	Z+4, r16	; 0x04
    20fc:	ce 01       	movw	r24, r28
    20fe:	0e 94 68 05 	call	0xad0	; 0xad0 <dispatch>
    2102:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <current>
    2106:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <current+0x1>
    210a:	82 81       	ldd	r24, Z+2	; 0x02
    210c:	93 81       	ldd	r25, Z+3	; 0x03
    210e:	89 2b       	or	r24, r25
    2110:	09 f4       	brne	.+2      	; 0x2114 <sync+0x124>
    2112:	ad cf       	rjmp	.-166    	; 0x206e <sync+0x7e>
    2114:	cf 01       	movw	r24, r30
    2116:	f8 01       	movw	r30, r16
    2118:	91 83       	std	Z+1, r25	; 0x01
    211a:	80 83       	st	Z, r24
    211c:	b5 cf       	rjmp	.-150    	; 0x2088 <sync+0x98>
    211e:	df 91       	pop	r29
    2120:	cf 91       	pop	r28
    2122:	1f 91       	pop	r17
    2124:	0f 91       	pop	r16
    2126:	ff 90       	pop	r15
    2128:	df 90       	pop	r13
    212a:	cf 90       	pop	r12
    212c:	bf 90       	pop	r11
    212e:	af 90       	pop	r10
    2130:	08 95       	ret

00002132 <run>:
    2132:	00 91 3c 01 	lds	r16, 0x013C	; 0x80013c <current>
    2136:	10 91 3d 01 	lds	r17, 0x013D	; 0x80013d <current+0x1>
    213a:	80 e6       	ldi	r24, 0x60	; 96
    213c:	91 e0       	ldi	r25, 0x01	; 1
    213e:	2e dd       	rcall	.-1444   	; 0x1b9c <dequeue>
    2140:	ec 01       	movw	r28, r24
    2142:	d8 01       	movw	r26, r16
    2144:	13 96       	adiw	r26, 0x03	; 3
    2146:	9c 93       	st	X, r25
    2148:	8e 93       	st	-X, r24
    214a:	12 97       	sbiw	r26, 0x02	; 2
    214c:	78 94       	sei
    214e:	4e 85       	ldd	r20, Y+14	; 0x0e
    2150:	5f 85       	ldd	r21, Y+15	; 0x0f
    2152:	6c 85       	ldd	r22, Y+12	; 0x0c
    2154:	7d 85       	ldd	r23, Y+13	; 0x0d
    2156:	8a 85       	ldd	r24, Y+10	; 0x0a
    2158:	9b 85       	ldd	r25, Y+11	; 0x0b
    215a:	4a df       	rcall	.-364    	; 0x1ff0 <sync>
    215c:	8f b7       	in	r24, 0x3f	; 63
    215e:	f8 94       	cli
    2160:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <msgPool>
    2164:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <msgPool+0x1>
    2168:	99 83       	std	Y+1, r25	; 0x01
    216a:	88 83       	st	Y, r24
    216c:	d0 93 43 01 	sts	0x0143, r29	; 0x800143 <msgPool+0x1>
    2170:	c0 93 42 01 	sts	0x0142, r28	; 0x800142 <msgPool>
    2174:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <activeStack>
    2178:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <activeStack+0x1>
    217c:	00 81       	ld	r16, Z
    217e:	11 81       	ldd	r17, Z+1	; 0x01
    2180:	e8 01       	movw	r28, r16
    2182:	2a 81       	ldd	r18, Y+2	; 0x02
    2184:	3b 81       	ldd	r19, Y+3	; 0x03
    2186:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <msgQ>
    218a:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <msgQ+0x1>
    218e:	10 97       	sbiw	r26, 0x00	; 0
    2190:	c1 f0       	breq	.+48     	; 0x21c2 <run+0x90>
    2192:	21 15       	cp	r18, r1
    2194:	31 05       	cpc	r19, r1
    2196:	69 f2       	breq	.-102    	; 0x2132 <run>
    2198:	16 96       	adiw	r26, 0x06	; 6
    219a:	8d 91       	ld	r24, X+
    219c:	9d 91       	ld	r25, X+
    219e:	0d 90       	ld	r0, X+
    21a0:	bc 91       	ld	r27, X
    21a2:	a0 2d       	mov	r26, r0
    21a4:	e9 01       	movw	r28, r18
    21a6:	4e 81       	ldd	r20, Y+6	; 0x06
    21a8:	5f 81       	ldd	r21, Y+7	; 0x07
    21aa:	68 85       	ldd	r22, Y+8	; 0x08
    21ac:	79 85       	ldd	r23, Y+9	; 0x09
    21ae:	84 1b       	sub	r24, r20
    21b0:	95 0b       	sbc	r25, r21
    21b2:	a6 0b       	sbc	r26, r22
    21b4:	b7 0b       	sbc	r27, r23
    21b6:	18 16       	cp	r1, r24
    21b8:	19 06       	cpc	r1, r25
    21ba:	1a 06       	cpc	r1, r26
    21bc:	1b 06       	cpc	r1, r27
    21be:	0c f0       	brlt	.+2      	; 0x21c2 <run+0x90>
    21c0:	b8 cf       	rjmp	.-144    	; 0x2132 <run>
    21c2:	10 93 3f 01 	sts	0x013F, r17	; 0x80013f <activeStack+0x1>
    21c6:	00 93 3e 01 	sts	0x013E, r16	; 0x80013e <activeStack>
    21ca:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <threadPool>
    21ce:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <threadPool+0x1>
    21d2:	91 83       	std	Z+1, r25	; 0x01
    21d4:	80 83       	st	Z, r24
    21d6:	f0 93 41 01 	sts	0x0141, r31	; 0x800141 <threadPool+0x1>
    21da:	e0 93 40 01 	sts	0x0140, r30	; 0x800140 <threadPool>
    21de:	a0 91 3e 01 	lds	r26, 0x013E	; 0x80013e <activeStack>
    21e2:	b0 91 3f 01 	lds	r27, 0x013F	; 0x80013f <activeStack+0x1>
    21e6:	14 96       	adiw	r26, 0x04	; 4
    21e8:	ed 91       	ld	r30, X+
    21ea:	fc 91       	ld	r31, X
    21ec:	15 97       	sbiw	r26, 0x05	; 5
    21ee:	30 97       	sbiw	r30, 0x00	; 0
    21f0:	41 f0       	breq	.+16     	; 0x2202 <run+0xd0>
    21f2:	a0 81       	ld	r26, Z
    21f4:	b1 81       	ldd	r27, Z+1	; 0x01
    21f6:	14 96       	adiw	r26, 0x04	; 4
    21f8:	ed 91       	ld	r30, X+
    21fa:	fc 91       	ld	r31, X
    21fc:	15 97       	sbiw	r26, 0x05	; 5
    21fe:	30 97       	sbiw	r30, 0x00	; 0
    2200:	c1 f7       	brne	.-16     	; 0x21f2 <run+0xc0>
    2202:	cd 01       	movw	r24, r26
    2204:	0e 94 68 05 	call	0xad0	; 0xad0 <dispatch>
    2208:	94 cf       	rjmp	.-216    	; 0x2132 <run>

0000220a <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    220a:	42 31       	cpi	r20, 0x12	; 18
    220c:	b8 f4       	brcc	.+46     	; 0x223c <install+0x32>
        char status;
        DISABLE(status);
    220e:	2f b7       	in	r18, 0x3f	; 63
    2210:	f8 94       	cli
        otable[i] = obj;
    2212:	50 e0       	ldi	r21, 0x00	; 0
    2214:	44 0f       	add	r20, r20
    2216:	55 1f       	adc	r21, r21
    2218:	fa 01       	movw	r30, r20
    221a:	ee 59       	subi	r30, 0x9E	; 158
    221c:	fe 4f       	sbci	r31, 0xFE	; 254
    221e:	91 83       	std	Z+1, r25	; 0x01
    2220:	80 83       	st	Z, r24
        mtable[i] = m;
    2222:	fa 01       	movw	r30, r20
    2224:	e6 50       	subi	r30, 0x06	; 6
    2226:	fe 4f       	sbci	r31, 0xFE	; 254
    2228:	71 83       	std	Z+1, r23	; 0x01
    222a:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    222c:	41 e0       	ldi	r20, 0x01	; 1
    222e:	50 e0       	ldi	r21, 0x00	; 0
    2230:	fc 01       	movw	r30, r24
    2232:	53 83       	std	Z+3, r21	; 0x03
    2234:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    2236:	22 23       	and	r18, r18
    2238:	0c f4       	brge	.+2      	; 0x223c <install+0x32>
    223a:	78 94       	sei
    223c:	08 95       	ret

0000223e <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    223e:	8c 01       	movw	r16, r24
    2240:	eb 01       	movw	r28, r22
    2242:	7a 01       	movw	r14, r20
    char status;
    DISABLE(status);
    2244:	8f b7       	in	r24, 0x3f	; 63
    2246:	f8 94       	cli
    initialize();
    2248:	0e 94 fd 04 	call	0x9fa	; 0x9fa <initialize>
    ENABLE(1);
    224c:	78 94       	sei
    if (m != NULL)
    224e:	20 97       	sbiw	r28, 0x00	; 0
    2250:	21 f0       	breq	.+8      	; 0x225a <tinytimber+0x1c>
        m(obj, arg);
    2252:	b7 01       	movw	r22, r14
    2254:	c8 01       	movw	r24, r16
    2256:	fe 01       	movw	r30, r28
    2258:	09 95       	icall
    DISABLE(status);
    225a:	8f b7       	in	r24, 0x3f	; 63
    225c:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    225e:	0e 94 88 05 	call	0xb10	; 0xb10 <schedule>
    ENABLE(1);
    2262:	78 94       	sei
    while (1) {
        SLEEP();
    2264:	81 e0       	ldi	r24, 0x01	; 1
    2266:	83 bf       	out	0x33, r24	; 51
    2268:	88 95       	sleep
    226a:	fd cf       	rjmp	.-6      	; 0x2266 <tinytimber+0x28>

0000226c <__divmodhi4>:
    226c:	97 fb       	bst	r25, 7
    226e:	07 2e       	mov	r0, r23
    2270:	16 f4       	brtc	.+4      	; 0x2276 <__divmodhi4+0xa>
    2272:	00 94       	com	r0
    2274:	06 d0       	rcall	.+12     	; 0x2282 <__divmodhi4_neg1>
    2276:	77 fd       	sbrc	r23, 7
    2278:	08 d0       	rcall	.+16     	; 0x228a <__divmodhi4_neg2>
    227a:	37 d0       	rcall	.+110    	; 0x22ea <__udivmodhi4>
    227c:	07 fc       	sbrc	r0, 7
    227e:	05 d0       	rcall	.+10     	; 0x228a <__divmodhi4_neg2>
    2280:	3e f4       	brtc	.+14     	; 0x2290 <__divmodhi4_exit>

00002282 <__divmodhi4_neg1>:
    2282:	90 95       	com	r25
    2284:	81 95       	neg	r24
    2286:	9f 4f       	sbci	r25, 0xFF	; 255
    2288:	08 95       	ret

0000228a <__divmodhi4_neg2>:
    228a:	70 95       	com	r23
    228c:	61 95       	neg	r22
    228e:	7f 4f       	sbci	r23, 0xFF	; 255

00002290 <__divmodhi4_exit>:
    2290:	08 95       	ret

00002292 <__divmodsi4>:
    2292:	05 2e       	mov	r0, r21
    2294:	97 fb       	bst	r25, 7
    2296:	16 f4       	brtc	.+4      	; 0x229c <__divmodsi4+0xa>
    2298:	00 94       	com	r0
    229a:	0f d0       	rcall	.+30     	; 0x22ba <__negsi2>
    229c:	57 fd       	sbrc	r21, 7
    229e:	05 d0       	rcall	.+10     	; 0x22aa <__divmodsi4_neg2>
    22a0:	38 d0       	rcall	.+112    	; 0x2312 <__udivmodsi4>
    22a2:	07 fc       	sbrc	r0, 7
    22a4:	02 d0       	rcall	.+4      	; 0x22aa <__divmodsi4_neg2>
    22a6:	46 f4       	brtc	.+16     	; 0x22b8 <__divmodsi4_exit>
    22a8:	08 c0       	rjmp	.+16     	; 0x22ba <__negsi2>

000022aa <__divmodsi4_neg2>:
    22aa:	50 95       	com	r21
    22ac:	40 95       	com	r20
    22ae:	30 95       	com	r19
    22b0:	21 95       	neg	r18
    22b2:	3f 4f       	sbci	r19, 0xFF	; 255
    22b4:	4f 4f       	sbci	r20, 0xFF	; 255
    22b6:	5f 4f       	sbci	r21, 0xFF	; 255

000022b8 <__divmodsi4_exit>:
    22b8:	08 95       	ret

000022ba <__negsi2>:
    22ba:	90 95       	com	r25
    22bc:	80 95       	com	r24
    22be:	70 95       	com	r23
    22c0:	61 95       	neg	r22
    22c2:	7f 4f       	sbci	r23, 0xFF	; 255
    22c4:	8f 4f       	sbci	r24, 0xFF	; 255
    22c6:	9f 4f       	sbci	r25, 0xFF	; 255
    22c8:	08 95       	ret

000022ca <__usmulhisi3>:
    22ca:	45 d0       	rcall	.+138    	; 0x2356 <__umulhisi3>

000022cc <__usmulhisi3_tail>:
    22cc:	b7 ff       	sbrs	r27, 7
    22ce:	08 95       	ret
    22d0:	82 1b       	sub	r24, r18
    22d2:	93 0b       	sbc	r25, r19
    22d4:	08 95       	ret

000022d6 <__muluhisi3>:
    22d6:	3f d0       	rcall	.+126    	; 0x2356 <__umulhisi3>
    22d8:	a5 9f       	mul	r26, r21
    22da:	90 0d       	add	r25, r0
    22dc:	b4 9f       	mul	r27, r20
    22de:	90 0d       	add	r25, r0
    22e0:	a4 9f       	mul	r26, r20
    22e2:	80 0d       	add	r24, r0
    22e4:	91 1d       	adc	r25, r1
    22e6:	11 24       	eor	r1, r1
    22e8:	08 95       	ret

000022ea <__udivmodhi4>:
    22ea:	aa 1b       	sub	r26, r26
    22ec:	bb 1b       	sub	r27, r27
    22ee:	51 e1       	ldi	r21, 0x11	; 17
    22f0:	07 c0       	rjmp	.+14     	; 0x2300 <__udivmodhi4_ep>

000022f2 <__udivmodhi4_loop>:
    22f2:	aa 1f       	adc	r26, r26
    22f4:	bb 1f       	adc	r27, r27
    22f6:	a6 17       	cp	r26, r22
    22f8:	b7 07       	cpc	r27, r23
    22fa:	10 f0       	brcs	.+4      	; 0x2300 <__udivmodhi4_ep>
    22fc:	a6 1b       	sub	r26, r22
    22fe:	b7 0b       	sbc	r27, r23

00002300 <__udivmodhi4_ep>:
    2300:	88 1f       	adc	r24, r24
    2302:	99 1f       	adc	r25, r25
    2304:	5a 95       	dec	r21
    2306:	a9 f7       	brne	.-22     	; 0x22f2 <__udivmodhi4_loop>
    2308:	80 95       	com	r24
    230a:	90 95       	com	r25
    230c:	bc 01       	movw	r22, r24
    230e:	cd 01       	movw	r24, r26
    2310:	08 95       	ret

00002312 <__udivmodsi4>:
    2312:	a1 e2       	ldi	r26, 0x21	; 33
    2314:	1a 2e       	mov	r1, r26
    2316:	aa 1b       	sub	r26, r26
    2318:	bb 1b       	sub	r27, r27
    231a:	fd 01       	movw	r30, r26
    231c:	0d c0       	rjmp	.+26     	; 0x2338 <__udivmodsi4_ep>

0000231e <__udivmodsi4_loop>:
    231e:	aa 1f       	adc	r26, r26
    2320:	bb 1f       	adc	r27, r27
    2322:	ee 1f       	adc	r30, r30
    2324:	ff 1f       	adc	r31, r31
    2326:	a2 17       	cp	r26, r18
    2328:	b3 07       	cpc	r27, r19
    232a:	e4 07       	cpc	r30, r20
    232c:	f5 07       	cpc	r31, r21
    232e:	20 f0       	brcs	.+8      	; 0x2338 <__udivmodsi4_ep>
    2330:	a2 1b       	sub	r26, r18
    2332:	b3 0b       	sbc	r27, r19
    2334:	e4 0b       	sbc	r30, r20
    2336:	f5 0b       	sbc	r31, r21

00002338 <__udivmodsi4_ep>:
    2338:	66 1f       	adc	r22, r22
    233a:	77 1f       	adc	r23, r23
    233c:	88 1f       	adc	r24, r24
    233e:	99 1f       	adc	r25, r25
    2340:	1a 94       	dec	r1
    2342:	69 f7       	brne	.-38     	; 0x231e <__udivmodsi4_loop>
    2344:	60 95       	com	r22
    2346:	70 95       	com	r23
    2348:	80 95       	com	r24
    234a:	90 95       	com	r25
    234c:	9b 01       	movw	r18, r22
    234e:	ac 01       	movw	r20, r24
    2350:	bd 01       	movw	r22, r26
    2352:	cf 01       	movw	r24, r30
    2354:	08 95       	ret

00002356 <__umulhisi3>:
    2356:	a2 9f       	mul	r26, r18
    2358:	b0 01       	movw	r22, r0
    235a:	b3 9f       	mul	r27, r19
    235c:	c0 01       	movw	r24, r0
    235e:	a3 9f       	mul	r26, r19
    2360:	70 0d       	add	r23, r0
    2362:	81 1d       	adc	r24, r1
    2364:	11 24       	eor	r1, r1
    2366:	91 1d       	adc	r25, r1
    2368:	b2 9f       	mul	r27, r18
    236a:	70 0d       	add	r23, r0
    236c:	81 1d       	adc	r24, r1
    236e:	11 24       	eor	r1, r1
    2370:	91 1d       	adc	r25, r1
    2372:	08 95       	ret

00002374 <setjmp>:
    2374:	dc 01       	movw	r26, r24
    2376:	2d 92       	st	X+, r2
    2378:	3d 92       	st	X+, r3
    237a:	4d 92       	st	X+, r4
    237c:	5d 92       	st	X+, r5
    237e:	6d 92       	st	X+, r6
    2380:	7d 92       	st	X+, r7
    2382:	8d 92       	st	X+, r8
    2384:	9d 92       	st	X+, r9
    2386:	ad 92       	st	X+, r10
    2388:	bd 92       	st	X+, r11
    238a:	cd 92       	st	X+, r12
    238c:	dd 92       	st	X+, r13
    238e:	ed 92       	st	X+, r14
    2390:	fd 92       	st	X+, r15
    2392:	0d 93       	st	X+, r16
    2394:	1d 93       	st	X+, r17
    2396:	cd 93       	st	X+, r28
    2398:	dd 93       	st	X+, r29
    239a:	ff 91       	pop	r31
    239c:	ef 91       	pop	r30
    239e:	8d b7       	in	r24, 0x3d	; 61
    23a0:	8d 93       	st	X+, r24
    23a2:	8e b7       	in	r24, 0x3e	; 62
    23a4:	8d 93       	st	X+, r24
    23a6:	8f b7       	in	r24, 0x3f	; 63
    23a8:	8d 93       	st	X+, r24
    23aa:	ed 93       	st	X+, r30
    23ac:	fd 93       	st	X+, r31
    23ae:	88 27       	eor	r24, r24
    23b0:	99 27       	eor	r25, r25
    23b2:	09 94       	ijmp

000023b4 <longjmp>:
    23b4:	dc 01       	movw	r26, r24
    23b6:	cb 01       	movw	r24, r22
    23b8:	81 30       	cpi	r24, 0x01	; 1
    23ba:	91 05       	cpc	r25, r1
    23bc:	81 1d       	adc	r24, r1
    23be:	2d 90       	ld	r2, X+
    23c0:	3d 90       	ld	r3, X+
    23c2:	4d 90       	ld	r4, X+
    23c4:	5d 90       	ld	r5, X+
    23c6:	6d 90       	ld	r6, X+
    23c8:	7d 90       	ld	r7, X+
    23ca:	8d 90       	ld	r8, X+
    23cc:	9d 90       	ld	r9, X+
    23ce:	ad 90       	ld	r10, X+
    23d0:	bd 90       	ld	r11, X+
    23d2:	cd 90       	ld	r12, X+
    23d4:	dd 90       	ld	r13, X+
    23d6:	ed 90       	ld	r14, X+
    23d8:	fd 90       	ld	r15, X+
    23da:	0d 91       	ld	r16, X+
    23dc:	1d 91       	ld	r17, X+
    23de:	cd 91       	ld	r28, X+
    23e0:	dd 91       	ld	r29, X+
    23e2:	ed 91       	ld	r30, X+
    23e4:	fd 91       	ld	r31, X+
    23e6:	0d 90       	ld	r0, X+
    23e8:	f8 94       	cli
    23ea:	fe bf       	out	0x3e, r31	; 62
    23ec:	0f be       	out	0x3f, r0	; 63
    23ee:	ed bf       	out	0x3d, r30	; 61
    23f0:	ed 91       	ld	r30, X+
    23f2:	fd 91       	ld	r31, X+
    23f4:	09 94       	ijmp

000023f6 <_exit>:
    23f6:	f8 94       	cli

000023f8 <__stop_program>:
    23f8:	ff cf       	rjmp	.-2      	; 0x23f8 <__stop_program>
